gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.9.4 #5595 (Nov 14 2013) (UNIX)
               00004 ; This file was generated Sat Nov 16 13:27:58 2013
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f97j60
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _config_mode_clock
               00016         global _update_display
               00017         global _toggle_led
               00018         global _init_config
               00019         global _display_config_mode
               00020         global _init_time
               00021         global _read_and_clear
               00022         global _get_input
               00023         global _display_string
               00024         global _to_double_digits
               00025         global _init
               00026         global __time
               00027         global __alarm
               00028         global _display_line
               00029         global _alarm_going_off
               00030         global _alarm_counter
               00031         global _overflow_counter
               00032         global _but1_pressed
               00033         global _but2_pressed
               00034         global _config_mode_on
               00035         global _main
               00036         global _alarm_led
               00037         global _highPriorityInterruptHandler
               00038 
               00039 ;--------------------------------------------------------
               00040 ; extern variables in this module
               00041 ;--------------------------------------------------------
               00042         extern __gptrget2
               00043         extern __gptrput2
               00044         extern __gptrget1
               00045         extern __gptrput1
               00046         extern _stdin
               00047         extern _stdout
               00048         extern _EBSTCONbits
               00049         extern _MISTATbits
               00050         extern _EFLOCONbits
               00051         extern _MACON1bits
               00052         extern _MACON2bits
               00053         extern _MACON3bits
               00054         extern _MACON4bits
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         extern _MACLCON1bits
               00056         extern _MACLCON2bits
               00057         extern _MICONbits
               00058         extern _MICMDbits
               00059         extern _EWOLIEbits
               00060         extern _EWOLIRbits
               00061         extern _ERXFCONbits
               00062         extern _EIEbits
               00063         extern _ESTATbits
               00064         extern _ECON2bits
               00065         extern _EIRbits
               00066         extern _EDATAbits
               00067         extern _SSP2CON2bits
               00068         extern _SSP2CON1bits
               00069         extern _SSP2STATbits
               00070         extern _ECCP2DELbits
               00071         extern _ECCP2ASbits
               00072         extern _ECCP3DELbits
               00073         extern _ECCP3ASbits
               00074         extern _RCSTA2bits
               00075         extern _TXSTA2bits
               00076         extern _CCP5CONbits
               00077         extern _CCP4CONbits
               00078         extern _T4CONbits
               00079         extern _ECCP1DELbits
               00080         extern _BAUDCON2bits
               00081         extern _BAUDCTL2bits
               00082         extern _BAUDCONbits
               00083         extern _BAUDCON1bits
               00084         extern _BAUDCTLbits
               00085         extern _BAUDCTL1bits
               00086         extern _PORTAbits
               00087         extern _PORTBbits
               00088         extern _PORTCbits
               00089         extern _PORTDbits
               00090         extern _PORTEbits
               00091         extern _PORTFbits
               00092         extern _PORTGbits
               00093         extern _PORTHbits
               00094         extern _PORTJbits
               00095         extern _LATAbits
               00096         extern _LATBbits
               00097         extern _LATCbits
               00098         extern _LATDbits
               00099         extern _LATEbits
               00100         extern _LATFbits
               00101         extern _LATGbits
               00102         extern _LATHbits
               00103         extern _LATJbits
               00104         extern _DDRAbits
               00105         extern _TRISAbits
               00106         extern _DDRBbits
               00107         extern _TRISBbits
               00108         extern _DDRCbits
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _TRISCbits
               00110         extern _DDRDbits
               00111         extern _TRISDbits
               00112         extern _DDREbits
               00113         extern _TRISEbits
               00114         extern _DDRFbits
               00115         extern _TRISFbits
               00116         extern _DDRGbits
               00117         extern _TRISGbits
               00118         extern _DDRHbits
               00119         extern _TRISHbits
               00120         extern _DDRJbits
               00121         extern _TRISJbits
               00122         extern _OSCTUNEbits
               00123         extern _MEMCONbits
               00124         extern _PIE1bits
               00125         extern _PIR1bits
               00126         extern _IPR1bits
               00127         extern _PIE2bits
               00128         extern _PIR2bits
               00129         extern _IPR2bits
               00130         extern _PIE3bits
               00131         extern _PIR3bits
               00132         extern _IPR3bits
               00133         extern _EECON1bits
               00134         extern _RCSTAbits
               00135         extern _RCSTA1bits
               00136         extern _TXSTAbits
               00137         extern _TXSTA1bits
               00138         extern _PSPCONbits
               00139         extern _T3CONbits
               00140         extern _CMCONbits
               00141         extern _CVRCONbits
               00142         extern _ECCP1ASbits
               00143         extern _CCP3CONbits
               00144         extern _ECCP3CONbits
               00145         extern _CCP2CONbits
               00146         extern _ECCP2CONbits
               00147         extern _CCP1CONbits
               00148         extern _ECCP1CONbits
               00149         extern _ADCON2bits
               00150         extern _ADCON1bits
               00151         extern _ADCON0bits
               00152         extern _SSP1CON2bits
               00153         extern _SSPCON2bits
               00154         extern _SSP1CON1bits
               00155         extern _SSPCON1bits
               00156         extern _SSP1STATbits
               00157         extern _SSPSTATbits
               00158         extern _T2CONbits
               00159         extern _T1CONbits
               00160         extern _RCONbits
               00161         extern _WDTCONbits
               00162         extern _ECON1bits
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _OSCCONbits
               00164         extern _T0CONbits
               00165         extern _STATUSbits
               00166         extern _INTCON3bits
               00167         extern _INTCON2bits
               00168         extern _INTCONbits
               00169         extern _STKPTRbits
               00170         extern _LCDText
               00171         extern _MAADR5
               00172         extern _MAADR6
               00173         extern _MAADR3
               00174         extern _MAADR4
               00175         extern _MAADR1
               00176         extern _MAADR2
               00177         extern _EBSTSD
               00178         extern _EBSTCON
               00179         extern _EBSTCS
               00180         extern _EBSTCSL
               00181         extern _EBSTCSH
               00182         extern _MISTAT
               00183         extern _EFLOCON
               00184         extern _EPAUS
               00185         extern _EPAUSL
               00186         extern _EPAUSH
               00187         extern _MACON1
               00188         extern _MACON2
               00189         extern _MACON3
               00190         extern _MACON4
               00191         extern _MABBIPG
               00192         extern _MAIPG
               00193         extern _MAIPGL
               00194         extern _MAIPGH
               00195         extern _MACLCON1
               00196         extern _MACLCON2
               00197         extern _MAMXFL
               00198         extern _MAMXFLL
               00199         extern _MAMXFLH
               00200         extern _MICON
               00201         extern _MICMD
               00202         extern _MIREGADR
               00203         extern _MIWR
               00204         extern _MIWRL
               00205         extern _MIWRH
               00206         extern _MIRD
               00207         extern _MIRDL
               00208         extern _MIRDH
               00209         extern _EHT0
               00210         extern _EHT1
               00211         extern _EHT2
               00212         extern _EHT3
               00213         extern _EHT4
               00214         extern _EHT5
               00215         extern _EHT6
               00216         extern _EHT7
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _EPMM0
               00218         extern _EPMM1
               00219         extern _EPMM2
               00220         extern _EPMM3
               00221         extern _EPMM4
               00222         extern _EPMM5
               00223         extern _EPMM6
               00224         extern _EPMM7
               00225         extern _EPMCS
               00226         extern _EPMCSL
               00227         extern _EPMCSH
               00228         extern _EPMO
               00229         extern _EPMOL
               00230         extern _EPMOH
               00231         extern _EWOLIE
               00232         extern _EWOLIR
               00233         extern _ERXFCON
               00234         extern _EPKTCNT
               00235         extern _EWRPT
               00236         extern _EWRPTL
               00237         extern _EWRPTH
               00238         extern _ETXST
               00239         extern _ETXSTL
               00240         extern _ETXSTH
               00241         extern _ETXND
               00242         extern _ETXNDL
               00243         extern _ETXNDH
               00244         extern _ERXST
               00245         extern _ERXSTL
               00246         extern _ERXSTH
               00247         extern _ERXND
               00248         extern _ERXNDL
               00249         extern _ERXNDH
               00250         extern _ERXRDPT
               00251         extern _ERXRDPTL
               00252         extern _ERXRDPTH
               00253         extern _ERXWRPT
               00254         extern _ERXWRPTL
               00255         extern _ERXWRPTH
               00256         extern _EDMAST
               00257         extern _EDMASTL
               00258         extern _EDMASTH
               00259         extern _EDMAND
               00260         extern _EDMANDL
               00261         extern _EDMANDH
               00262         extern _EDMADST
               00263         extern _EDMADSTL
               00264         extern _EDMADSTH
               00265         extern _EDMACS
               00266         extern _EDMACSL
               00267         extern _EDMACSH
               00268         extern _EIE
               00269         extern _ESTAT
               00270         extern _ECON2
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271         extern _EIR
               00272         extern _EDATA
               00273         extern _SSP2CON2
               00274         extern _SSP2CON1
               00275         extern _SSP2STAT
               00276         extern _SSP2ADD
               00277         extern _SSP2BUF
               00278         extern _ECCP2DEL
               00279         extern _ECCP2AS
               00280         extern _ECCP3DEL
               00281         extern _ECCP3AS
               00282         extern _RCSTA2
               00283         extern _TXSTA2
               00284         extern _TXREG2
               00285         extern _RCREG2
               00286         extern _SPBRG2
               00287         extern _CCP5CON
               00288         extern _CCPR5
               00289         extern _CCPR5L
               00290         extern _CCPR5H
               00291         extern _CCP4CON
               00292         extern _CCPR4
               00293         extern _CCPR4L
               00294         extern _CCPR4H
               00295         extern _T4CON
               00296         extern _PR4
               00297         extern _TMR4
               00298         extern _ECCP1DEL
               00299         extern _ERDPT
               00300         extern _ERDPTL
               00301         extern _ERDPTH
               00302         extern _BAUDCON2
               00303         extern _BAUDCTL2
               00304         extern _SPBRGH2
               00305         extern _BAUDCON
               00306         extern _BAUDCON1
               00307         extern _BAUDCTL
               00308         extern _BAUDCTL1
               00309         extern _SPBRGH
               00310         extern _SPBRGH1
               00311         extern _PORTA
               00312         extern _PORTB
               00313         extern _PORTC
               00314         extern _PORTD
               00315         extern _PORTE
               00316         extern _PORTF
               00317         extern _PORTG
               00318         extern _PORTH
               00319         extern _PORTJ
               00320         extern _LATA
               00321         extern _LATB
               00322         extern _LATC
               00323         extern _LATD
               00324         extern _LATE
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325         extern _LATF
               00326         extern _LATG
               00327         extern _LATH
               00328         extern _LATJ
               00329         extern _DDRA
               00330         extern _TRISA
               00331         extern _DDRB
               00332         extern _TRISB
               00333         extern _DDRC
               00334         extern _TRISC
               00335         extern _DDRD
               00336         extern _TRISD
               00337         extern _DDRE
               00338         extern _TRISE
               00339         extern _DDRF
               00340         extern _TRISF
               00341         extern _DDRG
               00342         extern _TRISG
               00343         extern _DDRH
               00344         extern _TRISH
               00345         extern _DDRJ
               00346         extern _TRISJ
               00347         extern _OSCTUNE
               00348         extern _MEMCON
               00349         extern _PIE1
               00350         extern _PIR1
               00351         extern _IPR1
               00352         extern _PIE2
               00353         extern _PIR2
               00354         extern _IPR2
               00355         extern _PIE3
               00356         extern _PIR3
               00357         extern _IPR3
               00358         extern _EECON1
               00359         extern _EECON2
               00360         extern _RCSTA
               00361         extern _RCSTA1
               00362         extern _TXSTA
               00363         extern _TXSTA1
               00364         extern _TXREG
               00365         extern _TXREG1
               00366         extern _RCREG
               00367         extern _RCREG1
               00368         extern _SPBRG
               00369         extern _SPBRG1
               00370         extern _PSPCON
               00371         extern _T3CON
               00372         extern _TMR3L
               00373         extern _TMR3H
               00374         extern _CMCON
               00375         extern _CVRCON
               00376         extern _ECCP1AS
               00377         extern _CCP3CON
               00378         extern _ECCP3CON
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00379         extern _CCPR3
               00380         extern _CCPR3L
               00381         extern _CCPR3H
               00382         extern _CCP2CON
               00383         extern _ECCP2CON
               00384         extern _CCPR2
               00385         extern _CCPR2L
               00386         extern _CCPR2H
               00387         extern _CCP1CON
               00388         extern _ECCP1CON
               00389         extern _CCPR1
               00390         extern _CCPR1L
               00391         extern _CCPR1H
               00392         extern _ADCON2
               00393         extern _ADCON1
               00394         extern _ADCON0
               00395         extern _ADRES
               00396         extern _ADRESL
               00397         extern _ADRESH
               00398         extern _SSP1CON2
               00399         extern _SSPCON2
               00400         extern _SSP1CON1
               00401         extern _SSPCON1
               00402         extern _SSP1STAT
               00403         extern _SSPSTAT
               00404         extern _SSP1ADD
               00405         extern _SSPADD
               00406         extern _SSP1BUF
               00407         extern _SSPBUF
               00408         extern _T2CON
               00409         extern _PR2
               00410         extern _TMR2
               00411         extern _T1CON
               00412         extern _TMR1L
               00413         extern _TMR1H
               00414         extern _RCON
               00415         extern _WDTCON
               00416         extern _ECON1
               00417         extern _OSCCON
               00418         extern _T0CON
               00419         extern _TMR0L
               00420         extern _TMR0H
               00421         extern _STATUS
               00422         extern _FSR2L
               00423         extern _FSR2H
               00424         extern _PLUSW2
               00425         extern _PREINC2
               00426         extern _POSTDEC2
               00427         extern _POSTINC2
               00428         extern _INDF2
               00429         extern _BSR
               00430         extern _FSR1L
               00431         extern _FSR1H
               00432         extern _PLUSW1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00433         extern _PREINC1
               00434         extern _POSTDEC1
               00435         extern _POSTINC1
               00436         extern _INDF1
               00437         extern _WREG
               00438         extern _FSR0L
               00439         extern _FSR0H
               00440         extern _PLUSW0
               00441         extern _PREINC0
               00442         extern _POSTDEC0
               00443         extern _POSTINC0
               00444         extern _INDF0
               00445         extern _INTCON3
               00446         extern _INTCON2
               00447         extern _INTCON
               00448         extern _PROD
               00449         extern _PRODL
               00450         extern _PRODH
               00451         extern _TABLAT
               00452         extern _TBLPTR
               00453         extern _TBLPTRL
               00454         extern _TBLPTRH
               00455         extern _TBLPTRU
               00456         extern _PC
               00457         extern _PCL
               00458         extern _PCLATH
               00459         extern _PCLATU
               00460         extern _STKPTR
               00461         extern _TOS
               00462         extern _TOSL
               00463         extern _TOSH
               00464         extern _TOSU
               00465         extern _sprintf
               00466         extern _strlen
               00467         extern _LCDInit
               00468         extern _LCDUpdate
               00469         extern _LCDErase
               00470         extern _time_create
               00471         extern _time_set
               00472         extern _add_second
               00473         extern _time_print
               00474         extern _time_equals
               00475         extern __modsint
               00476 ;--------------------------------------------------------
               00477 ;       Equates to used internal registers
               00478 ;--------------------------------------------------------
  00000FD8     00479 STATUS  equ     0xfd8
  00000FF9     00480 PCL     equ     0xff9
  00000FFA     00481 PCLATH  equ     0xffa
  00000FFB     00482 PCLATU  equ     0xffb
  00000FE8     00483 WREG    equ     0xfe8
  00000FE0     00484 BSR     equ     0xfe0
  00000FE9     00485 FSR0L   equ     0xfe9
  00000FEA     00486 FSR0H   equ     0xfea
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
  00000FE1     00487 FSR1L   equ     0xfe1
  00000FD9     00488 FSR2L   equ     0xfd9
  00000FE5     00489 POSTDEC1        equ     0xfe5
  00000FE4     00490 PREINC1 equ     0xfe4
  00000FDB     00491 PLUSW2  equ     0xfdb
  00000FF3     00492 PRODL   equ     0xff3
  00000FF4     00493 PRODH   equ     0xff4
               00494 
               00495 
               00496         idata
               00497 _alarm_going_off        db      0x00, 0x00
               00498 _alarm_counter  db      0x00, 0x00
               00499 _overflow_counter       db      0x00, 0x00
               00500 _but1_pressed   db      0x00, 0x00
               00501 _but2_pressed   db      0x00, 0x00
               00502 _config_mode_on db      0x01, 0x00
               00503 _config_mode_clock      db      0x01, 0x00
               00504 
               00505 
               00506 ; Internal registers
               00507 .registers      udata_ovr       0x0000
               00508 r0x00   res     1
               00509 r0x01   res     1
               00510 r0x02   res     1
               00511 r0x03   res     1
               00512 r0x04   res     1
               00513 r0x05   res     1
               00514 r0x06   res     1
               00515 r0x07   res     1
               00516 r0x08   res     1
               00517 r0x09   res     1
               00518 r0x0a   res     1
               00519 r0x0b   res     1
               00520 r0x0c   res     1
               00521 
               00522 udata_clock_0   udata
               00523 __time  res     3
               00524 
               00525 udata_clock_1   udata
               00526 __alarm res     3
               00527 
               00528 udata_clock_2   udata
               00529 _display_line   res     32
               00530 
               00531 udata_clock_3   udata
               00532 _to_double_digits_buffer_1_1    res     3
               00533 
               00534 ;--------------------------------------------------------
               00535 ; interrupt vector 
               00536 ;--------------------------------------------------------
               00537 
               00538 ;--------------------------------------------------------
               00539 ; global & static initialisations
               00540 ;--------------------------------------------------------
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00541 ; ; Starting pCode block for absolute section
               00542 ; ;-----------------------------------------
               00543 S_clock_ivec_0x1_highPriorityInterruptHandler   code    0X000008
0008 00544 ivec_0x1_highPriorityInterruptHandler:
0008 EF00 F000 00545         GOTO    _highPriorityInterruptHandler
               00546 
               00547 ; I code from now on!
               00548 ; ; Starting pCode block
               00549 S_clock__main   code
0000 00550 _main:
               00551 ;       .line   71; src/clock.c _time = time_create();
0000 EC00 F000 00552         CALL    _time_create
0004 0000      00553         BANKSEL __time
0006 6F00      00554         MOVWF   __time, B
0008 CFF3 F000 00555         MOVFF   PRODL, (__time + 1)
000C CFF4 F000 00556         MOVFF   PRODH, (__time + 2)
               00557 ;       .line   72; src/clock.c _alarm = time_create();
0010 EC00 F000 00558         CALL    _time_create
0014 0000      00559         BANKSEL __alarm
0016 6F00      00560         MOVWF   __alarm, B
0018 CFF3 F000 00561         MOVFF   PRODL, (__alarm + 1)
001C CFF4 F000 00562         MOVFF   PRODH, (__alarm + 2)
               00563 ;       .line   74; src/clock.c init();
0020 EC00 F000 00564         CALL    _init
               00565 ;       .line   75; src/clock.c init_config();
0024 EC00 F000 00566         CALL    _init_config
               00567 ;       .line   77; src/clock.c T0CONbits.TMR0ON = 1;
0028 8E00      00568         BSF     _T0CONbits, 7
               00569 ;       .line   78; src/clock.c update_display();
002A EC00 F000 00570         CALL    _update_display
               00571 ;       .line   79; src/clock.c return 0;
002E 6AF3      00572         CLRF    PRODL
0030 6AE8      00573         CLRF    WREG
0032 0012      00574         RETURN  
               00575 
               00576 ; ; Starting pCode block
               00577 S_clock__init   code
0000 00578 _init:
               00579 ;       .line   249; src/clock.c        void init(void){
0000 CFD9 FFE5 00580         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00581         MOVFF   FSR1L, FSR2L
               00582 ;       .line   251; src/clock.c        LCDInit();
0008 EC00 F000 00583         CALL    _LCDInit
               00584 ;       .line   254; src/clock.c        BUTTON0_TRIS = 1;
000C 8600      00585         BSF     _TRISBbits, 3
               00586 ;       .line   255; src/clock.c        BUTTON1_TRIS = 1;
000E 8200      00587         BSF     _TRISBbits, 1
               00588 ;       .line   258; src/clock.c        INTCONbits.GIE = 1;
0010 8E00      00589         BSF     _INTCONbits, 7
               00590 ;       .line   259; src/clock.c        INTCONbits.PEIE = 1;
0012 8C00      00591         BSF     _INTCONbits, 6
               00592 ;       .line   260; src/clock.c        RCONbits.IPEN = 1; 
0014 8E00      00593         BSF     _RCONbits, 7
               00594 ;       .line   263; src/clock.c        T0CONbits.TMR0ON = 0;
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0016 9E00      00595         BCF     _T0CONbits, 7
               00596 ;       .line   266; src/clock.c        TMR0H = 0x00000000;
0018 6A00      00597         CLRF    _TMR0H
               00598 ;       .line   267; src/clock.c        TMR0L = 0x00000000;
001A 6A00      00599         CLRF    _TMR0L
               00600 ;       .line   270; src/clock.c        T0CONbits.T08BIT = 0;
001C 9C00      00601         BCF     _T0CONbits, 6
               00602 ;       .line   273; src/clock.c        T0CONbits.T0CS = 0;
001E 9A00      00603         BCF     _T0CONbits, 5
               00604 ;       .line   276; src/clock.c        T0CONbits.PSA = 1;
0020 8600      00605         BSF     _T0CONbits, 3
               00606 ;       .line   279; src/clock.c        INTCONbits.TMR0IE = 1;
0022 8A00      00607         BSF     _INTCONbits, 5
               00608 ;       .line   282; src/clock.c        INTCON3bits.INT1IE = 1;
0024 8600      00609         BSF     _INTCON3bits, 3
               00610 ;       .line   283; src/clock.c        INTCON3bits.INT3IE = 1;
0026 8A00      00611         BSF     _INTCON3bits, 5
               00612 ;       .line   286; src/clock.c        LED0_TRIS = 0;
0028 9000      00613         BCF     _TRISJbits, 0
               00614 ;       .line   287; src/clock.c        LED1_TRIS = 0;   
002A 9200      00615         BCF     _TRISJbits, 1
               00616 ;       .line   288; src/clock.c        LED2_TRIS = 0;
002C 9400      00617         BCF     _TRISJbits, 2
               00618 ;       .line   289; src/clock.c        LED3_TRIS = 0;
002E 9A00      00619         BCF     _TRISGbits, 5
               00620 ;       .line   292; src/clock.c        LED0_IO = 0; 
0030 9000      00621         BCF     _LATJbits, 0
               00622 ;       .line   293; src/clock.c        LED1_IO = 0;
0032 9200      00623         BCF     _LATJbits, 1
               00624 ;       .line   294; src/clock.c        LED2_IO = 0;
0034 9400      00625         BCF     _LATJbits, 2
               00626 ;       .line   295; src/clock.c        LED3_IO = 1;
0036 8A00      00627         BSF     _PORTGbits, 5
0038 CFE4 FFD9 00628         MOVFF   PREINC1, FSR2L
003C 0012      00629         RETURN  
               00630 
               00631 ; ; Starting pCode block
               00632 S_clock__highPriorityInterruptHandler   code
0000 00633 _highPriorityInterruptHandler:
               00634 ;       .line   211; src/clock.c        void highPriorityInterruptHandler (void) __interrupt(1){
0000 CFE8 FFE5 00635         MOVFF   WREG, POSTDEC1
0004 CFD8 FFE5 00636         MOVFF   STATUS, POSTDEC1
0008 CFE0 FFE5 00637         MOVFF   BSR, POSTDEC1
000C CFF3 FFE5 00638         MOVFF   PRODL, POSTDEC1
0010 CFF4 FFE5 00639         MOVFF   PRODH, POSTDEC1
0014 CFE9 FFE5 00640         MOVFF   FSR0L, POSTDEC1
0018 CFEA FFE5 00641         MOVFF   FSR0H, POSTDEC1
001C CFFA FFE5 00642         MOVFF   PCLATH, POSTDEC1
0020 CFFB FFE5 00643         MOVFF   PCLATU, POSTDEC1
0024 CFD9 FFE5 00644         MOVFF   FSR2L, POSTDEC1
0028 CFE1 FFD9 00645         MOVFF   FSR1L, FSR2L
002C C000 FFE5 00646         MOVFF   r0x00, POSTDEC1
0030 C000 FFE5 00647         MOVFF   r0x01, POSTDEC1
               00648 ;       .line   212; src/clock.c        if(INTCON3bits.INT1F == 1){
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0034 6A00      00649         CLRF    r0x00
0036 B000      00650         BTFSC   _INTCON3bits, 0
0038 2A00      00651         INCF    r0x00, F
003A 5000      00652         MOVF    r0x00, W
003C 0A01      00653         XORLW   0x01
003E E100      00654         BNZ     _00221_DS_
               00655 ;       .line   213; src/clock.c        but2_pressed = 1;       
0040 0E01      00656         MOVLW   0x01
0042 0000      00657         BANKSEL _but2_pressed
0044 6F00      00658         MOVWF   _but2_pressed, B
0046 0000      00659         BANKSEL (_but2_pressed + 1)
0048 6B00      00660         CLRF    (_but2_pressed + 1), B
               00661 ; ;;!!! pic16_aopOp:1071 called for a spillLocation -- assigning WREG instead --- CHECK
               00662 ;       .line   214; src/clock.c        if(BUTTON0_IO);
004A 6AE8      00663         CLRF    WREG
004C B600      00664         BTFSC   _PORTBbits, 3
004E 2AE8      00665         INCF    WREG, F
               00666 ;       .line   215; src/clock.c        INTCON3bits.INT1F = 0; 
0050 9000      00667         BCF     _INTCON3bits, 0
0052 00668 _00221_DS_:
               00669 ;       .line   218; src/clock.c        if(INTCON3bits.INT3F  == 1){
0052 6A00      00670         CLRF    r0x00
0054 B400      00671         BTFSC   _INTCON3bits, 2
0056 2A00      00672         INCF    r0x00, F
0058 5000      00673         MOVF    r0x00, W
005A 0A01      00674         XORLW   0x01
005C E100      00675         BNZ     _00223_DS_
               00676 ;       .line   219; src/clock.c        but1_pressed = 1;       
005E 0E01      00677         MOVLW   0x01
0060 0000      00678         BANKSEL _but1_pressed
0062 6F00      00679         MOVWF   _but1_pressed, B
0064 0000      00680         BANKSEL (_but1_pressed + 1)
0066 6B00      00681         CLRF    (_but1_pressed + 1), B
               00682 ; ;;!!! pic16_aopOp:1071 called for a spillLocation -- assigning WREG instead --- CHECK
               00683 ;       .line   220; src/clock.c        if(BUTTON1_IO);
0068 6AE8      00684         CLRF    WREG
006A B200      00685         BTFSC   _PORTBbits, 1
006C 2AE8      00686         INCF    WREG, F
               00687 ;       .line   221; src/clock.c        INTCON3bits.INT3F = 0; 
006E 9400      00688         BCF     _INTCON3bits, 2
0070 00689 _00223_DS_:
               00690 ;       .line   223; src/clock.c        if(INTCONbits.TMR0IF == 1) {
0070 6A00      00691         CLRF    r0x00
0072 B400      00692         BTFSC   _INTCONbits, 2
0074 2A00      00693         INCF    r0x00, F
0076 5000      00694         MOVF    r0x00, W
0078 0A01      00695         XORLW   0x01
007A E000      00696         BZ      _00252_DS_
007C D000      00697         BRA     _00237_DS_
007E 00698 _00252_DS_:
007E 0000      00699         BANKSEL _overflow_counter
               00700 ;       .line   224; src/clock.c        overflow_counter++;
0080 2B00      00701         INCF    _overflow_counter, F, B
0082 E300      00702         BNC     _10263_DS_
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0084 0000      00703         BANKSEL (_overflow_counter + 1)
0086 2B00      00704         INCF    (_overflow_counter + 1), F, B
0088 00705 _10263_DS_:
0088 0000      00706         BANKSEL _overflow_counter
               00707 ;       .line   225; src/clock.c        if(overflow_counter == CYCLES/2){
008A 5100      00708         MOVF    _overflow_counter, W, B
008C 0A2E      00709         XORLW   0x2e
008E E100      00710         BNZ     _00253_DS_
0090 0000      00711         BANKSEL (_overflow_counter + 1)
0092 5100      00712         MOVF    (_overflow_counter + 1), W, B
0094 E000      00713         BZ      _00254_DS_
0096 00714 _00253_DS_:
0096 D000      00715         BRA     _00233_DS_
0098 00716 _00254_DS_:
               00717 ;       .line   226; src/clock.c        toggle_led();
0098 EC00 F000 00718         CALL    _toggle_led
009C D000      00719         BRA     _00234_DS_
009E 00720 _00233_DS_:
009E 0000      00721         BANKSEL _overflow_counter
               00722 ;       .line   227; src/clock.c        }else if(overflow_counter == CYCLES){
00A0 5100      00723         MOVF    _overflow_counter, W, B
00A2 0A5D      00724         XORLW   0x5d
00A4 E100      00725         BNZ     _00255_DS_
00A6 0000      00726         BANKSEL (_overflow_counter + 1)
00A8 5100      00727         MOVF    (_overflow_counter + 1), W, B
00AA E000      00728         BZ      _00256_DS_
00AC 00729 _00255_DS_:
00AC D000      00730         BRA     _00234_DS_
00AE 00731 _00256_DS_:
00AE 0000      00732         BANKSEL (__time + 2)
               00733 ;       .line   228; src/clock.c        if(time_equals(_alarm,_time)){
00B0 5100      00734         MOVF    (__time + 2), W, B
00B2 6EE5      00735         MOVWF   POSTDEC1
00B4 0000      00736         BANKSEL (__time + 1)
00B6 5100      00737         MOVF    (__time + 1), W, B
00B8 6EE5      00738         MOVWF   POSTDEC1
00BA 0000      00739         BANKSEL __time
00BC 5100      00740         MOVF    __time, W, B
00BE 6EE5      00741         MOVWF   POSTDEC1
00C0 0000      00742         BANKSEL (__alarm + 2)
00C2 5100      00743         MOVF    (__alarm + 2), W, B
00C4 6EE5      00744         MOVWF   POSTDEC1
00C6 0000      00745         BANKSEL (__alarm + 1)
00C8 5100      00746         MOVF    (__alarm + 1), W, B
00CA 6EE5      00747         MOVWF   POSTDEC1
00CC 0000      00748         BANKSEL __alarm
00CE 5100      00749         MOVF    __alarm, W, B
00D0 6EE5      00750         MOVWF   POSTDEC1
00D2 EC00 F000 00751         CALL    _time_equals
00D6 6E00      00752         MOVWF   r0x00
00D8 CFF3 F000 00753         MOVFF   PRODL, r0x01
00DC 0E06      00754         MOVLW   0x06
00DE 26E1      00755         ADDWF   FSR1L, F
00E0 5000      00756         MOVF    r0x00, W
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00E2 1000      00757         IORWF   r0x01, W
00E4 E000      00758         BZ      _00225_DS_
               00759 ;       .line   229; src/clock.c        alarm_going_off = 1;
00E6 0E01      00760         MOVLW   0x01
00E8 0000      00761         BANKSEL _alarm_going_off
00EA 6F00      00762         MOVWF   _alarm_going_off, B
00EC 0000      00763         BANKSEL (_alarm_going_off + 1)
00EE 6B00      00764         CLRF    (_alarm_going_off + 1), B
00F0 00765 _00225_DS_:
00F0 0000      00766         BANKSEL _alarm_going_off
               00767 ;       .line   231; src/clock.c        if(alarm_going_off){
00F2 5100      00768         MOVF    _alarm_going_off, W, B
00F4 0000      00769         BANKSEL (_alarm_going_off + 1)
00F6 1100      00770         IORWF   (_alarm_going_off + 1), W, B
00F8 E000      00771         BZ      _00229_DS_
00FA 0000      00772         BANKSEL _alarm_counter
               00773 ;       .line   232; src/clock.c        alarm_counter++;
00FC 2B00      00774         INCF    _alarm_counter, F, B
00FE E300      00775         BNC     _20264_DS_
0100 0000      00776         BANKSEL (_alarm_counter + 1)
0102 2B00      00777         INCF    (_alarm_counter + 1), F, B
0104 00778 _20264_DS_:
               00779 ;       .line   233; src/clock.c        alarm_led();
0104 EC00 F000 00780         CALL    _alarm_led
0108 0000      00781         BANKSEL _alarm_counter
               00782 ;       .line   234; src/clock.c        if(alarm_counter==30){
010A 5100      00783         MOVF    _alarm_counter, W, B
010C 0A1E      00784         XORLW   0x1e
010E E100      00785         BNZ     _00257_DS_
0110 0000      00786         BANKSEL (_alarm_counter + 1)
0112 5100      00787         MOVF    (_alarm_counter + 1), W, B
0114 E000      00788         BZ      _00258_DS_
0116 00789 _00257_DS_:
0116 D000      00790         BRA     _00229_DS_
0118 00791 _00258_DS_:
0118 0000      00792         BANKSEL _alarm_going_off
               00793 ;       .line   235; src/clock.c        alarm_going_off =0;
011A 6B00      00794         CLRF    _alarm_going_off, B
011C 0000      00795         BANKSEL (_alarm_going_off + 1)
011E 6B00      00796         CLRF    (_alarm_going_off + 1), B
0120 0000      00797         BANKSEL _alarm_counter
               00798 ;       .line   236; src/clock.c        alarm_counter = 0;
0122 6B00      00799         CLRF    _alarm_counter, B
0124 0000      00800         BANKSEL (_alarm_counter + 1)
0126 6B00      00801         CLRF    (_alarm_counter + 1), B
0128 00802 _00229_DS_:
0128 0000      00803         BANKSEL _overflow_counter
               00804 ;       .line   239; src/clock.c        overflow_counter = 0;
012A 6B00      00805         CLRF    _overflow_counter, B
012C 0000      00806         BANKSEL (_overflow_counter + 1)
012E 6B00      00807         CLRF    (_overflow_counter + 1), B
               00808 ;       .line   240; src/clock.c        toggle_led();
0130 EC00 F000 00809         CALL    _toggle_led
0134 0000      00810         BANKSEL (__time + 2)
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00811 ;       .line   241; src/clock.c        add_second(_time);
0136 5100      00812         MOVF    (__time + 2), W, B
0138 6EE5      00813         MOVWF   POSTDEC1
013A 0000      00814         BANKSEL (__time + 1)
013C 5100      00815         MOVF    (__time + 1), W, B
013E 6EE5      00816         MOVWF   POSTDEC1
0140 0000      00817         BANKSEL __time
0142 5100      00818         MOVF    __time, W, B
0144 6EE5      00819         MOVWF   POSTDEC1
0146 EC00 F000 00820         CALL    _add_second
014A 0E03      00821         MOVLW   0x03
014C 26E1      00822         ADDWF   FSR1L, F
               00823 ;       .line   242; src/clock.c        update_display();
014E EC00 F000 00824         CALL    _update_display
0152 00825 _00234_DS_:
               00826 ;       .line   244; src/clock.c        INTCONbits.TMR0IF = 0;
0152 9400      00827         BCF     _INTCONbits, 2
0154 00828 _00237_DS_:
0154 CFE4 F000 00829         MOVFF   PREINC1, r0x01
0158 CFE4 F000 00830         MOVFF   PREINC1, r0x00
015C CFE4 FFD9 00831         MOVFF   PREINC1, FSR2L
0160 CFE4 FFFB 00832         MOVFF   PREINC1, PCLATU
0164 CFE4 FFFA 00833         MOVFF   PREINC1, PCLATH
0168 CFE4 FFEA 00834         MOVFF   PREINC1, FSR0H
016C CFE4 FFE9 00835         MOVFF   PREINC1, FSR0L
0170 CFE4 FFF4 00836         MOVFF   PREINC1, PRODH
0174 CFE4 FFF3 00837         MOVFF   PREINC1, PRODL
0178 CFE4 FFE0 00838         MOVFF   PREINC1, BSR
017C CFE4 FFD8 00839         MOVFF   PREINC1, STATUS
0180 CFE4 FFE8 00840         MOVFF   PREINC1, WREG
0184 0010      00841         RETFIE  
               00842 
               00843 ; ; Starting pCode block
               00844 S_clock__to_double_digits       code
0000 00845 _to_double_digits:
               00846 ;       .line   205; src/clock.c        char* to_double_digits(int value){
0000 CFD9 FFE5 00847         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00848         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00849         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00850         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00851         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00852         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00853         MOVFF   r0x04, POSTDEC1
001C 0E02      00854         MOVLW   0x02
001E CFDB F000 00855         MOVFF   PLUSW2, r0x00
0022 0E03      00856         MOVLW   0x03
0024 CFDB F000 00857         MOVFF   PLUSW2, r0x01
               00858 ;       .line   207; src/clock.c        sprintf(buffer, "%02d", value);
0028 0E00      00859         MOVLW   HIGH(_to_double_digits_buffer_1_1)
002A 6E00      00860         MOVWF   r0x03
002C 0E00      00861         MOVLW   LOW(_to_double_digits_buffer_1_1)
002E 6E00      00862         MOVWF   r0x02
0030 0E80      00863         MOVLW   0x80
0032 6E00      00864         MOVWF   r0x04
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0034 5000      00865         MOVF    r0x01, W
0036 6EE5      00866         MOVWF   POSTDEC1
0038 5000      00867         MOVF    r0x00, W
003A 6EE5      00868         MOVWF   POSTDEC1
003C 0E00      00869         MOVLW   UPPER(__str_9)
003E 6EE5      00870         MOVWF   POSTDEC1
0040 0E00      00871         MOVLW   HIGH(__str_9)
0042 6EE5      00872         MOVWF   POSTDEC1
0044 0E00      00873         MOVLW   LOW(__str_9)
0046 6EE5      00874         MOVWF   POSTDEC1
0048 5000      00875         MOVF    r0x04, W
004A 6EE5      00876         MOVWF   POSTDEC1
004C 5000      00877         MOVF    r0x03, W
004E 6EE5      00878         MOVWF   POSTDEC1
0050 5000      00879         MOVF    r0x02, W
0052 6EE5      00880         MOVWF   POSTDEC1
0054 EC00 F000 00881         CALL    _sprintf
0058 0E08      00882         MOVLW   0x08
005A 26E1      00883         ADDWF   FSR1L, F
               00884 ;       .line   208; src/clock.c        return buffer;
005C 0E00      00885         MOVLW   HIGH(_to_double_digits_buffer_1_1)
005E 6E00      00886         MOVWF   r0x01
0060 0E00      00887         MOVLW   LOW(_to_double_digits_buffer_1_1)
0062 6E00      00888         MOVWF   r0x00
0064 0E80      00889         MOVLW   0x80
0066 6E00      00890         MOVWF   r0x02
0068 C000 FFF4 00891         MOVFF   r0x02, PRODH
006C C000 FFF3 00892         MOVFF   r0x01, PRODL
0070 5000      00893         MOVF    r0x00, W
0072 CFE4 F000 00894         MOVFF   PREINC1, r0x04
0076 CFE4 F000 00895         MOVFF   PREINC1, r0x03
007A CFE4 F000 00896         MOVFF   PREINC1, r0x02
007E CFE4 F000 00897         MOVFF   PREINC1, r0x01
0082 CFE4 F000 00898         MOVFF   PREINC1, r0x00
0086 CFE4 FFD9 00899         MOVFF   PREINC1, FSR2L
008A 0012      00900         RETURN  
               00901 
               00902 ; ; Starting pCode block
               00903 S_clock__display_string code
0000 00904 _display_string:
               00905 ;       .line   194; src/clock.c        void display_string(BYTE pos, char* text){
0000 CFD9 FFE5 00906         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00907         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00908         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00909         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00910         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00911         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00912         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00913         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00914         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00915         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00916         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 00917         MOVFF   r0x09, POSTDEC1
0030 0E02      00918         MOVLW   0x02
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0032 CFDB F000 00919         MOVFF   PLUSW2, r0x00
0036 0E03      00920         MOVLW   0x03
0038 CFDB F000 00921         MOVFF   PLUSW2, r0x01
003C 0E04      00922         MOVLW   0x04
003E CFDB F000 00923         MOVFF   PLUSW2, r0x02
0042 0E05      00924         MOVLW   0x05
0044 CFDB F000 00925         MOVFF   PLUSW2, r0x03
               00926 ;       .line   195; src/clock.c        BYTE        l = strlen(text);
0048 5000      00927         MOVF    r0x03, W
004A 6EE5      00928         MOVWF   POSTDEC1
004C 5000      00929         MOVF    r0x02, W
004E 6EE5      00930         MOVWF   POSTDEC1
0050 5000      00931         MOVF    r0x01, W
0052 6EE5      00932         MOVWF   POSTDEC1
0054 EC00 F000 00933         CALL    _strlen
0058 6E00      00934         MOVWF   r0x04
005A CFF3 F000 00935         MOVFF   PRODL, r0x05
005E 0E03      00936         MOVLW   0x03
0060 26E1      00937         ADDWF   FSR1L, F
               00938 ;       .line   196; src/clock.c        BYTE      max = 32-pos;    
0062 5000      00939         MOVF    r0x00, W
0064 0820      00940         SUBLW   0x20
0066 6E00      00941         MOVWF   r0x05
               00942 ;       .line   197; src/clock.c        char       *d = (char*)&LCDText[pos];
0068 6A00      00943         CLRF    r0x06
006A 0E00      00944         MOVLW   LOW(_LCDText)
006C 2600      00945         ADDWF   r0x00, F
006E 0E00      00946         MOVLW   HIGH(_LCDText)
0070 2200      00947         ADDWFC  r0x06, F
0072 5000      00948         MOVF    r0x06, W
0074 6E00      00949         MOVWF   r0x06
0076 5000      00950         MOVF    r0x00, W
0078 6E00      00951         MOVWF   r0x00
007A 0E80      00952         MOVLW   0x80
007C 6E00      00953         MOVWF   r0x07
               00954 ;       .line   199; src/clock.c        size_t      n = (l<max)?l:max;
007E 5000      00955         MOVF    r0x05, W
0080 5C00      00956         SUBWF   r0x04, W
0082 E300      00957         BNC     _00205_DS_
0084 C000 F000 00958         MOVFF   r0x05, r0x04
0088 00959 _00205_DS_:
0088 6A00      00960         CLRF    r0x05
               00961 ;       .line   200; src/clock.c        if (n != 0)
008A 5000      00962         MOVF    r0x04, W
008C 1000      00963         IORWF   r0x05, W
008E E000      00964         BZ      _00201_DS_
0090 00965 _00197_DS_:
               00966 ;       .line   201; src/clock.c        while (n-- != 0)*d++ = *s++;
0090 C000 F000 00967         MOVFF   r0x04, r0x08
0094 C000 F000 00968         MOVFF   r0x05, r0x09
0098 0EFF      00969         MOVLW   0xff
009A 2600      00970         ADDWF   r0x04, F
009C A0D8      00971         BTFSS   STATUS, 0
009E 0600      00972         DECF    r0x05, F
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A0 5000      00973         MOVF    r0x08, W
00A2 1000      00974         IORWF   r0x09, W
00A4 E000      00975         BZ      _00201_DS_
00A6 C000 FFE9 00976         MOVFF   r0x01, FSR0L
00AA C000 FFF3 00977         MOVFF   r0x02, PRODL
00AE 5000      00978         MOVF    r0x03, W
00B0 EC00 F000 00979         CALL    __gptrget1
00B4 6E00      00980         MOVWF   r0x08
00B6 2A00      00981         INCF    r0x01, F
00B8 B0D8      00982         BTFSC   STATUS, 0
00BA 2A00      00983         INCF    r0x02, F
00BC B0D8      00984         BTFSC   STATUS, 0
00BE 2A00      00985         INCF    r0x03, F
00C0 C000 FFE5 00986         MOVFF   r0x08, POSTDEC1
00C4 C000 FFE9 00987         MOVFF   r0x00, FSR0L
00C8 C000 FFF3 00988         MOVFF   r0x06, PRODL
00CC 5000      00989         MOVF    r0x07, W
00CE EC00 F000 00990         CALL    __gptrput1
00D2 2A00      00991         INCF    r0x00, F
00D4 B0D8      00992         BTFSC   STATUS, 0
00D6 2A00      00993         INCF    r0x06, F
00D8 B0D8      00994         BTFSC   STATUS, 0
00DA 2A00      00995         INCF    r0x07, F
00DC D000      00996         BRA     _00197_DS_
00DE 00997 _00201_DS_:
               00998 ;       .line   202; src/clock.c        LCDUpdate();
00DE EC00 F000 00999         CALL    _LCDUpdate
00E2 CFE4 F000 01000         MOVFF   PREINC1, r0x09
00E6 CFE4 F000 01001         MOVFF   PREINC1, r0x08
00EA CFE4 F000 01002         MOVFF   PREINC1, r0x07
00EE CFE4 F000 01003         MOVFF   PREINC1, r0x06
00F2 CFE4 F000 01004         MOVFF   PREINC1, r0x05
00F6 CFE4 F000 01005         MOVFF   PREINC1, r0x04
00FA CFE4 F000 01006         MOVFF   PREINC1, r0x03
00FE CFE4 F000 01007         MOVFF   PREINC1, r0x02
0102 CFE4 F000 01008         MOVFF   PREINC1, r0x01
0106 CFE4 F000 01009         MOVFF   PREINC1, r0x00
010A CFE4 FFD9 01010         MOVFF   PREINC1, FSR2L
010E 0012      01011         RETURN  
               01012 
               01013 ; ; Starting pCode block
               01014 S_clock__get_input      code
0000 01015 _get_input:
               01016 ;       .line   170; src/clock.c        int get_input(int maxvalue, char *text, char *mode){
0000 CFD9 FFE5 01017         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01018         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01019         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01020         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01021         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01022         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01023         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01024         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01025         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01026         MOVFF   r0x07, POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0028 C000 FFE5 01027         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01028         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 01029         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 01030         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 01031         MOVFF   r0x0c, POSTDEC1
003C 0E02      01032         MOVLW   0x02
003E CFDB F000 01033         MOVFF   PLUSW2, r0x00
0042 0E03      01034         MOVLW   0x03
0044 CFDB F000 01035         MOVFF   PLUSW2, r0x01
0048 0E04      01036         MOVLW   0x04
004A CFDB F000 01037         MOVFF   PLUSW2, r0x02
004E 0E05      01038         MOVLW   0x05
0050 CFDB F000 01039         MOVFF   PLUSW2, r0x03
0054 0E06      01040         MOVLW   0x06
0056 CFDB F000 01041         MOVFF   PLUSW2, r0x04
005A 0E07      01042         MOVLW   0x07
005C CFDB F000 01043         MOVFF   PLUSW2, r0x05
0060 0E08      01044         MOVLW   0x08
0062 CFDB F000 01045         MOVFF   PLUSW2, r0x06
0066 0E09      01046         MOVLW   0x09
0068 CFDB F000 01047         MOVFF   PLUSW2, r0x07
               01048 ;       .line   171; src/clock.c        BYTE length = strlen(text);
006C 5000      01049         MOVF    r0x04, W
006E 6EE5      01050         MOVWF   POSTDEC1
0070 5000      01051         MOVF    r0x03, W
0072 6EE5      01052         MOVWF   POSTDEC1
0074 5000      01053         MOVF    r0x02, W
0076 6EE5      01054         MOVWF   POSTDEC1
0078 EC00 F000 01055         CALL    _strlen
007C 6E00      01056         MOVWF   r0x08
007E CFF3 F000 01057         MOVFF   PRODL, r0x09
0082 0E03      01058         MOVLW   0x03
0084 26E1      01059         ADDWF   FSR1L, F
               01060 ;       .line   172; src/clock.c        int value = 0;
0086 6A00      01061         CLRF    r0x09
0088 6A00      01062         CLRF    r0x0a
               01063 ;       .line   173; src/clock.c        display_string(START_FIRST_LINE , mode);
008A 5000      01064         MOVF    r0x07, W
008C 6EE5      01065         MOVWF   POSTDEC1
008E 5000      01066         MOVF    r0x06, W
0090 6EE5      01067         MOVWF   POSTDEC1
0092 5000      01068         MOVF    r0x05, W
0094 6EE5      01069         MOVWF   POSTDEC1
0096 0E00      01070         MOVLW   0x00
0098 6EE5      01071         MOVWF   POSTDEC1
009A EC00 F000 01072         CALL    _display_string
009E 0E04      01073         MOVLW   0x04
00A0 26E1      01074         ADDWF   FSR1L, F
               01075 ;       .line   174; src/clock.c        display_string(START_SECOND_LINE, text);
00A2 5000      01076         MOVF    r0x04, W
00A4 6EE5      01077         MOVWF   POSTDEC1
00A6 5000      01078         MOVF    r0x03, W
00A8 6EE5      01079         MOVWF   POSTDEC1
00AA 5000      01080         MOVF    r0x02, W
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AC 6EE5      01081         MOVWF   POSTDEC1
00AE 0E10      01082         MOVLW   0x10
00B0 6EE5      01083         MOVWF   POSTDEC1
00B2 EC00 F000 01084         CALL    _display_string
00B6 0E04      01085         MOVLW   0x04
00B8 26E1      01086         ADDWF   FSR1L, F
               01087 ;       .line   175; src/clock.c        while(1)
00BA 0E11      01088         MOVLW   0x11
00BC 2400      01089         ADDWF   r0x08, W
00BE 6E00      01090         MOVWF   r0x02
00C0 01091 _00190_DS_:
00C0 0000      01092         BANKSEL _config_mode_on
               01093 ;       .line   178; src/clock.c        if(config_mode_on){
00C2 5100      01094         MOVF    _config_mode_on, W, B
00C4 0000      01095         BANKSEL (_config_mode_on + 1)
00C6 1100      01096         IORWF   (_config_mode_on + 1), W, B
00C8 E000      01097         BZ      _00190_DS_
               01098 ;       .line   179; src/clock.c        DelayMs(10);
00CA 0E68      01099         MOVLW   0x68
00CC 6E00      01100         MOVWF   r0x03
00CE 0E42      01101         MOVLW   0x42
00D0 6E00      01102         MOVWF   r0x04
00D2 6A00      01103         CLRF    r0x05
00D4 6A00      01104         CLRF    r0x06
00D6 01105 _00177_DS_:
00D6 C000 F000 01106         MOVFF   r0x03, r0x07
00DA C000 F000 01107         MOVFF   r0x04, r0x08
00DE C000 F000 01108         MOVFF   r0x05, r0x0b
00E2 C000 F000 01109         MOVFF   r0x06, r0x0c
00E6 0EFF      01110         MOVLW   0xff
00E8 2600      01111         ADDWF   r0x03, F
00EA 0EFF      01112         MOVLW   0xff
00EC 2200      01113         ADDWFC  r0x04, F
00EE 0EFF      01114         MOVLW   0xff
00F0 2200      01115         ADDWFC  r0x05, F
00F2 0EFF      01116         MOVLW   0xff
00F4 2200      01117         ADDWFC  r0x06, F
00F6 5000      01118         MOVF    r0x07, W
00F8 1000      01119         IORWF   r0x08, W
00FA 1000      01120         IORWF   r0x0b, W
00FC 1000      01121         IORWF   r0x0c, W
00FE E100      01122         BNZ     _00177_DS_
               01123 ;       .line   180; src/clock.c        if(read_and_clear(&but2_pressed)){
0100 0E00      01124         MOVLW   HIGH(_but2_pressed)
0102 6E00      01125         MOVWF   r0x04
0104 0E00      01126         MOVLW   LOW(_but2_pressed)
0106 6E00      01127         MOVWF   r0x03
0108 0E80      01128         MOVLW   0x80
010A 6E00      01129         MOVWF   r0x05
010C 5000      01130         MOVF    r0x05, W
010E 6EE5      01131         MOVWF   POSTDEC1
0110 5000      01132         MOVF    r0x04, W
0112 6EE5      01133         MOVWF   POSTDEC1
0114 5000      01134         MOVF    r0x03, W
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0116 6EE5      01135         MOVWF   POSTDEC1
0118 EC00 F000 01136         CALL    _read_and_clear
011C 6E00      01137         MOVWF   r0x03
011E CFF3 F000 01138         MOVFF   PRODL, r0x04
0122 0E03      01139         MOVLW   0x03
0124 26E1      01140         ADDWF   FSR1L, F
0126 5000      01141         MOVF    r0x03, W
0128 1000      01142         IORWF   r0x04, W
012A E000      01143         BZ      _00184_DS_
               01144 ;       .line   181; src/clock.c        LCDErase();
012C EC00 F000 01145         CALL    _LCDErase
               01146 ;       .line   182; src/clock.c        return value;
0130 C000 FFF3 01147         MOVFF   r0x0a, PRODL
0134 5000      01148         MOVF    r0x09, W
0136 D000      01149         BRA     _00192_DS_
0138 01150 _00184_DS_:
               01151 ;       .line   184; src/clock.c        if(read_and_clear(&but1_pressed)){ 
0138 0E00      01152         MOVLW   HIGH(_but1_pressed)
013A 6E00      01153         MOVWF   r0x04
013C 0E00      01154         MOVLW   LOW(_but1_pressed)
013E 6E00      01155         MOVWF   r0x03
0140 0E80      01156         MOVLW   0x80
0142 6E00      01157         MOVWF   r0x05
0144 5000      01158         MOVF    r0x05, W
0146 6EE5      01159         MOVWF   POSTDEC1
0148 5000      01160         MOVF    r0x04, W
014A 6EE5      01161         MOVWF   POSTDEC1
014C 5000      01162         MOVF    r0x03, W
014E 6EE5      01163         MOVWF   POSTDEC1
0150 EC00 F000 01164         CALL    _read_and_clear
0154 6E00      01165         MOVWF   r0x03
0156 CFF3 F000 01166         MOVFF   PRODL, r0x04
015A 0E03      01167         MOVLW   0x03
015C 26E1      01168         ADDWF   FSR1L, F
015E 5000      01169         MOVF    r0x03, W
0160 1000      01170         IORWF   r0x04, W
0162 E000      01171         BZ      _00186_DS_
               01172 ;       .line   185; src/clock.c        value = (++value)%maxvalue;
0164 2A00      01173         INCF    r0x09, F
0166 B0D8      01174         BTFSC   STATUS, 0
0168 2A00      01175         INCF    r0x0a, F
016A 5000      01176         MOVF    r0x01, W
016C 6EE5      01177         MOVWF   POSTDEC1
016E 5000      01178         MOVF    r0x00, W
0170 6EE5      01179         MOVWF   POSTDEC1
0172 5000      01180         MOVF    r0x0a, W
0174 6EE5      01181         MOVWF   POSTDEC1
0176 5000      01182         MOVF    r0x09, W
0178 6EE5      01183         MOVWF   POSTDEC1
017A EC00 F000 01184         CALL    __modsint
017E 6E00      01185         MOVWF   r0x09
0180 CFF3 F000 01186         MOVFF   PRODL, r0x0a
0184 0E04      01187         MOVLW   0x04
0186 26E1      01188         ADDWF   FSR1L, F
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0188 01189 _00186_DS_:
               01190 ;       .line   187; src/clock.c        display_string(START_SECOND_LINE + length + 1, to_double_digits(value));
0188 5000      01191         MOVF    r0x0a, W
018A 6EE5      01192         MOVWF   POSTDEC1
018C 5000      01193         MOVF    r0x09, W
018E 6EE5      01194         MOVWF   POSTDEC1
0190 EC00 F000 01195         CALL    _to_double_digits
0194 6E00      01196         MOVWF   r0x03
0196 CFF3 F000 01197         MOVFF   PRODL, r0x04
019A CFF4 F000 01198         MOVFF   PRODH, r0x05
019E 0E02      01199         MOVLW   0x02
01A0 26E1      01200         ADDWF   FSR1L, F
01A2 5000      01201         MOVF    r0x05, W
01A4 6EE5      01202         MOVWF   POSTDEC1
01A6 5000      01203         MOVF    r0x04, W
01A8 6EE5      01204         MOVWF   POSTDEC1
01AA 5000      01205         MOVF    r0x03, W
01AC 6EE5      01206         MOVWF   POSTDEC1
01AE 5000      01207         MOVF    r0x02, W
01B0 6EE5      01208         MOVWF   POSTDEC1
01B2 EC00 F000 01209         CALL    _display_string
01B6 0E04      01210         MOVLW   0x04
01B8 26E1      01211         ADDWF   FSR1L, F
01BA D000      01212         BRA     _00190_DS_
01BC 01213 _00192_DS_:
01BC CFE4 F000 01214         MOVFF   PREINC1, r0x0c
01C0 CFE4 F000 01215         MOVFF   PREINC1, r0x0b
01C4 CFE4 F000 01216         MOVFF   PREINC1, r0x0a
01C8 CFE4 F000 01217         MOVFF   PREINC1, r0x09
01CC CFE4 F000 01218         MOVFF   PREINC1, r0x08
01D0 CFE4 F000 01219         MOVFF   PREINC1, r0x07
01D4 CFE4 F000 01220         MOVFF   PREINC1, r0x06
01D8 CFE4 F000 01221         MOVFF   PREINC1, r0x05
01DC CFE4 F000 01222         MOVFF   PREINC1, r0x04
01E0 CFE4 F000 01223         MOVFF   PREINC1, r0x03
01E4 CFE4 F000 01224         MOVFF   PREINC1, r0x02
01E8 CFE4 F000 01225         MOVFF   PREINC1, r0x01
01EC CFE4 F000 01226         MOVFF   PREINC1, r0x00
01F0 CFE4 FFD9 01227         MOVFF   PREINC1, FSR2L
01F4 0012      01228         RETURN  
               01229 
               01230 ; ; Starting pCode block
               01231 S_clock__read_and_clear code
0000 01232 _read_and_clear:
               01233 ;       .line   163; src/clock.c        int read_and_clear(int *variable){
0000 CFD9 FFE5 01234         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01235         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01236         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01237         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01238         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01239         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01240         MOVFF   r0x04, POSTDEC1
001C 0E02      01241         MOVLW   0x02
001E CFDB F000 01242         MOVFF   PLUSW2, r0x00
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0022 0E03      01243         MOVLW   0x03
0024 CFDB F000 01244         MOVFF   PLUSW2, r0x01
0028 0E04      01245         MOVLW   0x04
002A CFDB F000 01246         MOVFF   PLUSW2, r0x02
               01247 ;       .line   164; src/clock.c        if(*variable){
002E C000 FFE9 01248         MOVFF   r0x00, FSR0L
0032 C000 FFF3 01249         MOVFF   r0x01, PRODL
0036 5000      01250         MOVF    r0x02, W
0038 EC00 F000 01251         CALL    __gptrget2
003C 6E00      01252         MOVWF   r0x03
003E CFF3 F000 01253         MOVFF   PRODL, r0x04
0042 5000      01254         MOVF    r0x03, W
0044 1000      01255         IORWF   r0x04, W
0046 E000      01256         BZ      _00171_DS_
               01257 ;       .line   165; src/clock.c        *variable = 0;
0048 0E00      01258         MOVLW   0x00
004A 6EE5      01259         MOVWF   POSTDEC1
004C 0E00      01260         MOVLW   0x00
004E 6EF4      01261         MOVWF   PRODH
0050 C000 FFE9 01262         MOVFF   r0x00, FSR0L
0054 C000 FFF3 01263         MOVFF   r0x01, PRODL
0058 5000      01264         MOVF    r0x02, W
005A EC00 F000 01265         CALL    __gptrput2
               01266 ;       .line   166; src/clock.c        return 1;
005E 6AF3      01267         CLRF    PRODL
0060 0E01      01268         MOVLW   0x01
0062 D000      01269         BRA     _00172_DS_
0064 01270 _00171_DS_:
               01271 ;       .line   168; src/clock.c        return 0;
0064 6AF3      01272         CLRF    PRODL
0066 6AE8      01273         CLRF    WREG
0068 01274 _00172_DS_:
0068 CFE4 F000 01275         MOVFF   PREINC1, r0x04
006C CFE4 F000 01276         MOVFF   PREINC1, r0x03
0070 CFE4 F000 01277         MOVFF   PREINC1, r0x02
0074 CFE4 F000 01278         MOVFF   PREINC1, r0x01
0078 CFE4 F000 01279         MOVFF   PREINC1, r0x00
007C CFE4 FFD9 01280         MOVFF   PREINC1, FSR2L
0080 0012      01281         RETURN  
               01282 
               01283 ; ; Starting pCode block
               01284 S_clock__init_time      code
0000 01285 _init_time:
               01286 ;       .line   155; src/clock.c        void init_time(time t, char *mode){ 
0000 CFD9 FFE5 01287         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01288         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01289         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01290         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01291         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01292         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01293         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01294         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01295         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01296         MOVFF   r0x07, POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0028 C000 FFE5 01297         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01298         MOVFF   r0x09, POSTDEC1
0030 0E02      01299         MOVLW   0x02
0032 CFDB F000 01300         MOVFF   PLUSW2, r0x00
0036 0E03      01301         MOVLW   0x03
0038 CFDB F000 01302         MOVFF   PLUSW2, r0x01
003C 0E04      01303         MOVLW   0x04
003E CFDB F000 01304         MOVFF   PLUSW2, r0x02
0042 0E05      01305         MOVLW   0x05
0044 CFDB F000 01306         MOVFF   PLUSW2, r0x03
0048 0E06      01307         MOVLW   0x06
004A CFDB F000 01308         MOVFF   PLUSW2, r0x04
004E 0E07      01309         MOVLW   0x07
0050 CFDB F000 01310         MOVFF   PLUSW2, r0x05
               01311 ;       .line   157; src/clock.c        h = get_input(24, "Hours:", mode);
0054 5000      01312         MOVF    r0x05, W
0056 6EE5      01313         MOVWF   POSTDEC1
0058 5000      01314         MOVF    r0x04, W
005A 6EE5      01315         MOVWF   POSTDEC1
005C 5000      01316         MOVF    r0x03, W
005E 6EE5      01317         MOVWF   POSTDEC1
0060 0E00      01318         MOVLW   UPPER(__str_6)
0062 6EE5      01319         MOVWF   POSTDEC1
0064 0E00      01320         MOVLW   HIGH(__str_6)
0066 6EE5      01321         MOVWF   POSTDEC1
0068 0E00      01322         MOVLW   LOW(__str_6)
006A 6EE5      01323         MOVWF   POSTDEC1
006C 0E00      01324         MOVLW   0x00
006E 6EE5      01325         MOVWF   POSTDEC1
0070 0E18      01326         MOVLW   0x18
0072 6EE5      01327         MOVWF   POSTDEC1
0074 EC00 F000 01328         CALL    _get_input
0078 6E00      01329         MOVWF   r0x06
007A CFF3 F000 01330         MOVFF   PRODL, r0x07
007E 0E08      01331         MOVLW   0x08
0080 26E1      01332         ADDWF   FSR1L, F
               01333 ;       .line   158; src/clock.c        m = get_input(60, "Minutes:", mode);
0082 5000      01334         MOVF    r0x05, W
0084 6EE5      01335         MOVWF   POSTDEC1
0086 5000      01336         MOVF    r0x04, W
0088 6EE5      01337         MOVWF   POSTDEC1
008A 5000      01338         MOVF    r0x03, W
008C 6EE5      01339         MOVWF   POSTDEC1
008E 0E00      01340         MOVLW   UPPER(__str_7)
0090 6EE5      01341         MOVWF   POSTDEC1
0092 0E00      01342         MOVLW   HIGH(__str_7)
0094 6EE5      01343         MOVWF   POSTDEC1
0096 0E00      01344         MOVLW   LOW(__str_7)
0098 6EE5      01345         MOVWF   POSTDEC1
009A 0E00      01346         MOVLW   0x00
009C 6EE5      01347         MOVWF   POSTDEC1
009E 0E3C      01348         MOVLW   0x3c
00A0 6EE5      01349         MOVWF   POSTDEC1
00A2 EC00 F000 01350         CALL    _get_input
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A6 6E00      01351         MOVWF   r0x08
00A8 CFF3 F000 01352         MOVFF   PRODL, r0x09
00AC 0E08      01353         MOVLW   0x08
00AE 26E1      01354         ADDWF   FSR1L, F
               01355 ;       .line   159; src/clock.c        s = get_input(60, "Seconds:", mode);
00B0 5000      01356         MOVF    r0x05, W
00B2 6EE5      01357         MOVWF   POSTDEC1
00B4 5000      01358         MOVF    r0x04, W
00B6 6EE5      01359         MOVWF   POSTDEC1
00B8 5000      01360         MOVF    r0x03, W
00BA 6EE5      01361         MOVWF   POSTDEC1
00BC 0E00      01362         MOVLW   UPPER(__str_8)
00BE 6EE5      01363         MOVWF   POSTDEC1
00C0 0E00      01364         MOVLW   HIGH(__str_8)
00C2 6EE5      01365         MOVWF   POSTDEC1
00C4 0E00      01366         MOVLW   LOW(__str_8)
00C6 6EE5      01367         MOVWF   POSTDEC1
00C8 0E00      01368         MOVLW   0x00
00CA 6EE5      01369         MOVWF   POSTDEC1
00CC 0E3C      01370         MOVLW   0x3c
00CE 6EE5      01371         MOVWF   POSTDEC1
00D0 EC00 F000 01372         CALL    _get_input
00D4 6E00      01373         MOVWF   r0x03
00D6 CFF3 F000 01374         MOVFF   PRODL, r0x04
00DA 0E08      01375         MOVLW   0x08
00DC 26E1      01376         ADDWF   FSR1L, F
               01377 ;       .line   160; src/clock.c        time_set(t,h,m,s);
00DE 5000      01378         MOVF    r0x04, W
00E0 6EE5      01379         MOVWF   POSTDEC1
00E2 5000      01380         MOVF    r0x03, W
00E4 6EE5      01381         MOVWF   POSTDEC1
00E6 5000      01382         MOVF    r0x09, W
00E8 6EE5      01383         MOVWF   POSTDEC1
00EA 5000      01384         MOVF    r0x08, W
00EC 6EE5      01385         MOVWF   POSTDEC1
00EE 5000      01386         MOVF    r0x07, W
00F0 6EE5      01387         MOVWF   POSTDEC1
00F2 5000      01388         MOVF    r0x06, W
00F4 6EE5      01389         MOVWF   POSTDEC1
00F6 5000      01390         MOVF    r0x02, W
00F8 6EE5      01391         MOVWF   POSTDEC1
00FA 5000      01392         MOVF    r0x01, W
00FC 6EE5      01393         MOVWF   POSTDEC1
00FE 5000      01394         MOVF    r0x00, W
0100 6EE5      01395         MOVWF   POSTDEC1
0102 EC00 F000 01396         CALL    _time_set
0106 0E09      01397         MOVLW   0x09
0108 26E1      01398         ADDWF   FSR1L, F
010A CFE4 F000 01399         MOVFF   PREINC1, r0x09
010E CFE4 F000 01400         MOVFF   PREINC1, r0x08
0112 CFE4 F000 01401         MOVFF   PREINC1, r0x07
0116 CFE4 F000 01402         MOVFF   PREINC1, r0x06
011A CFE4 F000 01403         MOVFF   PREINC1, r0x05
011E CFE4 F000 01404         MOVFF   PREINC1, r0x04
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0122 CFE4 F000 01405         MOVFF   PREINC1, r0x03
0126 CFE4 F000 01406         MOVFF   PREINC1, r0x02
012A CFE4 F000 01407         MOVFF   PREINC1, r0x01
012E CFE4 F000 01408         MOVFF   PREINC1, r0x00
0132 CFE4 FFD9 01409         MOVFF   PREINC1, FSR2L
0136 0012      01410         RETURN  
               01411 
               01412 ; ; Starting pCode block
               01413 S_clock__display_config_mode    code
0000 01414 _display_config_mode:
               01415 ;       .line   150; src/clock.c        void display_config_mode(char *choice_string){
0000 CFD9 FFE5 01416         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01417         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01418         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01419         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01420         MOVFF   r0x02, POSTDEC1
0014 0E02      01421         MOVLW   0x02
0016 CFDB F000 01422         MOVFF   PLUSW2, r0x00
001A 0E03      01423         MOVLW   0x03
001C CFDB F000 01424         MOVFF   PLUSW2, r0x01
0020 0E04      01425         MOVLW   0x04
0022 CFDB F000 01426         MOVFF   PLUSW2, r0x02
               01427 ;       .line   151; src/clock.c        display_string(START_FIRST_LINE, CM_STRING);
0026 0E00      01428         MOVLW   UPPER(__str_5)
0028 6EE5      01429         MOVWF   POSTDEC1
002A 0E00      01430         MOVLW   HIGH(__str_5)
002C 6EE5      01431         MOVWF   POSTDEC1
002E 0E00      01432         MOVLW   LOW(__str_5)
0030 6EE5      01433         MOVWF   POSTDEC1
0032 0E00      01434         MOVLW   0x00
0034 6EE5      01435         MOVWF   POSTDEC1
0036 EC00 F000 01436         CALL    _display_string
003A 0E04      01437         MOVLW   0x04
003C 26E1      01438         ADDWF   FSR1L, F
               01439 ;       .line   152; src/clock.c        display_string(START_SECOND_LINE, choice_string);
003E 5000      01440         MOVF    r0x02, W
0040 6EE5      01441         MOVWF   POSTDEC1
0042 5000      01442         MOVF    r0x01, W
0044 6EE5      01443         MOVWF   POSTDEC1
0046 5000      01444         MOVF    r0x00, W
0048 6EE5      01445         MOVWF   POSTDEC1
004A 0E10      01446         MOVLW   0x10
004C 6EE5      01447         MOVWF   POSTDEC1
004E EC00 F000 01448         CALL    _display_string
0052 0E04      01449         MOVLW   0x04
0054 26E1      01450         ADDWF   FSR1L, F
0056 CFE4 F000 01451         MOVFF   PREINC1, r0x02
005A CFE4 F000 01452         MOVFF   PREINC1, r0x01
005E CFE4 F000 01453         MOVFF   PREINC1, r0x00
0062 CFE4 FFD9 01454         MOVFF   PREINC1, FSR2L
0066 0012      01455         RETURN  
               01456 
               01457 ; ; Starting pCode block
               01458 S_clock__init_config    code
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0000 01459 _init_config:
               01460 ;       .line   95; src/clock.c void init_config(void){
0000 CFD9 FFE5 01461         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01462         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01463         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01464         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01465         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01466         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01467         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01468         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01469         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01470         MOVFF   r0x07, POSTDEC1
               01471 ;       .line   97; src/clock.c int choice = CONFIG_MODE_ALARM;
0028 6A00      01472         CLRF    r0x00
002A 6A00      01473         CLRF    r0x01
               01474 ;       .line   98; src/clock.c char *choice_string = CM_ALARM_STRING;
002C 0E00      01475         MOVLW   LOW(__str_0)
002E 6E00      01476         MOVWF   r0x02
0030 0E00      01477         MOVLW   HIGH(__str_0)
0032 6E00      01478         MOVWF   r0x03
0034 0E00      01479         MOVLW   UPPER(__str_0)
0036 6E00      01480         MOVWF   r0x04
               01481 ;       .line   99; src/clock.c display_config_mode(choice_string);
0038 5000      01482         MOVF    r0x04, W
003A 6EE5      01483         MOVWF   POSTDEC1
003C 5000      01484         MOVF    r0x03, W
003E 6EE5      01485         MOVWF   POSTDEC1
0040 5000      01486         MOVF    r0x02, W
0042 6EE5      01487         MOVWF   POSTDEC1
0044 EC00 F000 01488         CALL    _display_config_mode
0048 0E03      01489         MOVLW   0x03
004A 26E1      01490         ADDWF   FSR1L, F
004C 01491 _00138_DS_:
               01492 ;       .line   101; src/clock.c        if(read_and_clear(&but2_pressed)){
004C 0E00      01493         MOVLW   HIGH(_but2_pressed)
004E 6E00      01494         MOVWF   r0x06
0050 0E00      01495         MOVLW   LOW(_but2_pressed)
0052 6E00      01496         MOVWF   r0x05
0054 0E80      01497         MOVLW   0x80
0056 6E00      01498         MOVWF   r0x07
0058 5000      01499         MOVF    r0x07, W
005A 6EE5      01500         MOVWF   POSTDEC1
005C 5000      01501         MOVF    r0x06, W
005E 6EE5      01502         MOVWF   POSTDEC1
0060 5000      01503         MOVF    r0x05, W
0062 6EE5      01504         MOVWF   POSTDEC1
0064 EC00 F000 01505         CALL    _read_and_clear
0068 6E00      01506         MOVWF   r0x05
006A CFF3 F000 01507         MOVFF   PRODL, r0x06
006E 0E03      01508         MOVLW   0x03
0070 26E1      01509         ADDWF   FSR1L, F
0072 5000      01510         MOVF    r0x05, W
0074 1000      01511         IORWF   r0x06, W
0076 B4D8      01512         BTFSC   STATUS, 2
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0078 D000      01513         BRA     _00130_DS_
               01514 ;       .line   103; src/clock.c        switch(choice){
007A 5000      01515         MOVF    r0x00, W
007C E100      01516         BNZ     _00150_DS_
007E 5000      01517         MOVF    r0x01, W
0080 E000      01518         BZ      _00125_DS_
0082 01519 _00150_DS_:
0082 5000      01520         MOVF    r0x00, W
0084 0A01      01521         XORLW   0x01
0086 E100      01522         BNZ     _00152_DS_
0088 5000      01523         MOVF    r0x01, W
008A E000      01524         BZ      _00126_DS_
008C 01525 _00152_DS_:
008C D000      01526         BRA     _00127_DS_
008E 01527 _00125_DS_:
               01528 ;       .line   106; src/clock.c        LCDErase();
008E EC00 F000 01529         CALL    _LCDErase
               01530 ;       .line   107; src/clock.c        init_time(_alarm, SM_ALARM_STRING);                     
0092 0E00      01531         MOVLW   UPPER(__str_1)
0094 6EE5      01532         MOVWF   POSTDEC1
0096 0E00      01533         MOVLW   HIGH(__str_1)
0098 6EE5      01534         MOVWF   POSTDEC1
009A 0E00      01535         MOVLW   LOW(__str_1)
009C 6EE5      01536         MOVWF   POSTDEC1
009E 0000      01537         BANKSEL (__alarm + 2)
00A0 5100      01538         MOVF    (__alarm + 2), W, B
00A2 6EE5      01539         MOVWF   POSTDEC1
00A4 0000      01540         BANKSEL (__alarm + 1)
00A6 5100      01541         MOVF    (__alarm + 1), W, B
00A8 6EE5      01542         MOVWF   POSTDEC1
00AA 0000      01543         BANKSEL __alarm
00AC 5100      01544         MOVF    __alarm, W, B
00AE 6EE5      01545         MOVWF   POSTDEC1
00B0 EC00 F000 01546         CALL    _init_time
00B4 0E06      01547         MOVLW   0x06
00B6 26E1      01548         ADDWF   FSR1L, F
               01549 ;       .line   108; src/clock.c        display_config_mode(choice_string);
00B8 5000      01550         MOVF    r0x04, W
00BA 6EE5      01551         MOVWF   POSTDEC1
00BC 5000      01552         MOVF    r0x03, W
00BE 6EE5      01553         MOVWF   POSTDEC1
00C0 5000      01554         MOVF    r0x02, W
00C2 6EE5      01555         MOVWF   POSTDEC1
00C4 EC00 F000 01556         CALL    _display_config_mode
00C8 0E03      01557         MOVLW   0x03
00CA 26E1      01558         ADDWF   FSR1L, F
               01559 ;       .line   109; src/clock.c        break;
00CC D000      01560         BRA     _00130_DS_
00CE 01561 _00126_DS_:
               01562 ;       .line   112; src/clock.c        LCDErase();
00CE EC00 F000 01563         CALL    _LCDErase
               01564 ;       .line   113; src/clock.c        init_time(_time, SM_CLOCK_STRING);                      
00D2 0E00      01565         MOVLW   UPPER(__str_2)
00D4 6EE5      01566         MOVWF   POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00D6 0E00      01567         MOVLW   HIGH(__str_2)
00D8 6EE5      01568         MOVWF   POSTDEC1
00DA 0E00      01569         MOVLW   LOW(__str_2)
00DC 6EE5      01570         MOVWF   POSTDEC1
00DE 0000      01571         BANKSEL (__time + 2)
00E0 5100      01572         MOVF    (__time + 2), W, B
00E2 6EE5      01573         MOVWF   POSTDEC1
00E4 0000      01574         BANKSEL (__time + 1)
00E6 5100      01575         MOVF    (__time + 1), W, B
00E8 6EE5      01576         MOVWF   POSTDEC1
00EA 0000      01577         BANKSEL __time
00EC 5100      01578         MOVF    __time, W, B
00EE 6EE5      01579         MOVWF   POSTDEC1
00F0 EC00 F000 01580         CALL    _init_time
00F4 0E06      01581         MOVLW   0x06
00F6 26E1      01582         ADDWF   FSR1L, F
               01583 ;       .line   114; src/clock.c        display_config_mode(choice_string);
00F8 5000      01584         MOVF    r0x04, W
00FA 6EE5      01585         MOVWF   POSTDEC1
00FC 5000      01586         MOVF    r0x03, W
00FE 6EE5      01587         MOVWF   POSTDEC1
0100 5000      01588         MOVF    r0x02, W
0102 6EE5      01589         MOVWF   POSTDEC1
0104 EC00 F000 01590         CALL    _display_config_mode
0108 0E03      01591         MOVLW   0x03
010A 26E1      01592         ADDWF   FSR1L, F
               01593 ;       .line   115; src/clock.c        break;
010C D000      01594         BRA     _00130_DS_
010E 01595 _00127_DS_:
               01596 ;       .line   117; src/clock.c        LCDErase();
010E EC00 F000 01597         CALL    _LCDErase
               01598 ;       .line   118; src/clock.c        return;
0112 D000      01599         BRA     _00140_DS_
0114 01600 _00130_DS_:
               01601 ;       .line   121; src/clock.c        if(read_and_clear(&but1_pressed)){ 
0114 0E00      01602         MOVLW   HIGH(_but1_pressed)
0116 6E00      01603         MOVWF   r0x06
0118 0E00      01604         MOVLW   LOW(_but1_pressed)
011A 6E00      01605         MOVWF   r0x05
011C 0E80      01606         MOVLW   0x80
011E 6E00      01607         MOVWF   r0x07
0120 5000      01608         MOVF    r0x07, W
0122 6EE5      01609         MOVWF   POSTDEC1
0124 5000      01610         MOVF    r0x06, W
0126 6EE5      01611         MOVWF   POSTDEC1
0128 5000      01612         MOVF    r0x05, W
012A 6EE5      01613         MOVWF   POSTDEC1
012C EC00 F000 01614         CALL    _read_and_clear
0130 6E00      01615         MOVWF   r0x05
0132 CFF3 F000 01616         MOVFF   PRODL, r0x06
0136 0E03      01617         MOVLW   0x03
0138 26E1      01618         ADDWF   FSR1L, F
013A 5000      01619         MOVF    r0x05, W
013C 1000      01620         IORWF   r0x06, W
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
013E B4D8      01621         BTFSC   STATUS, 2
0140 D000      01622         BRA     _00138_DS_
               01623 ;       .line   123; src/clock.c        switch(choice){
0142 5000      01624         MOVF    r0x01, W
0144 0F80      01625         ADDLW   0x80
0146 0F81      01626         ADDLW   0x81
0148 E100      01627         BNZ     _00153_DS_
014A 0EFF      01628         MOVLW   0xff
014C 5C00      01629         SUBWF   r0x00, W
014E 01630 _00153_DS_:
014E A0D8      01631         BTFSS   STATUS, 0
0150 D000      01632         BRA     _00138_DS_
0152 5000      01633         MOVF    r0x01, W
0154 0F80      01634         ADDLW   0x80
0156 0F80      01635         ADDLW   0x80
0158 E100      01636         BNZ     _00154_DS_
015A 0E02      01637         MOVLW   0x02
015C 5C00      01638         SUBWF   r0x00, W
015E 01639 _00154_DS_:
015E B0D8      01640         BTFSC   STATUS, 0
0160 D000      01641         BRA     _00138_DS_
0162 2800      01642         INCF    r0x00, W
0164 6E00      01643         MOVWF   r0x05
0166 C000 FFE5 01644         MOVFF   r0x08, POSTDEC1
016A C000 FFE5 01645         MOVFF   r0x09, POSTDEC1
016E 6A00      01646         CLRF    r0x09
0170 3400      01647         RLCF    r0x05, W
0172 3600      01648         RLCF    r0x09, F
0174 34E8      01649         RLCF    WREG, W
0176 3600      01650         RLCF    r0x09, F
0178 0BFC      01651         ANDLW   0xfc
017A 6E00      01652         MOVWF   r0x08
017C 0E00      01653         MOVLW   UPPER(_00155_DS_)
017E 6EFB      01654         MOVWF   PCLATU
0180 0E00      01655         MOVLW   HIGH(_00155_DS_)
0182 6EFA      01656         MOVWF   PCLATH
0184 0E00      01657         MOVLW   LOW(_00155_DS_)
0186 2600      01658         ADDWF   r0x08, F
0188 5000      01659         MOVF    r0x09, W
018A 22FA      01660         ADDWFC  PCLATH, F
018C B0D8      01661         BTFSC   STATUS, 0
018E 2AFB      01662         INCF    PCLATU, F
0190 5000      01663         MOVF    r0x08, W
0192 CFE4 F000 01664         MOVFF   PREINC1, r0x09
0196 CFE4 F000 01665         MOVFF   PREINC1, r0x08
019A 6EF9      01666         MOVWF   PCL
019C 01667 _00155_DS_:
019C EF00 F000 01668         GOTO    _00131_DS_
01A0 EF00 F000 01669         GOTO    _00132_DS_
01A4 EF00 F000 01670         GOTO    _00133_DS_
01A8 01671 _00131_DS_:
               01672 ;       .line   126; src/clock.c        LCDErase();
01A8 EC00 F000 01673         CALL    _LCDErase
               01674 ;       .line   127; src/clock.c        choice = CONFIG_MODE_ALARM;
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01AC 6A00      01675         CLRF    r0x00
01AE 6A00      01676         CLRF    r0x01
               01677 ;       .line   128; src/clock.c        choice_string = CM_ALARM_STRING;
01B0 0E00      01678         MOVLW   LOW(__str_0)
01B2 6E00      01679         MOVWF   r0x02
01B4 0E00      01680         MOVLW   HIGH(__str_0)
01B6 6E00      01681         MOVWF   r0x03
01B8 0E00      01682         MOVLW   UPPER(__str_0)
01BA 6E00      01683         MOVWF   r0x04
               01684 ;       .line   129; src/clock.c        display_config_mode(choice_string);
01BC 5000      01685         MOVF    r0x04, W
01BE 6EE5      01686         MOVWF   POSTDEC1
01C0 5000      01687         MOVF    r0x03, W
01C2 6EE5      01688         MOVWF   POSTDEC1
01C4 5000      01689         MOVF    r0x02, W
01C6 6EE5      01690         MOVWF   POSTDEC1
01C8 EC00 F000 01691         CALL    _display_config_mode
01CC 0E03      01692         MOVLW   0x03
01CE 26E1      01693         ADDWF   FSR1L, F
               01694 ;       .line   130; src/clock.c        break;
01D0 D000      01695         BRA     _00138_DS_
01D2 01696 _00132_DS_:
               01697 ;       .line   133; src/clock.c        LCDErase();
01D2 EC00 F000 01698         CALL    _LCDErase
               01699 ;       .line   134; src/clock.c        choice = CONFIG_MODE_CLOCK;
01D6 0E01      01700         MOVLW   0x01
01D8 6E00      01701         MOVWF   r0x00
01DA 6A00      01702         CLRF    r0x01
               01703 ;       .line   135; src/clock.c        choice_string = CM_CLOCK_STRING;
01DC 0E00      01704         MOVLW   LOW(__str_3)
01DE 6E00      01705         MOVWF   r0x02
01E0 0E00      01706         MOVLW   HIGH(__str_3)
01E2 6E00      01707         MOVWF   r0x03
01E4 0E00      01708         MOVLW   UPPER(__str_3)
01E6 6E00      01709         MOVWF   r0x04
               01710 ;       .line   136; src/clock.c        display_config_mode(choice_string);
01E8 5000      01711         MOVF    r0x04, W
01EA 6EE5      01712         MOVWF   POSTDEC1
01EC 5000      01713         MOVF    r0x03, W
01EE 6EE5      01714         MOVWF   POSTDEC1
01F0 5000      01715         MOVF    r0x02, W
01F2 6EE5      01716         MOVWF   POSTDEC1
01F4 EC00 F000 01717         CALL    _display_config_mode
01F8 0E03      01718         MOVLW   0x03
01FA 26E1      01719         ADDWF   FSR1L, F
               01720 ;       .line   137; src/clock.c        break;
01FC D000      01721         BRA     _00138_DS_
01FE 01722 _00133_DS_:
               01723 ;       .line   140; src/clock.c        LCDErase();
01FE EC00 F000 01724         CALL    _LCDErase
               01725 ;       .line   141; src/clock.c        choice =CONFIG_MODE_QUIT;
0202 0EFF      01726         MOVLW   0xff
0204 6E00      01727         MOVWF   r0x00
0206 6E00      01728         MOVWF   r0x01
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01729 ;       .line   142; src/clock.c        choice_string = CM_QUIT_STRING;
0208 0E00      01730         MOVLW   LOW(__str_4)
020A 6E00      01731         MOVWF   r0x02
020C 0E00      01732         MOVLW   HIGH(__str_4)
020E 6E00      01733         MOVWF   r0x03
0210 0E00      01734         MOVLW   UPPER(__str_4)
0212 6E00      01735         MOVWF   r0x04
               01736 ;       .line   143; src/clock.c        display_config_mode(choice_string);
0214 5000      01737         MOVF    r0x04, W
0216 6EE5      01738         MOVWF   POSTDEC1
0218 5000      01739         MOVF    r0x03, W
021A 6EE5      01740         MOVWF   POSTDEC1
021C 5000      01741         MOVF    r0x02, W
021E 6EE5      01742         MOVWF   POSTDEC1
0220 EC00 F000 01743         CALL    _display_config_mode
0224 0E03      01744         MOVLW   0x03
0226 26E1      01745         ADDWF   FSR1L, F
               01746 ;       .line   145; src/clock.c        }
0228 D000      01747         BRA     _00138_DS_
022A 01748 _00140_DS_:
022A CFE4 F000 01749         MOVFF   PREINC1, r0x07
022E CFE4 F000 01750         MOVFF   PREINC1, r0x06
0232 CFE4 F000 01751         MOVFF   PREINC1, r0x05
0236 CFE4 F000 01752         MOVFF   PREINC1, r0x04
023A CFE4 F000 01753         MOVFF   PREINC1, r0x03
023E CFE4 F000 01754         MOVFF   PREINC1, r0x02
0242 CFE4 F000 01755         MOVFF   PREINC1, r0x01
0246 CFE4 F000 01756         MOVFF   PREINC1, r0x00
024A CFE4 FFD9 01757         MOVFF   PREINC1, FSR2L
024E 0012      01758         RETURN  
               01759 
               01760 ; ; Starting pCode block
               01761 S_clock__alarm_led      code
0000 01762 _alarm_led:
               01763 ;       .line   91; src/clock.c void alarm_led(void){
0000 CFD9 FFE5 01764         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01765         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01766         MOVFF   r0x00, POSTDEC1
               01767 ;       .line   92; src/clock.c LED1_IO^=1;
000C 6A00      01768         CLRF    r0x00
000E B200      01769         BTFSC   _LATJbits, 1
0010 2A00      01770         INCF    r0x00, F
0012 0E01      01771         MOVLW   0x01
0014 1A00      01772         XORWF   r0x00, F
0016 5000      01773         MOVF    r0x00, W
0018 0B01      01774         ANDLW   0x01
001A 44E8      01775         RLNCF   WREG, W
001C 6EF4      01776         MOVWF   PRODH
001E 5000      01777         MOVF    _LATJbits, W
0020 0BFD      01778         ANDLW   0xfd
0022 10F4      01779         IORWF   PRODH, W
0024 6E00      01780         MOVWF   _LATJbits
               01781 ;       .line   93; src/clock.c LED2_IO^=1;
0026 6A00      01782         CLRF    r0x00
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0028 B400      01783         BTFSC   _LATJbits, 2
002A 2A00      01784         INCF    r0x00, F
002C 0E01      01785         MOVLW   0x01
002E 1A00      01786         XORWF   r0x00, F
0030 5000      01787         MOVF    r0x00, W
0032 0B01      01788         ANDLW   0x01
0034 44E8      01789         RLNCF   WREG, W
0036 44E8      01790         RLNCF   WREG, W
0038 6EF4      01791         MOVWF   PRODH
003A 5000      01792         MOVF    _LATJbits, W
003C 0BFB      01793         ANDLW   0xfb
003E 10F4      01794         IORWF   PRODH, W
0040 6E00      01795         MOVWF   _LATJbits
0042 CFE4 F000 01796         MOVFF   PREINC1, r0x00
0046 CFE4 FFD9 01797         MOVFF   PREINC1, FSR2L
004A 0012      01798         RETURN  
               01799 
               01800 ; ; Starting pCode block
               01801 S_clock__toggle_led     code
0000 01802 _toggle_led:
               01803 ;       .line   87; src/clock.c void toggle_led(void){
0000 CFD9 FFE5 01804         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01805         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01806         MOVFF   r0x00, POSTDEC1
               01807 ;       .line   88; src/clock.c LED0_IO^=1;
000C 6A00      01808         CLRF    r0x00
000E B000      01809         BTFSC   _LATJbits, 0
0010 2A00      01810         INCF    r0x00, F
0012 0E01      01811         MOVLW   0x01
0014 1A00      01812         XORWF   r0x00, F
0016 5000      01813         MOVF    r0x00, W
0018 0B01      01814         ANDLW   0x01
001A 6EF4      01815         MOVWF   PRODH
001C 5000      01816         MOVF    _LATJbits, W
001E 0BFE      01817         ANDLW   0xfe
0020 10F4      01818         IORWF   PRODH, W
0022 6E00      01819         MOVWF   _LATJbits
0024 CFE4 F000 01820         MOVFF   PREINC1, r0x00
0028 CFE4 FFD9 01821         MOVFF   PREINC1, FSR2L
002C 0012      01822         RETURN  
               01823 
               01824 ; ; Starting pCode block
               01825 S_clock__update_display code
0000 01826 _update_display:
               01827 ;       .line   82; src/clock.c void update_display(void){
0000 CFD9 FFE5 01828         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01829         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01830         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01831         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01832         MOVFF   r0x02, POSTDEC1
               01833 ;       .line   83; src/clock.c time_print(_time, display_line);
0014 0E00      01834         MOVLW   HIGH(_display_line)
0016 6E00      01835         MOVWF   r0x01
0018 0E00      01836         MOVLW   LOW(_display_line)
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
001A 6E00      01837         MOVWF   r0x00
001C 0E80      01838         MOVLW   0x80
001E 6E00      01839         MOVWF   r0x02
0020 5000      01840         MOVF    r0x02, W
0022 6EE5      01841         MOVWF   POSTDEC1
0024 5000      01842         MOVF    r0x01, W
0026 6EE5      01843         MOVWF   POSTDEC1
0028 5000      01844         MOVF    r0x00, W
002A 6EE5      01845         MOVWF   POSTDEC1
002C 0000      01846         BANKSEL (__time + 2)
002E 5100      01847         MOVF    (__time + 2), W, B
0030 6EE5      01848         MOVWF   POSTDEC1
0032 0000      01849         BANKSEL (__time + 1)
0034 5100      01850         MOVF    (__time + 1), W, B
0036 6EE5      01851         MOVWF   POSTDEC1
0038 0000      01852         BANKSEL __time
003A 5100      01853         MOVF    __time, W, B
003C 6EE5      01854         MOVWF   POSTDEC1
003E EC00 F000 01855         CALL    _time_print
0042 0E06      01856         MOVLW   0x06
0044 26E1      01857         ADDWF   FSR1L, F
               01858 ;       .line   84; src/clock.c display_string(0, display_line);
0046 0E00      01859         MOVLW   HIGH(_display_line)
0048 6E00      01860         MOVWF   r0x01
004A 0E00      01861         MOVLW   LOW(_display_line)
004C 6E00      01862         MOVWF   r0x00
004E 0E80      01863         MOVLW   0x80
0050 6E00      01864         MOVWF   r0x02
0052 5000      01865         MOVF    r0x02, W
0054 6EE5      01866         MOVWF   POSTDEC1
0056 5000      01867         MOVF    r0x01, W
0058 6EE5      01868         MOVWF   POSTDEC1
005A 5000      01869         MOVF    r0x00, W
005C 6EE5      01870         MOVWF   POSTDEC1
005E 0E00      01871         MOVLW   0x00
0060 6EE5      01872         MOVWF   POSTDEC1
0062 EC00 F000 01873         CALL    _display_string
0066 0E04      01874         MOVLW   0x04
0068 26E1      01875         ADDWF   FSR1L, F
006A CFE4 F000 01876         MOVFF   PREINC1, r0x02
006E CFE4 F000 01877         MOVFF   PREINC1, r0x01
0072 CFE4 F000 01878         MOVFF   PREINC1, r0x00
0076 CFE4 FFD9 01879         MOVFF   PREINC1, FSR2L
007A 0012      01880         RETURN  
               01881 
               01882 ; ; Starting pCode block
007C 01883 __str_0:
007C 6553 2074 01884         DB      0x53, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x3f, 0x00
     6C61 7261 
     3F6D 0000 
               01885 ; ; Starting pCode block
0088 01886 __str_1:
0088 6553 2074 01887         DB      0x53, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x3a, 0x00
     6C61 7261 
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
     3A6D 0000 
               01888 ; ; Starting pCode block
0094 01889 __str_2:
0094 6553 2074 01890         DB      0x53, 0x65, 0x74, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x3a, 0x00
     6C63 636F 
     3A6B 0000 
               01891 ; ; Starting pCode block
00A0 01892 __str_3:
00A0 6553 2074 01893         DB      0x53, 0x65, 0x74, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x3f, 0x00
     6C63 636F 
     3F6B 0000 
               01894 ; ; Starting pCode block
00AC 01895 __str_4:
00AC 7551 7469 01896         DB      0x51, 0x75, 0x69, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20
     6320 6E6F 
     6966 2067 
00B8 6F6D 6564 01897         DB      0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x00
     002E      
               01898 ; ; Starting pCode block
00BE 01899 __str_5:
00BE 6843 6F6F 01900         DB      0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x3a
     6573 6D20 
     646F 3A65 
00CA 0000      01901         DB      0x00
               01902 ; ; Starting pCode block
00CC 01903 __str_6:
00CC 6F48 7275 01904         DB      0x48, 0x6f, 0x75, 0x72, 0x73, 0x3a, 0x00
     3A73 0000 
               01905 ; ; Starting pCode block
00D4 01906 __str_7:
00D4 694D 756E 01907         DB      0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x3a, 0x00
     6574 3A73 
     0000      
               01908 ; ; Starting pCode block
00DE 01909 __str_8:
00DE 6553 6F63 01910         DB      0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x3a, 0x00
     646E 3A73 
     0000      
               01911 ; ; Starting pCode block
00E8 01912 __str_9:
00E8 3025 6432 01913         DB      0x25, 0x30, 0x32, 0x64, 0x00
     0000      
               01914 
               01915 
               01916 ; Statistics:
               01917 ; code size:     2828 (0x0b0c) bytes ( 2.16%)
               01918 ;                1414 (0x0586) words
               01919 ; udata size:      41 (0x0029) bytes ( 1.07%)
               01920 ; access size:     13 (0x000d) bytes
               01921 
               01922 
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

BSR                               00000FE0
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00125_DS_                        0000008E
_00126_DS_                        000000CE
_00127_DS_                        0000010E
_00130_DS_                        00000114
_00131_DS_                        000001A8
_00132_DS_                        000001D2
_00133_DS_                        000001FE
_00138_DS_                        0000004C
_00140_DS_                        0000022A
_00150_DS_                        00000082
_00152_DS_                        0000008C
_00153_DS_                        0000014E
_00154_DS_                        0000015E
_00155_DS_                        0000019C
_00171_DS_                        00000064
_00172_DS_                        00000068
_00177_DS_                        000000D6
_00184_DS_                        00000138
_00186_DS_                        00000188
_00190_DS_                        000000C0
_00192_DS_                        000001BC
_00197_DS_                        00000090
_00201_DS_                        000000DE
_00205_DS_                        00000088
_00221_DS_                        00000052
_00223_DS_                        00000070
_00225_DS_                        000000F0
_00229_DS_                        00000128
_00233_DS_                        0000009E
_00234_DS_                        00000152
_00237_DS_                        00000154
_00252_DS_                        0000007E
_00253_DS_                        00000096
_00254_DS_                        00000098
_00255_DS_                        000000AC
_00256_DS_                        000000AE
_00257_DS_                        00000116
_00258_DS_                        00000118
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_10263_DS_                        00000088
_20264_DS_                        00000104
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCON1                         00000000
_BAUDCON1bits                     00000000
_BAUDCON2                         00000000
_BAUDCON2bits                     00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTL1                         00000000
_BAUDCTL1bits                     00000000
_BAUDCTL2                         00000000
_BAUDCTL2bits                     00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCP3CON                          00000000
_CCP3CONbits                      00000000
_CCP4CON                          00000000
_CCP4CONbits                      00000000
_CCP5CON                          00000000
_CCP5CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CCPR3                            00000000
_CCPR3H                           00000000
_CCPR3L                           00000000
_CCPR4                            00000000
_CCPR4H                           00000000
_CCPR4L                           00000000
_CCPR5                            00000000
_CCPR5H                           00000000
_CCPR5L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_DDRA                             00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_DDRAbits                         00000000
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_DDRF                             00000000
_DDRFbits                         00000000
_DDRG                             00000000
_DDRGbits                         00000000
_DDRH                             00000000
_DDRHbits                         00000000
_DDRJ                             00000000
_DDRJbits                         00000000
_EBSTCON                          00000000
_EBSTCONbits                      00000000
_EBSTCS                           00000000
_EBSTCSH                          00000000
_EBSTCSL                          00000000
_EBSTSD                           00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_ECCP2AS                          00000000
_ECCP2ASbits                      00000000
_ECCP2CON                         00000000
_ECCP2CONbits                     00000000
_ECCP2DEL                         00000000
_ECCP2DELbits                     00000000
_ECCP3AS                          00000000
_ECCP3ASbits                      00000000
_ECCP3CON                         00000000
_ECCP3CONbits                     00000000
_ECCP3DEL                         00000000
_ECCP3DELbits                     00000000
_ECON1                            00000000
_ECON1bits                        00000000
_ECON2                            00000000
_ECON2bits                        00000000
_EDATA                            00000000
_EDATAbits                        00000000
_EDMACS                           00000000
_EDMACSH                          00000000
_EDMACSL                          00000000
_EDMADST                          00000000
_EDMADSTH                         00000000
_EDMADSTL                         00000000
_EDMAND                           00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EDMANDH                          00000000
_EDMANDL                          00000000
_EDMAST                           00000000
_EDMASTH                          00000000
_EDMASTL                          00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EFLOCON                          00000000
_EFLOCONbits                      00000000
_EHT0                             00000000
_EHT1                             00000000
_EHT2                             00000000
_EHT3                             00000000
_EHT4                             00000000
_EHT5                             00000000
_EHT6                             00000000
_EHT7                             00000000
_EIE                              00000000
_EIEbits                          00000000
_EIR                              00000000
_EIRbits                          00000000
_EPAUS                            00000000
_EPAUSH                           00000000
_EPAUSL                           00000000
_EPKTCNT                          00000000
_EPMCS                            00000000
_EPMCSH                           00000000
_EPMCSL                           00000000
_EPMM0                            00000000
_EPMM1                            00000000
_EPMM2                            00000000
_EPMM3                            00000000
_EPMM4                            00000000
_EPMM5                            00000000
_EPMM6                            00000000
_EPMM7                            00000000
_EPMO                             00000000
_EPMOH                            00000000
_EPMOL                            00000000
_ERDPT                            00000000
_ERDPTH                           00000000
_ERDPTL                           00000000
_ERXFCON                          00000000
_ERXFCONbits                      00000000
_ERXND                            00000000
_ERXNDH                           00000000
_ERXNDL                           00000000
_ERXRDPT                          00000000
_ERXRDPTH                         00000000
_ERXRDPTL                         00000000
_ERXST                            00000000
_ERXSTH                           00000000
_ERXSTL                           00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_ERXWRPT                          00000000
_ERXWRPTH                         00000000
_ERXWRPTL                         00000000
_ESTAT                            00000000
_ESTATbits                        00000000
_ETXND                            00000000
_ETXNDH                           00000000
_ETXNDL                           00000000
_ETXST                            00000000
_ETXSTH                           00000000
_ETXSTL                           00000000
_EWOLIE                           00000000
_EWOLIEbits                       00000000
_EWOLIR                           00000000
_EWOLIRbits                       00000000
_EWRPT                            00000000
_EWRPTH                           00000000
_EWRPTL                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_IPR3                             00000000
_IPR3bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LATF                             00000000
_LATFbits                         00000000
_LATG                             00000000
_LATGbits                         00000000
_LATH                             00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_LATHbits                         00000000
_LATJ                             00000000
_LATJbits                         00000000
_LCDErase                         00000000
_LCDInit                          00000000
_LCDText                          00000000
_LCDUpdate                        00000000
_MAADR1                           00000000
_MAADR2                           00000000
_MAADR3                           00000000
_MAADR4                           00000000
_MAADR5                           00000000
_MAADR6                           00000000
_MABBIPG                          00000000
_MACLCON1                         00000000
_MACLCON1bits                     00000000
_MACLCON2                         00000000
_MACLCON2bits                     00000000
_MACON1                           00000000
_MACON1bits                       00000000
_MACON2                           00000000
_MACON2bits                       00000000
_MACON3                           00000000
_MACON3bits                       00000000
_MACON4                           00000000
_MACON4bits                       00000000
_MAIPG                            00000000
_MAIPGH                           00000000
_MAIPGL                           00000000
_MAMXFL                           00000000
_MAMXFLH                          00000000
_MAMXFLL                          00000000
_MEMCON                           00000000
_MEMCONbits                       00000000
_MICMD                            00000000
_MICMDbits                        00000000
_MICON                            00000000
_MICONbits                        00000000
_MIRD                             00000000
_MIRDH                            00000000
_MIRDL                            00000000
_MIREGADR                         00000000
_MISTAT                           00000000
_MISTATbits                       00000000
_MIWR                             00000000
_MIWRH                            00000000
_MIWRL                            00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_PC                               00000000
_PCL                              00000000
_PCLATH                           00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIE3                             00000000
_PIE3bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PIR3                             00000000
_PIR3bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_PORTF                            00000000
_PORTFbits                        00000000
_PORTG                            00000000
_PORTGbits                        00000000
_PORTH                            00000000
_PORTHbits                        00000000
_PORTJ                            00000000
_PORTJbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PR4                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_PSPCON                           00000000
_PSPCONbits                       00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCREG1                           00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_RCREG2                           00000000
_RCSTA                            00000000
_RCSTA1                           00000000
_RCSTA1bits                       00000000
_RCSTA2                           00000000
_RCSTA2bits                       00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRG1                           00000000
_SPBRG2                           00000000
_SPBRGH                           00000000
_SPBRGH1                          00000000
_SPBRGH2                          00000000
_SSP1ADD                          00000000
_SSP1BUF                          00000000
_SSP1CON1                         00000000
_SSP1CON1bits                     00000000
_SSP1CON2                         00000000
_SSP1CON2bits                     00000000
_SSP1STAT                         00000000
_SSP1STATbits                     00000000
_SSP2ADD                          00000000
_SSP2BUF                          00000000
_SSP2CON1                         00000000
_SSP2CON1bits                     00000000
_SSP2CON2                         00000000
_SSP2CON2bits                     00000000
_SSP2STAT                         00000000
_SSP2STATbits                     00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_T4CON                            00000000
_T4CONbits                        00000000
_TABLAT                           00000000
_TBLPTR                           00000000
_TBLPTRH                          00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TMR4                             00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TRISF                            00000000
_TRISFbits                        00000000
_TRISG                            00000000
_TRISGbits                        00000000
_TRISH                            00000000
_TRISHbits                        00000000
_TRISJ                            00000000
_TRISJbits                        00000000
_TXREG                            00000000
_TXREG1                           00000000
_TXREG2                           00000000
_TXSTA                            00000000
_TXSTA1                           00000000
_TXSTA1bits                       00000000
_TXSTA2                           00000000
_TXSTA2bits                       00000000
_TXSTAbits                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F97J60                        00000001
__alarm                           00000000
__gptrget1                        00000000
__gptrget2                        00000000
__gptrput1                        00000000
__gptrput2                        00000000
__modsint                         00000000
__str_0                           0000007C
__str_1                           00000088
__str_2                           00000094
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  13:27:58         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
__str_3                           000000A0
__str_4                           000000AC
__str_5                           000000BE
__str_6                           000000CC
__str_7                           000000D4
__str_8                           000000DE
__str_9                           000000E8
__time                            00000000
_add_second                       00000000
_alarm_counter                    00000002
_alarm_going_off                  00000000
_alarm_led                        00000000
_but1_pressed                     00000006
_but2_pressed                     00000008
_config_mode_clock                0000000C
_config_mode_on                   0000000A
_display_config_mode              00000000
_display_line                     00000000
_display_string                   00000000
_get_input                        00000000
_highPriorityInterruptHandler     00000000
_init                             00000000
_init_config                      00000000
_init_time                        00000000
_main                             00000000
_overflow_counter                 00000004
_read_and_clear                   00000000
_sprintf                          00000000
_stdin                            00000000
_stdout                           00000000
_strlen                           00000000
_time_create                      00000000
_time_equals                      00000000
_time_print                       00000000
_time_set                         00000000
_to_double_digits                 00000000
_to_double_digits_buffer_1_1      00000000
_toggle_led                       00000000
_update_display                   00000000
ivec_0x1_highPriorityInterruptHandler  00000008
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

