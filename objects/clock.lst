gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.9.4 #5595 (Nov 14 2013) (UNIX)
               00004 ; This file was generated Sat Nov 16 12:12:37 2013
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f97j60
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _config_mode_clock
               00016         global _update_display
               00017         global _toggle_led
               00018         global _init_config
               00019         global _init_time
               00020         global _read_and_clear
               00021         global _get_input
               00022         global _display_string
               00023         global _to_double_digits
               00024         global _init
               00025         global __time
               00026         global __alarm
               00027         global _display_line
               00028         global _alarm_going_off
               00029         global _alarm_counter
               00030         global _overflow_counter
               00031         global _but1_pressed
               00032         global _but2_pressed
               00033         global _config_mode_on
               00034         global _main
               00035         global _alarm_led
               00036         global _highPriorityInterruptHandler
               00037 
               00038 ;--------------------------------------------------------
               00039 ; extern variables in this module
               00040 ;--------------------------------------------------------
               00041         extern __gptrget2
               00042         extern __gptrput2
               00043         extern __gptrget1
               00044         extern __gptrput1
               00045         extern _stdin
               00046         extern _stdout
               00047         extern _EBSTCONbits
               00048         extern _MISTATbits
               00049         extern _EFLOCONbits
               00050         extern _MACON1bits
               00051         extern _MACON2bits
               00052         extern _MACON3bits
               00053         extern _MACON4bits
               00054         extern _MACLCON1bits
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         extern _MACLCON2bits
               00056         extern _MICONbits
               00057         extern _MICMDbits
               00058         extern _EWOLIEbits
               00059         extern _EWOLIRbits
               00060         extern _ERXFCONbits
               00061         extern _EIEbits
               00062         extern _ESTATbits
               00063         extern _ECON2bits
               00064         extern _EIRbits
               00065         extern _EDATAbits
               00066         extern _SSP2CON2bits
               00067         extern _SSP2CON1bits
               00068         extern _SSP2STATbits
               00069         extern _ECCP2DELbits
               00070         extern _ECCP2ASbits
               00071         extern _ECCP3DELbits
               00072         extern _ECCP3ASbits
               00073         extern _RCSTA2bits
               00074         extern _TXSTA2bits
               00075         extern _CCP5CONbits
               00076         extern _CCP4CONbits
               00077         extern _T4CONbits
               00078         extern _ECCP1DELbits
               00079         extern _BAUDCON2bits
               00080         extern _BAUDCTL2bits
               00081         extern _BAUDCONbits
               00082         extern _BAUDCON1bits
               00083         extern _BAUDCTLbits
               00084         extern _BAUDCTL1bits
               00085         extern _PORTAbits
               00086         extern _PORTBbits
               00087         extern _PORTCbits
               00088         extern _PORTDbits
               00089         extern _PORTEbits
               00090         extern _PORTFbits
               00091         extern _PORTGbits
               00092         extern _PORTHbits
               00093         extern _PORTJbits
               00094         extern _LATAbits
               00095         extern _LATBbits
               00096         extern _LATCbits
               00097         extern _LATDbits
               00098         extern _LATEbits
               00099         extern _LATFbits
               00100         extern _LATGbits
               00101         extern _LATHbits
               00102         extern _LATJbits
               00103         extern _DDRAbits
               00104         extern _TRISAbits
               00105         extern _DDRBbits
               00106         extern _TRISBbits
               00107         extern _DDRCbits
               00108         extern _TRISCbits
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _DDRDbits
               00110         extern _TRISDbits
               00111         extern _DDREbits
               00112         extern _TRISEbits
               00113         extern _DDRFbits
               00114         extern _TRISFbits
               00115         extern _DDRGbits
               00116         extern _TRISGbits
               00117         extern _DDRHbits
               00118         extern _TRISHbits
               00119         extern _DDRJbits
               00120         extern _TRISJbits
               00121         extern _OSCTUNEbits
               00122         extern _MEMCONbits
               00123         extern _PIE1bits
               00124         extern _PIR1bits
               00125         extern _IPR1bits
               00126         extern _PIE2bits
               00127         extern _PIR2bits
               00128         extern _IPR2bits
               00129         extern _PIE3bits
               00130         extern _PIR3bits
               00131         extern _IPR3bits
               00132         extern _EECON1bits
               00133         extern _RCSTAbits
               00134         extern _RCSTA1bits
               00135         extern _TXSTAbits
               00136         extern _TXSTA1bits
               00137         extern _PSPCONbits
               00138         extern _T3CONbits
               00139         extern _CMCONbits
               00140         extern _CVRCONbits
               00141         extern _ECCP1ASbits
               00142         extern _CCP3CONbits
               00143         extern _ECCP3CONbits
               00144         extern _CCP2CONbits
               00145         extern _ECCP2CONbits
               00146         extern _CCP1CONbits
               00147         extern _ECCP1CONbits
               00148         extern _ADCON2bits
               00149         extern _ADCON1bits
               00150         extern _ADCON0bits
               00151         extern _SSP1CON2bits
               00152         extern _SSPCON2bits
               00153         extern _SSP1CON1bits
               00154         extern _SSPCON1bits
               00155         extern _SSP1STATbits
               00156         extern _SSPSTATbits
               00157         extern _T2CONbits
               00158         extern _T1CONbits
               00159         extern _RCONbits
               00160         extern _WDTCONbits
               00161         extern _ECON1bits
               00162         extern _OSCCONbits
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _T0CONbits
               00164         extern _STATUSbits
               00165         extern _INTCON3bits
               00166         extern _INTCON2bits
               00167         extern _INTCONbits
               00168         extern _STKPTRbits
               00169         extern _LCDText
               00170         extern _MAADR5
               00171         extern _MAADR6
               00172         extern _MAADR3
               00173         extern _MAADR4
               00174         extern _MAADR1
               00175         extern _MAADR2
               00176         extern _EBSTSD
               00177         extern _EBSTCON
               00178         extern _EBSTCS
               00179         extern _EBSTCSL
               00180         extern _EBSTCSH
               00181         extern _MISTAT
               00182         extern _EFLOCON
               00183         extern _EPAUS
               00184         extern _EPAUSL
               00185         extern _EPAUSH
               00186         extern _MACON1
               00187         extern _MACON2
               00188         extern _MACON3
               00189         extern _MACON4
               00190         extern _MABBIPG
               00191         extern _MAIPG
               00192         extern _MAIPGL
               00193         extern _MAIPGH
               00194         extern _MACLCON1
               00195         extern _MACLCON2
               00196         extern _MAMXFL
               00197         extern _MAMXFLL
               00198         extern _MAMXFLH
               00199         extern _MICON
               00200         extern _MICMD
               00201         extern _MIREGADR
               00202         extern _MIWR
               00203         extern _MIWRL
               00204         extern _MIWRH
               00205         extern _MIRD
               00206         extern _MIRDL
               00207         extern _MIRDH
               00208         extern _EHT0
               00209         extern _EHT1
               00210         extern _EHT2
               00211         extern _EHT3
               00212         extern _EHT4
               00213         extern _EHT5
               00214         extern _EHT6
               00215         extern _EHT7
               00216         extern _EPMM0
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _EPMM1
               00218         extern _EPMM2
               00219         extern _EPMM3
               00220         extern _EPMM4
               00221         extern _EPMM5
               00222         extern _EPMM6
               00223         extern _EPMM7
               00224         extern _EPMCS
               00225         extern _EPMCSL
               00226         extern _EPMCSH
               00227         extern _EPMO
               00228         extern _EPMOL
               00229         extern _EPMOH
               00230         extern _EWOLIE
               00231         extern _EWOLIR
               00232         extern _ERXFCON
               00233         extern _EPKTCNT
               00234         extern _EWRPT
               00235         extern _EWRPTL
               00236         extern _EWRPTH
               00237         extern _ETXST
               00238         extern _ETXSTL
               00239         extern _ETXSTH
               00240         extern _ETXND
               00241         extern _ETXNDL
               00242         extern _ETXNDH
               00243         extern _ERXST
               00244         extern _ERXSTL
               00245         extern _ERXSTH
               00246         extern _ERXND
               00247         extern _ERXNDL
               00248         extern _ERXNDH
               00249         extern _ERXRDPT
               00250         extern _ERXRDPTL
               00251         extern _ERXRDPTH
               00252         extern _ERXWRPT
               00253         extern _ERXWRPTL
               00254         extern _ERXWRPTH
               00255         extern _EDMAST
               00256         extern _EDMASTL
               00257         extern _EDMASTH
               00258         extern _EDMAND
               00259         extern _EDMANDL
               00260         extern _EDMANDH
               00261         extern _EDMADST
               00262         extern _EDMADSTL
               00263         extern _EDMADSTH
               00264         extern _EDMACS
               00265         extern _EDMACSL
               00266         extern _EDMACSH
               00267         extern _EIE
               00268         extern _ESTAT
               00269         extern _ECON2
               00270         extern _EIR
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271         extern _EDATA
               00272         extern _SSP2CON2
               00273         extern _SSP2CON1
               00274         extern _SSP2STAT
               00275         extern _SSP2ADD
               00276         extern _SSP2BUF
               00277         extern _ECCP2DEL
               00278         extern _ECCP2AS
               00279         extern _ECCP3DEL
               00280         extern _ECCP3AS
               00281         extern _RCSTA2
               00282         extern _TXSTA2
               00283         extern _TXREG2
               00284         extern _RCREG2
               00285         extern _SPBRG2
               00286         extern _CCP5CON
               00287         extern _CCPR5
               00288         extern _CCPR5L
               00289         extern _CCPR5H
               00290         extern _CCP4CON
               00291         extern _CCPR4
               00292         extern _CCPR4L
               00293         extern _CCPR4H
               00294         extern _T4CON
               00295         extern _PR4
               00296         extern _TMR4
               00297         extern _ECCP1DEL
               00298         extern _ERDPT
               00299         extern _ERDPTL
               00300         extern _ERDPTH
               00301         extern _BAUDCON2
               00302         extern _BAUDCTL2
               00303         extern _SPBRGH2
               00304         extern _BAUDCON
               00305         extern _BAUDCON1
               00306         extern _BAUDCTL
               00307         extern _BAUDCTL1
               00308         extern _SPBRGH
               00309         extern _SPBRGH1
               00310         extern _PORTA
               00311         extern _PORTB
               00312         extern _PORTC
               00313         extern _PORTD
               00314         extern _PORTE
               00315         extern _PORTF
               00316         extern _PORTG
               00317         extern _PORTH
               00318         extern _PORTJ
               00319         extern _LATA
               00320         extern _LATB
               00321         extern _LATC
               00322         extern _LATD
               00323         extern _LATE
               00324         extern _LATF
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325         extern _LATG
               00326         extern _LATH
               00327         extern _LATJ
               00328         extern _DDRA
               00329         extern _TRISA
               00330         extern _DDRB
               00331         extern _TRISB
               00332         extern _DDRC
               00333         extern _TRISC
               00334         extern _DDRD
               00335         extern _TRISD
               00336         extern _DDRE
               00337         extern _TRISE
               00338         extern _DDRF
               00339         extern _TRISF
               00340         extern _DDRG
               00341         extern _TRISG
               00342         extern _DDRH
               00343         extern _TRISH
               00344         extern _DDRJ
               00345         extern _TRISJ
               00346         extern _OSCTUNE
               00347         extern _MEMCON
               00348         extern _PIE1
               00349         extern _PIR1
               00350         extern _IPR1
               00351         extern _PIE2
               00352         extern _PIR2
               00353         extern _IPR2
               00354         extern _PIE3
               00355         extern _PIR3
               00356         extern _IPR3
               00357         extern _EECON1
               00358         extern _EECON2
               00359         extern _RCSTA
               00360         extern _RCSTA1
               00361         extern _TXSTA
               00362         extern _TXSTA1
               00363         extern _TXREG
               00364         extern _TXREG1
               00365         extern _RCREG
               00366         extern _RCREG1
               00367         extern _SPBRG
               00368         extern _SPBRG1
               00369         extern _PSPCON
               00370         extern _T3CON
               00371         extern _TMR3L
               00372         extern _TMR3H
               00373         extern _CMCON
               00374         extern _CVRCON
               00375         extern _ECCP1AS
               00376         extern _CCP3CON
               00377         extern _ECCP3CON
               00378         extern _CCPR3
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00379         extern _CCPR3L
               00380         extern _CCPR3H
               00381         extern _CCP2CON
               00382         extern _ECCP2CON
               00383         extern _CCPR2
               00384         extern _CCPR2L
               00385         extern _CCPR2H
               00386         extern _CCP1CON
               00387         extern _ECCP1CON
               00388         extern _CCPR1
               00389         extern _CCPR1L
               00390         extern _CCPR1H
               00391         extern _ADCON2
               00392         extern _ADCON1
               00393         extern _ADCON0
               00394         extern _ADRES
               00395         extern _ADRESL
               00396         extern _ADRESH
               00397         extern _SSP1CON2
               00398         extern _SSPCON2
               00399         extern _SSP1CON1
               00400         extern _SSPCON1
               00401         extern _SSP1STAT
               00402         extern _SSPSTAT
               00403         extern _SSP1ADD
               00404         extern _SSPADD
               00405         extern _SSP1BUF
               00406         extern _SSPBUF
               00407         extern _T2CON
               00408         extern _PR2
               00409         extern _TMR2
               00410         extern _T1CON
               00411         extern _TMR1L
               00412         extern _TMR1H
               00413         extern _RCON
               00414         extern _WDTCON
               00415         extern _ECON1
               00416         extern _OSCCON
               00417         extern _T0CON
               00418         extern _TMR0L
               00419         extern _TMR0H
               00420         extern _STATUS
               00421         extern _FSR2L
               00422         extern _FSR2H
               00423         extern _PLUSW2
               00424         extern _PREINC2
               00425         extern _POSTDEC2
               00426         extern _POSTINC2
               00427         extern _INDF2
               00428         extern _BSR
               00429         extern _FSR1L
               00430         extern _FSR1H
               00431         extern _PLUSW1
               00432         extern _PREINC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00433         extern _POSTDEC1
               00434         extern _POSTINC1
               00435         extern _INDF1
               00436         extern _WREG
               00437         extern _FSR0L
               00438         extern _FSR0H
               00439         extern _PLUSW0
               00440         extern _PREINC0
               00441         extern _POSTDEC0
               00442         extern _POSTINC0
               00443         extern _INDF0
               00444         extern _INTCON3
               00445         extern _INTCON2
               00446         extern _INTCON
               00447         extern _PROD
               00448         extern _PRODL
               00449         extern _PRODH
               00450         extern _TABLAT
               00451         extern _TBLPTR
               00452         extern _TBLPTRL
               00453         extern _TBLPTRH
               00454         extern _TBLPTRU
               00455         extern _PC
               00456         extern _PCL
               00457         extern _PCLATH
               00458         extern _PCLATU
               00459         extern _STKPTR
               00460         extern _TOS
               00461         extern _TOSL
               00462         extern _TOSH
               00463         extern _TOSU
               00464         extern _sprintf
               00465         extern _strlen
               00466         extern _LCDInit
               00467         extern _LCDUpdate
               00468         extern _LCDErase
               00469         extern _time_create
               00470         extern _time_set
               00471         extern _add_second
               00472         extern _time_print
               00473         extern _time_equals
               00474         extern __modsint
               00475 ;--------------------------------------------------------
               00476 ;       Equates to used internal registers
               00477 ;--------------------------------------------------------
  00000FD8     00478 STATUS  equ     0xfd8
  00000FF9     00479 PCL     equ     0xff9
  00000FFA     00480 PCLATH  equ     0xffa
  00000FFB     00481 PCLATU  equ     0xffb
  00000FE8     00482 WREG    equ     0xfe8
  00000FE0     00483 BSR     equ     0xfe0
  00000FE9     00484 FSR0L   equ     0xfe9
  00000FEA     00485 FSR0H   equ     0xfea
  00000FE1     00486 FSR1L   equ     0xfe1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
  00000FD9     00487 FSR2L   equ     0xfd9
  00000FE5     00488 POSTDEC1        equ     0xfe5
  00000FE4     00489 PREINC1 equ     0xfe4
  00000FDB     00490 PLUSW2  equ     0xfdb
  00000FF3     00491 PRODL   equ     0xff3
  00000FF4     00492 PRODH   equ     0xff4
               00493 
               00494 
               00495         idata
               00496 _alarm_going_off        db      0x00, 0x00
               00497 _alarm_counter  db      0x00, 0x00
               00498 _overflow_counter       db      0x00, 0x00
               00499 _but1_pressed   db      0x00, 0x00
               00500 _but2_pressed   db      0x00, 0x00
               00501 _config_mode_on db      0x01, 0x00
               00502 _config_mode_clock      db      0x01, 0x00
               00503 
               00504 
               00505 ; Internal registers
               00506 .registers      udata_ovr       0x0000
               00507 r0x00   res     1
               00508 r0x01   res     1
               00509 r0x02   res     1
               00510 r0x03   res     1
               00511 r0x04   res     1
               00512 r0x05   res     1
               00513 r0x06   res     1
               00514 r0x07   res     1
               00515 r0x08   res     1
               00516 r0x09   res     1
               00517 r0x0a   res     1
               00518 r0x0b   res     1
               00519 r0x0c   res     1
               00520 r0x0d   res     1
               00521 r0x0e   res     1
               00522 r0x0f   res     1
               00523 
               00524 udata_clock_0   udata
               00525 __time  res     3
               00526 
               00527 udata_clock_1   udata
               00528 __alarm res     3
               00529 
               00530 udata_clock_2   udata
               00531 _display_line   res     32
               00532 
               00533 udata_clock_3   udata
               00534 _to_double_digits_buffer_1_1    res     3
               00535 
               00536 ;--------------------------------------------------------
               00537 ; interrupt vector 
               00538 ;--------------------------------------------------------
               00539 
               00540 ;--------------------------------------------------------
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00541 ; global & static initialisations
               00542 ;--------------------------------------------------------
               00543 ; ; Starting pCode block for absolute section
               00544 ; ;-----------------------------------------
               00545 S_clock_ivec_0x1_highPriorityInterruptHandler   code    0X000008
0008 00546 ivec_0x1_highPriorityInterruptHandler:
0008 EF00 F000 00547         GOTO    _highPriorityInterruptHandler
               00548 
               00549 ; I code from now on!
               00550 ; ; Starting pCode block
               00551 S_clock__main   code
0000 00552 _main:
               00553 ;       .line   59; src/clock.c _time = time_create();
0000 EC00 F000 00554         CALL    _time_create
0004 0000      00555         BANKSEL __time
0006 6F00      00556         MOVWF   __time, B
0008 CFF3 F000 00557         MOVFF   PRODL, (__time + 1)
000C CFF4 F000 00558         MOVFF   PRODH, (__time + 2)
               00559 ;       .line   60; src/clock.c _alarm = time_create();
0010 EC00 F000 00560         CALL    _time_create
0014 0000      00561         BANKSEL __alarm
0016 6F00      00562         MOVWF   __alarm, B
0018 CFF3 F000 00563         MOVFF   PRODL, (__alarm + 1)
001C CFF4 F000 00564         MOVFF   PRODH, (__alarm + 2)
               00565 ;       .line   62; src/clock.c init();
0020 EC00 F000 00566         CALL    _init
               00567 ;       .line   63; src/clock.c init_config();
0024 EC00 F000 00568         CALL    _init_config
               00569 ;       .line   65; src/clock.c T0CONbits.TMR0ON = 1;
0028 8E00      00570         BSF     _T0CONbits, 7
               00571 ;       .line   66; src/clock.c update_display();
002A EC00 F000 00572         CALL    _update_display
               00573 ;       .line   67; src/clock.c return 0;
002E 6AF3      00574         CLRF    PRODL
0030 6AE8      00575         CLRF    WREG
0032 0012      00576         RETURN  
               00577 
               00578 ; ; Starting pCode block
               00579 S_clock__init   code
0000 00580 _init:
               00581 ;       .line   224; src/clock.c        void init(void){
0000 CFD9 FFE5 00582         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00583         MOVFF   FSR1L, FSR2L
               00584 ;       .line   226; src/clock.c        LCDInit();
0008 EC00 F000 00585         CALL    _LCDInit
               00586 ;       .line   229; src/clock.c        BUTTON0_TRIS = 1;
000C 8600      00587         BSF     _TRISBbits, 3
               00588 ;       .line   230; src/clock.c        BUTTON1_TRIS = 1;
000E 8200      00589         BSF     _TRISBbits, 1
               00590 ;       .line   233; src/clock.c        INTCONbits.GIE = 1;
0010 8E00      00591         BSF     _INTCONbits, 7
               00592 ;       .line   234; src/clock.c        INTCONbits.PEIE = 1;
0012 8C00      00593         BSF     _INTCONbits, 6
               00594 ;       .line   235; src/clock.c        RCONbits.IPEN = 1; 
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0014 8E00      00595         BSF     _RCONbits, 7
               00596 ;       .line   238; src/clock.c        T0CONbits.TMR0ON = 0;
0016 9E00      00597         BCF     _T0CONbits, 7
               00598 ;       .line   241; src/clock.c        TMR0H = 0x00000000;
0018 6A00      00599         CLRF    _TMR0H
               00600 ;       .line   242; src/clock.c        TMR0L = 0x00000000;
001A 6A00      00601         CLRF    _TMR0L
               00602 ;       .line   245; src/clock.c        T0CONbits.T08BIT = 0;
001C 9C00      00603         BCF     _T0CONbits, 6
               00604 ;       .line   248; src/clock.c        T0CONbits.T0CS = 0;
001E 9A00      00605         BCF     _T0CONbits, 5
               00606 ;       .line   251; src/clock.c        T0CONbits.PSA = 1;
0020 8600      00607         BSF     _T0CONbits, 3
               00608 ;       .line   254; src/clock.c        INTCONbits.TMR0IE = 1;
0022 8A00      00609         BSF     _INTCONbits, 5
               00610 ;       .line   257; src/clock.c        INTCON3bits.INT1IE = 1;
0024 8600      00611         BSF     _INTCON3bits, 3
               00612 ;       .line   258; src/clock.c        INTCON3bits.INT3IE = 1;
0026 8A00      00613         BSF     _INTCON3bits, 5
               00614 ;       .line   261; src/clock.c        LED0_TRIS = 0;
0028 9000      00615         BCF     _TRISJbits, 0
               00616 ;       .line   262; src/clock.c        LED1_TRIS = 0;   
002A 9200      00617         BCF     _TRISJbits, 1
               00618 ;       .line   263; src/clock.c        LED2_TRIS = 0;
002C 9400      00619         BCF     _TRISJbits, 2
               00620 ;       .line   264; src/clock.c        LED3_TRIS = 0;
002E 9A00      00621         BCF     _TRISGbits, 5
               00622 ;       .line   267; src/clock.c        LED0_IO = 0; 
0030 9000      00623         BCF     _LATJbits, 0
               00624 ;       .line   268; src/clock.c        LED1_IO = 0;
0032 9200      00625         BCF     _LATJbits, 1
               00626 ;       .line   269; src/clock.c        LED2_IO = 0;
0034 9400      00627         BCF     _LATJbits, 2
               00628 ;       .line   270; src/clock.c        LED3_IO = 1;
0036 8A00      00629         BSF     _PORTGbits, 5
0038 CFE4 FFD9 00630         MOVFF   PREINC1, FSR2L
003C 0012      00631         RETURN  
               00632 
               00633 ; ; Starting pCode block
               00634 S_clock__highPriorityInterruptHandler   code
0000 00635 _highPriorityInterruptHandler:
               00636 ;       .line   186; src/clock.c        void highPriorityInterruptHandler (void) __interrupt(1){
0000 CFE8 FFE5 00637         MOVFF   WREG, POSTDEC1
0004 CFD8 FFE5 00638         MOVFF   STATUS, POSTDEC1
0008 CFE0 FFE5 00639         MOVFF   BSR, POSTDEC1
000C CFF3 FFE5 00640         MOVFF   PRODL, POSTDEC1
0010 CFF4 FFE5 00641         MOVFF   PRODH, POSTDEC1
0014 CFE9 FFE5 00642         MOVFF   FSR0L, POSTDEC1
0018 CFEA FFE5 00643         MOVFF   FSR0H, POSTDEC1
001C CFFA FFE5 00644         MOVFF   PCLATH, POSTDEC1
0020 CFFB FFE5 00645         MOVFF   PCLATU, POSTDEC1
0024 CFD9 FFE5 00646         MOVFF   FSR2L, POSTDEC1
0028 CFE1 FFD9 00647         MOVFF   FSR1L, FSR2L
002C C000 FFE5 00648         MOVFF   r0x00, POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0030 C000 FFE5 00649         MOVFF   r0x01, POSTDEC1
               00650 ;       .line   187; src/clock.c        if(INTCON3bits.INT1F == 1){
0034 6A00      00651         CLRF    r0x00
0036 B000      00652         BTFSC   _INTCON3bits, 0
0038 2A00      00653         INCF    r0x00, F
003A 5000      00654         MOVF    r0x00, W
003C 0A01      00655         XORLW   0x01
003E E100      00656         BNZ     _00216_DS_
               00657 ;       .line   188; src/clock.c        but2_pressed = 1;       
0040 0E01      00658         MOVLW   0x01
0042 0000      00659         BANKSEL _but2_pressed
0044 6F00      00660         MOVWF   _but2_pressed, B
0046 0000      00661         BANKSEL (_but2_pressed + 1)
0048 6B00      00662         CLRF    (_but2_pressed + 1), B
               00663 ; ;;!!! pic16_aopOp:1071 called for a spillLocation -- assigning WREG instead --- CHECK
               00664 ;       .line   189; src/clock.c        if(BUTTON0_IO);
004A 6AE8      00665         CLRF    WREG
004C B600      00666         BTFSC   _PORTBbits, 3
004E 2AE8      00667         INCF    WREG, F
               00668 ;       .line   190; src/clock.c        INTCON3bits.INT1F = 0; 
0050 9000      00669         BCF     _INTCON3bits, 0
0052 00670 _00216_DS_:
               00671 ;       .line   193; src/clock.c        if(INTCON3bits.INT3F  == 1){
0052 6A00      00672         CLRF    r0x00
0054 B400      00673         BTFSC   _INTCON3bits, 2
0056 2A00      00674         INCF    r0x00, F
0058 5000      00675         MOVF    r0x00, W
005A 0A01      00676         XORLW   0x01
005C E100      00677         BNZ     _00218_DS_
               00678 ;       .line   194; src/clock.c        but1_pressed = 1;       
005E 0E01      00679         MOVLW   0x01
0060 0000      00680         BANKSEL _but1_pressed
0062 6F00      00681         MOVWF   _but1_pressed, B
0064 0000      00682         BANKSEL (_but1_pressed + 1)
0066 6B00      00683         CLRF    (_but1_pressed + 1), B
               00684 ; ;;!!! pic16_aopOp:1071 called for a spillLocation -- assigning WREG instead --- CHECK
               00685 ;       .line   195; src/clock.c        if(BUTTON1_IO);
0068 6AE8      00686         CLRF    WREG
006A B200      00687         BTFSC   _PORTBbits, 1
006C 2AE8      00688         INCF    WREG, F
               00689 ;       .line   196; src/clock.c        INTCON3bits.INT3F = 0; 
006E 9400      00690         BCF     _INTCON3bits, 2
0070 00691 _00218_DS_:
               00692 ;       .line   198; src/clock.c        if(INTCONbits.TMR0IF == 1) {
0070 6A00      00693         CLRF    r0x00
0072 B400      00694         BTFSC   _INTCONbits, 2
0074 2A00      00695         INCF    r0x00, F
0076 5000      00696         MOVF    r0x00, W
0078 0A01      00697         XORLW   0x01
007A E000      00698         BZ      _00247_DS_
007C D000      00699         BRA     _00232_DS_
007E 00700 _00247_DS_:
007E 0000      00701         BANKSEL _overflow_counter
               00702 ;       .line   199; src/clock.c        overflow_counter++;
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0080 2B00      00703         INCF    _overflow_counter, F, B
0082 E300      00704         BNC     _10258_DS_
0084 0000      00705         BANKSEL (_overflow_counter + 1)
0086 2B00      00706         INCF    (_overflow_counter + 1), F, B
0088 00707 _10258_DS_:
0088 0000      00708         BANKSEL _overflow_counter
               00709 ;       .line   200; src/clock.c        if(overflow_counter == CYCLES/2){
008A 5100      00710         MOVF    _overflow_counter, W, B
008C 0A2E      00711         XORLW   0x2e
008E E100      00712         BNZ     _00248_DS_
0090 0000      00713         BANKSEL (_overflow_counter + 1)
0092 5100      00714         MOVF    (_overflow_counter + 1), W, B
0094 E000      00715         BZ      _00249_DS_
0096 00716 _00248_DS_:
0096 D000      00717         BRA     _00228_DS_
0098 00718 _00249_DS_:
               00719 ;       .line   201; src/clock.c        toggle_led();
0098 EC00 F000 00720         CALL    _toggle_led
009C D000      00721         BRA     _00229_DS_
009E 00722 _00228_DS_:
009E 0000      00723         BANKSEL _overflow_counter
               00724 ;       .line   202; src/clock.c        }else if(overflow_counter == CYCLES){
00A0 5100      00725         MOVF    _overflow_counter, W, B
00A2 0A5D      00726         XORLW   0x5d
00A4 E100      00727         BNZ     _00250_DS_
00A6 0000      00728         BANKSEL (_overflow_counter + 1)
00A8 5100      00729         MOVF    (_overflow_counter + 1), W, B
00AA E000      00730         BZ      _00251_DS_
00AC 00731 _00250_DS_:
00AC D000      00732         BRA     _00229_DS_
00AE 00733 _00251_DS_:
00AE 0000      00734         BANKSEL (__time + 2)
               00735 ;       .line   203; src/clock.c        if(time_equals(_alarm,_time)){
00B0 5100      00736         MOVF    (__time + 2), W, B
00B2 6EE5      00737         MOVWF   POSTDEC1
00B4 0000      00738         BANKSEL (__time + 1)
00B6 5100      00739         MOVF    (__time + 1), W, B
00B8 6EE5      00740         MOVWF   POSTDEC1
00BA 0000      00741         BANKSEL __time
00BC 5100      00742         MOVF    __time, W, B
00BE 6EE5      00743         MOVWF   POSTDEC1
00C0 0000      00744         BANKSEL (__alarm + 2)
00C2 5100      00745         MOVF    (__alarm + 2), W, B
00C4 6EE5      00746         MOVWF   POSTDEC1
00C6 0000      00747         BANKSEL (__alarm + 1)
00C8 5100      00748         MOVF    (__alarm + 1), W, B
00CA 6EE5      00749         MOVWF   POSTDEC1
00CC 0000      00750         BANKSEL __alarm
00CE 5100      00751         MOVF    __alarm, W, B
00D0 6EE5      00752         MOVWF   POSTDEC1
00D2 EC00 F000 00753         CALL    _time_equals
00D6 6E00      00754         MOVWF   r0x00
00D8 CFF3 F000 00755         MOVFF   PRODL, r0x01
00DC 0E06      00756         MOVLW   0x06
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00DE 26E1      00757         ADDWF   FSR1L, F
00E0 5000      00758         MOVF    r0x00, W
00E2 1000      00759         IORWF   r0x01, W
00E4 E000      00760         BZ      _00220_DS_
               00761 ;       .line   204; src/clock.c        alarm_going_off = 1;
00E6 0E01      00762         MOVLW   0x01
00E8 0000      00763         BANKSEL _alarm_going_off
00EA 6F00      00764         MOVWF   _alarm_going_off, B
00EC 0000      00765         BANKSEL (_alarm_going_off + 1)
00EE 6B00      00766         CLRF    (_alarm_going_off + 1), B
00F0 00767 _00220_DS_:
00F0 0000      00768         BANKSEL _alarm_going_off
               00769 ;       .line   206; src/clock.c        if(alarm_going_off){
00F2 5100      00770         MOVF    _alarm_going_off, W, B
00F4 0000      00771         BANKSEL (_alarm_going_off + 1)
00F6 1100      00772         IORWF   (_alarm_going_off + 1), W, B
00F8 E000      00773         BZ      _00224_DS_
00FA 0000      00774         BANKSEL _alarm_counter
               00775 ;       .line   207; src/clock.c        alarm_counter++;
00FC 2B00      00776         INCF    _alarm_counter, F, B
00FE E300      00777         BNC     _20259_DS_
0100 0000      00778         BANKSEL (_alarm_counter + 1)
0102 2B00      00779         INCF    (_alarm_counter + 1), F, B
0104 00780 _20259_DS_:
               00781 ;       .line   208; src/clock.c        alarm_led();
0104 EC00 F000 00782         CALL    _alarm_led
0108 0000      00783         BANKSEL _alarm_counter
               00784 ;       .line   209; src/clock.c        if(alarm_counter==30){
010A 5100      00785         MOVF    _alarm_counter, W, B
010C 0A1E      00786         XORLW   0x1e
010E E100      00787         BNZ     _00252_DS_
0110 0000      00788         BANKSEL (_alarm_counter + 1)
0112 5100      00789         MOVF    (_alarm_counter + 1), W, B
0114 E000      00790         BZ      _00253_DS_
0116 00791 _00252_DS_:
0116 D000      00792         BRA     _00224_DS_
0118 00793 _00253_DS_:
0118 0000      00794         BANKSEL _alarm_going_off
               00795 ;       .line   210; src/clock.c        alarm_going_off =0;
011A 6B00      00796         CLRF    _alarm_going_off, B
011C 0000      00797         BANKSEL (_alarm_going_off + 1)
011E 6B00      00798         CLRF    (_alarm_going_off + 1), B
0120 0000      00799         BANKSEL _alarm_counter
               00800 ;       .line   211; src/clock.c        alarm_counter = 0;
0122 6B00      00801         CLRF    _alarm_counter, B
0124 0000      00802         BANKSEL (_alarm_counter + 1)
0126 6B00      00803         CLRF    (_alarm_counter + 1), B
0128 00804 _00224_DS_:
0128 0000      00805         BANKSEL _overflow_counter
               00806 ;       .line   214; src/clock.c        overflow_counter = 0;
012A 6B00      00807         CLRF    _overflow_counter, B
012C 0000      00808         BANKSEL (_overflow_counter + 1)
012E 6B00      00809         CLRF    (_overflow_counter + 1), B
               00810 ;       .line   215; src/clock.c        toggle_led();
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0130 EC00 F000 00811         CALL    _toggle_led
0134 0000      00812         BANKSEL (__time + 2)
               00813 ;       .line   216; src/clock.c        add_second(_time);
0136 5100      00814         MOVF    (__time + 2), W, B
0138 6EE5      00815         MOVWF   POSTDEC1
013A 0000      00816         BANKSEL (__time + 1)
013C 5100      00817         MOVF    (__time + 1), W, B
013E 6EE5      00818         MOVWF   POSTDEC1
0140 0000      00819         BANKSEL __time
0142 5100      00820         MOVF    __time, W, B
0144 6EE5      00821         MOVWF   POSTDEC1
0146 EC00 F000 00822         CALL    _add_second
014A 0E03      00823         MOVLW   0x03
014C 26E1      00824         ADDWF   FSR1L, F
               00825 ;       .line   217; src/clock.c        update_display();
014E EC00 F000 00826         CALL    _update_display
0152 00827 _00229_DS_:
               00828 ;       .line   219; src/clock.c        INTCONbits.TMR0IF = 0;
0152 9400      00829         BCF     _INTCONbits, 2
0154 00830 _00232_DS_:
0154 CFE4 F000 00831         MOVFF   PREINC1, r0x01
0158 CFE4 F000 00832         MOVFF   PREINC1, r0x00
015C CFE4 FFD9 00833         MOVFF   PREINC1, FSR2L
0160 CFE4 FFFB 00834         MOVFF   PREINC1, PCLATU
0164 CFE4 FFFA 00835         MOVFF   PREINC1, PCLATH
0168 CFE4 FFEA 00836         MOVFF   PREINC1, FSR0H
016C CFE4 FFE9 00837         MOVFF   PREINC1, FSR0L
0170 CFE4 FFF4 00838         MOVFF   PREINC1, PRODH
0174 CFE4 FFF3 00839         MOVFF   PREINC1, PRODL
0178 CFE4 FFE0 00840         MOVFF   PREINC1, BSR
017C CFE4 FFD8 00841         MOVFF   PREINC1, STATUS
0180 CFE4 FFE8 00842         MOVFF   PREINC1, WREG
0184 0010      00843         RETFIE  
               00844 
               00845 ; ; Starting pCode block
               00846 S_clock__to_double_digits       code
0000 00847 _to_double_digits:
               00848 ;       .line   180; src/clock.c        char* to_double_digits(int value){
0000 CFD9 FFE5 00849         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00850         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00851         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00852         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00853         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00854         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00855         MOVFF   r0x04, POSTDEC1
001C 0E02      00856         MOVLW   0x02
001E CFDB F000 00857         MOVFF   PLUSW2, r0x00
0022 0E03      00858         MOVLW   0x03
0024 CFDB F000 00859         MOVFF   PLUSW2, r0x01
               00860 ;       .line   182; src/clock.c        sprintf(buffer, "%02d", value);
0028 0E00      00861         MOVLW   HIGH(_to_double_digits_buffer_1_1)
002A 6E00      00862         MOVWF   r0x03
002C 0E00      00863         MOVLW   LOW(_to_double_digits_buffer_1_1)
002E 6E00      00864         MOVWF   r0x02
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0030 0E80      00865         MOVLW   0x80
0032 6E00      00866         MOVWF   r0x04
0034 5000      00867         MOVF    r0x01, W
0036 6EE5      00868         MOVWF   POSTDEC1
0038 5000      00869         MOVF    r0x00, W
003A 6EE5      00870         MOVWF   POSTDEC1
003C 0E00      00871         MOVLW   UPPER(__str_9)
003E 6EE5      00872         MOVWF   POSTDEC1
0040 0E00      00873         MOVLW   HIGH(__str_9)
0042 6EE5      00874         MOVWF   POSTDEC1
0044 0E00      00875         MOVLW   LOW(__str_9)
0046 6EE5      00876         MOVWF   POSTDEC1
0048 5000      00877         MOVF    r0x04, W
004A 6EE5      00878         MOVWF   POSTDEC1
004C 5000      00879         MOVF    r0x03, W
004E 6EE5      00880         MOVWF   POSTDEC1
0050 5000      00881         MOVF    r0x02, W
0052 6EE5      00882         MOVWF   POSTDEC1
0054 EC00 F000 00883         CALL    _sprintf
0058 0E08      00884         MOVLW   0x08
005A 26E1      00885         ADDWF   FSR1L, F
               00886 ;       .line   183; src/clock.c        return buffer;
005C 0E00      00887         MOVLW   HIGH(_to_double_digits_buffer_1_1)
005E 6E00      00888         MOVWF   r0x01
0060 0E00      00889         MOVLW   LOW(_to_double_digits_buffer_1_1)
0062 6E00      00890         MOVWF   r0x00
0064 0E80      00891         MOVLW   0x80
0066 6E00      00892         MOVWF   r0x02
0068 C000 FFF4 00893         MOVFF   r0x02, PRODH
006C C000 FFF3 00894         MOVFF   r0x01, PRODL
0070 5000      00895         MOVF    r0x00, W
0072 CFE4 F000 00896         MOVFF   PREINC1, r0x04
0076 CFE4 F000 00897         MOVFF   PREINC1, r0x03
007A CFE4 F000 00898         MOVFF   PREINC1, r0x02
007E CFE4 F000 00899         MOVFF   PREINC1, r0x01
0082 CFE4 F000 00900         MOVFF   PREINC1, r0x00
0086 CFE4 FFD9 00901         MOVFF   PREINC1, FSR2L
008A 0012      00902         RETURN  
               00903 
               00904 ; ; Starting pCode block
               00905 S_clock__display_string code
0000 00906 _display_string:
               00907 ;       .line   169; src/clock.c        void display_string(BYTE pos, char* text){
0000 CFD9 FFE5 00908         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00909         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00910         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00911         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00912         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00913         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00914         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00915         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00916         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00917         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00918         MOVFF   r0x08, POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
002C C000 FFE5 00919         MOVFF   r0x09, POSTDEC1
0030 0E02      00920         MOVLW   0x02
0032 CFDB F000 00921         MOVFF   PLUSW2, r0x00
0036 0E03      00922         MOVLW   0x03
0038 CFDB F000 00923         MOVFF   PLUSW2, r0x01
003C 0E04      00924         MOVLW   0x04
003E CFDB F000 00925         MOVFF   PLUSW2, r0x02
0042 0E05      00926         MOVLW   0x05
0044 CFDB F000 00927         MOVFF   PLUSW2, r0x03
               00928 ;       .line   170; src/clock.c        BYTE        l = strlen(text);
0048 5000      00929         MOVF    r0x03, W
004A 6EE5      00930         MOVWF   POSTDEC1
004C 5000      00931         MOVF    r0x02, W
004E 6EE5      00932         MOVWF   POSTDEC1
0050 5000      00933         MOVF    r0x01, W
0052 6EE5      00934         MOVWF   POSTDEC1
0054 EC00 F000 00935         CALL    _strlen
0058 6E00      00936         MOVWF   r0x04
005A CFF3 F000 00937         MOVFF   PRODL, r0x05
005E 0E03      00938         MOVLW   0x03
0060 26E1      00939         ADDWF   FSR1L, F
               00940 ;       .line   171; src/clock.c        BYTE      max = 32-pos;    
0062 5000      00941         MOVF    r0x00, W
0064 0820      00942         SUBLW   0x20
0066 6E00      00943         MOVWF   r0x05
               00944 ;       .line   172; src/clock.c        char       *d = (char*)&LCDText[pos];
0068 6A00      00945         CLRF    r0x06
006A 0E00      00946         MOVLW   LOW(_LCDText)
006C 2600      00947         ADDWF   r0x00, F
006E 0E00      00948         MOVLW   HIGH(_LCDText)
0070 2200      00949         ADDWFC  r0x06, F
0072 5000      00950         MOVF    r0x06, W
0074 6E00      00951         MOVWF   r0x06
0076 5000      00952         MOVF    r0x00, W
0078 6E00      00953         MOVWF   r0x00
007A 0E80      00954         MOVLW   0x80
007C 6E00      00955         MOVWF   r0x07
               00956 ;       .line   174; src/clock.c        size_t      n = (l<max)?l:max;
007E 5000      00957         MOVF    r0x05, W
0080 5C00      00958         SUBWF   r0x04, W
0082 E300      00959         BNC     _00200_DS_
0084 C000 F000 00960         MOVFF   r0x05, r0x04
0088 00961 _00200_DS_:
0088 6A00      00962         CLRF    r0x05
               00963 ;       .line   175; src/clock.c        if (n != 0)
008A 5000      00964         MOVF    r0x04, W
008C 1000      00965         IORWF   r0x05, W
008E E000      00966         BZ      _00196_DS_
0090 00967 _00192_DS_:
               00968 ;       .line   176; src/clock.c        while (n-- != 0)*d++ = *s++;
0090 C000 F000 00969         MOVFF   r0x04, r0x08
0094 C000 F000 00970         MOVFF   r0x05, r0x09
0098 0EFF      00971         MOVLW   0xff
009A 2600      00972         ADDWF   r0x04, F
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009C A0D8      00973         BTFSS   STATUS, 0
009E 0600      00974         DECF    r0x05, F
00A0 5000      00975         MOVF    r0x08, W
00A2 1000      00976         IORWF   r0x09, W
00A4 E000      00977         BZ      _00196_DS_
00A6 C000 FFE9 00978         MOVFF   r0x01, FSR0L
00AA C000 FFF3 00979         MOVFF   r0x02, PRODL
00AE 5000      00980         MOVF    r0x03, W
00B0 EC00 F000 00981         CALL    __gptrget1
00B4 6E00      00982         MOVWF   r0x08
00B6 2A00      00983         INCF    r0x01, F
00B8 B0D8      00984         BTFSC   STATUS, 0
00BA 2A00      00985         INCF    r0x02, F
00BC B0D8      00986         BTFSC   STATUS, 0
00BE 2A00      00987         INCF    r0x03, F
00C0 C000 FFE5 00988         MOVFF   r0x08, POSTDEC1
00C4 C000 FFE9 00989         MOVFF   r0x00, FSR0L
00C8 C000 FFF3 00990         MOVFF   r0x06, PRODL
00CC 5000      00991         MOVF    r0x07, W
00CE EC00 F000 00992         CALL    __gptrput1
00D2 2A00      00993         INCF    r0x00, F
00D4 B0D8      00994         BTFSC   STATUS, 0
00D6 2A00      00995         INCF    r0x06, F
00D8 B0D8      00996         BTFSC   STATUS, 0
00DA 2A00      00997         INCF    r0x07, F
00DC D000      00998         BRA     _00192_DS_
00DE 00999 _00196_DS_:
               01000 ;       .line   177; src/clock.c        LCDUpdate();
00DE EC00 F000 01001         CALL    _LCDUpdate
00E2 CFE4 F000 01002         MOVFF   PREINC1, r0x09
00E6 CFE4 F000 01003         MOVFF   PREINC1, r0x08
00EA CFE4 F000 01004         MOVFF   PREINC1, r0x07
00EE CFE4 F000 01005         MOVFF   PREINC1, r0x06
00F2 CFE4 F000 01006         MOVFF   PREINC1, r0x05
00F6 CFE4 F000 01007         MOVFF   PREINC1, r0x04
00FA CFE4 F000 01008         MOVFF   PREINC1, r0x03
00FE CFE4 F000 01009         MOVFF   PREINC1, r0x02
0102 CFE4 F000 01010         MOVFF   PREINC1, r0x01
0106 CFE4 F000 01011         MOVFF   PREINC1, r0x00
010A CFE4 FFD9 01012         MOVFF   PREINC1, FSR2L
010E 0012      01013         RETURN  
               01014 
               01015 ; ; Starting pCode block
               01016 S_clock__get_input      code
0000 01017 _get_input:
               01018 ;       .line   145; src/clock.c        int get_input(int maxvalue, char *text, char *mode){
0000 CFD9 FFE5 01019         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01020         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01021         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01022         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01023         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01024         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01025         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01026         MOVFF   r0x05, POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0020 C000 FFE5 01027         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01028         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01029         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01030         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 01031         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 01032         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 01033         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 01034         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 01035         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 01036         MOVFF   r0x0f, POSTDEC1
0048 0E02      01037         MOVLW   0x02
004A CFDB F000 01038         MOVFF   PLUSW2, r0x00
004E 0E03      01039         MOVLW   0x03
0050 CFDB F000 01040         MOVFF   PLUSW2, r0x01
0054 0E04      01041         MOVLW   0x04
0056 CFDB F000 01042         MOVFF   PLUSW2, r0x02
005A 0E05      01043         MOVLW   0x05
005C CFDB F000 01044         MOVFF   PLUSW2, r0x03
0060 0E06      01045         MOVLW   0x06
0062 CFDB F000 01046         MOVFF   PLUSW2, r0x04
0066 0E07      01047         MOVLW   0x07
0068 CFDB F000 01048         MOVFF   PLUSW2, r0x05
006C 0E08      01049         MOVLW   0x08
006E CFDB F000 01050         MOVFF   PLUSW2, r0x06
0072 0E09      01051         MOVLW   0x09
0074 CFDB F000 01052         MOVFF   PLUSW2, r0x07
               01053 ;       .line   146; src/clock.c        BYTE length = strlen(text);
0078 5000      01054         MOVF    r0x04, W
007A 6EE5      01055         MOVWF   POSTDEC1
007C 5000      01056         MOVF    r0x03, W
007E 6EE5      01057         MOVWF   POSTDEC1
0080 5000      01058         MOVF    r0x02, W
0082 6EE5      01059         MOVWF   POSTDEC1
0084 EC00 F000 01060         CALL    _strlen
0088 6E00      01061         MOVWF   r0x08
008A CFF3 F000 01062         MOVFF   PRODL, r0x09
008E 0E03      01063         MOVLW   0x03
0090 26E1      01064         ADDWF   FSR1L, F
               01065 ;       .line   147; src/clock.c        int value = 0;
0092 6A00      01066         CLRF    r0x09
0094 6A00      01067         CLRF    r0x0a
               01068 ;       .line   148; src/clock.c        display_string(0, text);
0096 5000      01069         MOVF    r0x04, W
0098 6EE5      01070         MOVWF   POSTDEC1
009A 5000      01071         MOVF    r0x03, W
009C 6EE5      01072         MOVWF   POSTDEC1
009E 5000      01073         MOVF    r0x02, W
00A0 6EE5      01074         MOVWF   POSTDEC1
00A2 0E00      01075         MOVLW   0x00
00A4 6EE5      01076         MOVWF   POSTDEC1
00A6 EC00 F000 01077         CALL    _display_string
00AA 0E04      01078         MOVLW   0x04
00AC 26E1      01079         ADDWF   FSR1L, F
               01080 ;       .line   149; src/clock.c        while(1)
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AE 0E12      01081         MOVLW   0x12
00B0 2400      01082         ADDWF   r0x08, W
00B2 6E00      01083         MOVWF   r0x02
00B4 01084 _00185_DS_:
00B4 0000      01085         BANKSEL _config_mode_on
               01086 ;       .line   152; src/clock.c        if(config_mode_on){
00B6 5100      01087         MOVF    _config_mode_on, W, B
00B8 0000      01088         BANKSEL (_config_mode_on + 1)
00BA 1100      01089         IORWF   (_config_mode_on + 1), W, B
00BC E000      01090         BZ      _00185_DS_
               01091 ;       .line   153; src/clock.c        DelayMs(10);
00BE 0E68      01092         MOVLW   0x68
00C0 6E00      01093         MOVWF   r0x03
00C2 0E42      01094         MOVLW   0x42
00C4 6E00      01095         MOVWF   r0x04
00C6 6A00      01096         CLRF    r0x08
00C8 6A00      01097         CLRF    r0x0b
00CA 01098 _00172_DS_:
00CA C000 F000 01099         MOVFF   r0x03, r0x0c
00CE C000 F000 01100         MOVFF   r0x04, r0x0d
00D2 C000 F000 01101         MOVFF   r0x08, r0x0e
00D6 C000 F000 01102         MOVFF   r0x0b, r0x0f
00DA 0EFF      01103         MOVLW   0xff
00DC 2600      01104         ADDWF   r0x03, F
00DE 0EFF      01105         MOVLW   0xff
00E0 2200      01106         ADDWFC  r0x04, F
00E2 0EFF      01107         MOVLW   0xff
00E4 2200      01108         ADDWFC  r0x08, F
00E6 0EFF      01109         MOVLW   0xff
00E8 2200      01110         ADDWFC  r0x0b, F
00EA 5000      01111         MOVF    r0x0c, W
00EC 1000      01112         IORWF   r0x0d, W
00EE 1000      01113         IORWF   r0x0e, W
00F0 1000      01114         IORWF   r0x0f, W
00F2 E100      01115         BNZ     _00172_DS_
               01116 ;       .line   154; src/clock.c        if(read_and_clear(&but2_pressed)){
00F4 0E00      01117         MOVLW   HIGH(_but2_pressed)
00F6 6E00      01118         MOVWF   r0x04
00F8 0E00      01119         MOVLW   LOW(_but2_pressed)
00FA 6E00      01120         MOVWF   r0x03
00FC 0E80      01121         MOVLW   0x80
00FE 6E00      01122         MOVWF   r0x08
0100 5000      01123         MOVF    r0x08, W
0102 6EE5      01124         MOVWF   POSTDEC1
0104 5000      01125         MOVF    r0x04, W
0106 6EE5      01126         MOVWF   POSTDEC1
0108 5000      01127         MOVF    r0x03, W
010A 6EE5      01128         MOVWF   POSTDEC1
010C EC00 F000 01129         CALL    _read_and_clear
0110 6E00      01130         MOVWF   r0x03
0112 CFF3 F000 01131         MOVFF   PRODL, r0x04
0116 0E03      01132         MOVLW   0x03
0118 26E1      01133         ADDWF   FSR1L, F
011A 5000      01134         MOVF    r0x03, W
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
011C 1000      01135         IORWF   r0x04, W
011E E000      01136         BZ      _00179_DS_
               01137 ;       .line   155; src/clock.c        LCDErase();
0120 EC00 F000 01138         CALL    _LCDErase
               01139 ;       .line   156; src/clock.c        return value;
0124 C000 FFF3 01140         MOVFF   r0x0a, PRODL
0128 5000      01141         MOVF    r0x09, W
012A D000      01142         BRA     _00187_DS_
012C 01143 _00179_DS_:
               01144 ;       .line   158; src/clock.c        if(read_and_clear(&but1_pressed)){ 
012C 0E00      01145         MOVLW   HIGH(_but1_pressed)
012E 6E00      01146         MOVWF   r0x04
0130 0E00      01147         MOVLW   LOW(_but1_pressed)
0132 6E00      01148         MOVWF   r0x03
0134 0E80      01149         MOVLW   0x80
0136 6E00      01150         MOVWF   r0x08
0138 5000      01151         MOVF    r0x08, W
013A 6EE5      01152         MOVWF   POSTDEC1
013C 5000      01153         MOVF    r0x04, W
013E 6EE5      01154         MOVWF   POSTDEC1
0140 5000      01155         MOVF    r0x03, W
0142 6EE5      01156         MOVWF   POSTDEC1
0144 EC00 F000 01157         CALL    _read_and_clear
0148 6E00      01158         MOVWF   r0x03
014A CFF3 F000 01159         MOVFF   PRODL, r0x04
014E 0E03      01160         MOVLW   0x03
0150 26E1      01161         ADDWF   FSR1L, F
0152 5000      01162         MOVF    r0x03, W
0154 1000      01163         IORWF   r0x04, W
0156 E000      01164         BZ      _00181_DS_
               01165 ;       .line   159; src/clock.c        value = (++value)%maxvalue;
0158 2A00      01166         INCF    r0x09, F
015A B0D8      01167         BTFSC   STATUS, 0
015C 2A00      01168         INCF    r0x0a, F
015E 5000      01169         MOVF    r0x01, W
0160 6EE5      01170         MOVWF   POSTDEC1
0162 5000      01171         MOVF    r0x00, W
0164 6EE5      01172         MOVWF   POSTDEC1
0166 5000      01173         MOVF    r0x0a, W
0168 6EE5      01174         MOVWF   POSTDEC1
016A 5000      01175         MOVF    r0x09, W
016C 6EE5      01176         MOVWF   POSTDEC1
016E EC00 F000 01177         CALL    __modsint
0172 6E00      01178         MOVWF   r0x09
0174 CFF3 F000 01179         MOVFF   PRODL, r0x0a
0178 0E04      01180         MOVLW   0x04
017A 26E1      01181         ADDWF   FSR1L, F
017C 01182 _00181_DS_:
               01183 ;       .line   161; src/clock.c        display_string(START_FIRST_LINE , mode);
017C 5000      01184         MOVF    r0x07, W
017E 6EE5      01185         MOVWF   POSTDEC1
0180 5000      01186         MOVF    r0x06, W
0182 6EE5      01187         MOVWF   POSTDEC1
0184 5000      01188         MOVF    r0x05, W
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0186 6EE5      01189         MOVWF   POSTDEC1
0188 0E00      01190         MOVLW   0x00
018A 6EE5      01191         MOVWF   POSTDEC1
018C EC00 F000 01192         CALL    _display_string
0190 0E04      01193         MOVLW   0x04
0192 26E1      01194         ADDWF   FSR1L, F
               01195 ;       .line   162; src/clock.c        display_string(START_SECOND_LINE + length + 1, to_double_digits(value));
0194 5000      01196         MOVF    r0x0a, W
0196 6EE5      01197         MOVWF   POSTDEC1
0198 5000      01198         MOVF    r0x09, W
019A 6EE5      01199         MOVWF   POSTDEC1
019C EC00 F000 01200         CALL    _to_double_digits
01A0 6E00      01201         MOVWF   r0x03
01A2 CFF3 F000 01202         MOVFF   PRODL, r0x04
01A6 CFF4 F000 01203         MOVFF   PRODH, r0x08
01AA 0E02      01204         MOVLW   0x02
01AC 26E1      01205         ADDWF   FSR1L, F
01AE 5000      01206         MOVF    r0x08, W
01B0 6EE5      01207         MOVWF   POSTDEC1
01B2 5000      01208         MOVF    r0x04, W
01B4 6EE5      01209         MOVWF   POSTDEC1
01B6 5000      01210         MOVF    r0x03, W
01B8 6EE5      01211         MOVWF   POSTDEC1
01BA 5000      01212         MOVF    r0x02, W
01BC 6EE5      01213         MOVWF   POSTDEC1
01BE EC00 F000 01214         CALL    _display_string
01C2 0E04      01215         MOVLW   0x04
01C4 26E1      01216         ADDWF   FSR1L, F
01C6 D000      01217         BRA     _00185_DS_
01C8 01218 _00187_DS_:
01C8 CFE4 F000 01219         MOVFF   PREINC1, r0x0f
01CC CFE4 F000 01220         MOVFF   PREINC1, r0x0e
01D0 CFE4 F000 01221         MOVFF   PREINC1, r0x0d
01D4 CFE4 F000 01222         MOVFF   PREINC1, r0x0c
01D8 CFE4 F000 01223         MOVFF   PREINC1, r0x0b
01DC CFE4 F000 01224         MOVFF   PREINC1, r0x0a
01E0 CFE4 F000 01225         MOVFF   PREINC1, r0x09
01E4 CFE4 F000 01226         MOVFF   PREINC1, r0x08
01E8 CFE4 F000 01227         MOVFF   PREINC1, r0x07
01EC CFE4 F000 01228         MOVFF   PREINC1, r0x06
01F0 CFE4 F000 01229         MOVFF   PREINC1, r0x05
01F4 CFE4 F000 01230         MOVFF   PREINC1, r0x04
01F8 CFE4 F000 01231         MOVFF   PREINC1, r0x03
01FC CFE4 F000 01232         MOVFF   PREINC1, r0x02
0200 CFE4 F000 01233         MOVFF   PREINC1, r0x01
0204 CFE4 F000 01234         MOVFF   PREINC1, r0x00
0208 CFE4 FFD9 01235         MOVFF   PREINC1, FSR2L
020C 0012      01236         RETURN  
               01237 
               01238 ; ; Starting pCode block
               01239 S_clock__read_and_clear code
0000 01240 _read_and_clear:
               01241 ;       .line   138; src/clock.c        int read_and_clear(int *variable){
0000 CFD9 FFE5 01242         MOVFF   FSR2L, POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0004 CFE1 FFD9 01243         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01244         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01245         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01246         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01247         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01248         MOVFF   r0x04, POSTDEC1
001C 0E02      01249         MOVLW   0x02
001E CFDB F000 01250         MOVFF   PLUSW2, r0x00
0022 0E03      01251         MOVLW   0x03
0024 CFDB F000 01252         MOVFF   PLUSW2, r0x01
0028 0E04      01253         MOVLW   0x04
002A CFDB F000 01254         MOVFF   PLUSW2, r0x02
               01255 ;       .line   139; src/clock.c        if(*variable){
002E C000 FFE9 01256         MOVFF   r0x00, FSR0L
0032 C000 FFF3 01257         MOVFF   r0x01, PRODL
0036 5000      01258         MOVF    r0x02, W
0038 EC00 F000 01259         CALL    __gptrget2
003C 6E00      01260         MOVWF   r0x03
003E CFF3 F000 01261         MOVFF   PRODL, r0x04
0042 5000      01262         MOVF    r0x03, W
0044 1000      01263         IORWF   r0x04, W
0046 E000      01264         BZ      _00166_DS_
               01265 ;       .line   140; src/clock.c        *variable = 0;
0048 0E00      01266         MOVLW   0x00
004A 6EE5      01267         MOVWF   POSTDEC1
004C 0E00      01268         MOVLW   0x00
004E 6EF4      01269         MOVWF   PRODH
0050 C000 FFE9 01270         MOVFF   r0x00, FSR0L
0054 C000 FFF3 01271         MOVFF   r0x01, PRODL
0058 5000      01272         MOVF    r0x02, W
005A EC00 F000 01273         CALL    __gptrput2
               01274 ;       .line   141; src/clock.c        return 1;
005E 6AF3      01275         CLRF    PRODL
0060 0E01      01276         MOVLW   0x01
0062 D000      01277         BRA     _00167_DS_
0064 01278 _00166_DS_:
               01279 ;       .line   143; src/clock.c        return 0;
0064 6AF3      01280         CLRF    PRODL
0066 6AE8      01281         CLRF    WREG
0068 01282 _00167_DS_:
0068 CFE4 F000 01283         MOVFF   PREINC1, r0x04
006C CFE4 F000 01284         MOVFF   PREINC1, r0x03
0070 CFE4 F000 01285         MOVFF   PREINC1, r0x02
0074 CFE4 F000 01286         MOVFF   PREINC1, r0x01
0078 CFE4 F000 01287         MOVFF   PREINC1, r0x00
007C CFE4 FFD9 01288         MOVFF   PREINC1, FSR2L
0080 0012      01289         RETURN  
               01290 
               01291 ; ; Starting pCode block
               01292 S_clock__init_time      code
0000 01293 _init_time:
               01294 ;       .line   130; src/clock.c        void init_time(time t, char *mode){ 
0000 CFD9 FFE5 01295         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01296         MOVFF   FSR1L, FSR2L
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0008 C000 FFE5 01297         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01298         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01299         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01300         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01301         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01302         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01303         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01304         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01305         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01306         MOVFF   r0x09, POSTDEC1
0030 0E02      01307         MOVLW   0x02
0032 CFDB F000 01308         MOVFF   PLUSW2, r0x00
0036 0E03      01309         MOVLW   0x03
0038 CFDB F000 01310         MOVFF   PLUSW2, r0x01
003C 0E04      01311         MOVLW   0x04
003E CFDB F000 01312         MOVFF   PLUSW2, r0x02
0042 0E05      01313         MOVLW   0x05
0044 CFDB F000 01314         MOVFF   PLUSW2, r0x03
0048 0E06      01315         MOVLW   0x06
004A CFDB F000 01316         MOVFF   PLUSW2, r0x04
004E 0E07      01317         MOVLW   0x07
0050 CFDB F000 01318         MOVFF   PLUSW2, r0x05
               01319 ;       .line   132; src/clock.c        h = get_input(24, "Hours:", mode);
0054 5000      01320         MOVF    r0x05, W
0056 6EE5      01321         MOVWF   POSTDEC1
0058 5000      01322         MOVF    r0x04, W
005A 6EE5      01323         MOVWF   POSTDEC1
005C 5000      01324         MOVF    r0x03, W
005E 6EE5      01325         MOVWF   POSTDEC1
0060 0E00      01326         MOVLW   UPPER(__str_6)
0062 6EE5      01327         MOVWF   POSTDEC1
0064 0E00      01328         MOVLW   HIGH(__str_6)
0066 6EE5      01329         MOVWF   POSTDEC1
0068 0E00      01330         MOVLW   LOW(__str_6)
006A 6EE5      01331         MOVWF   POSTDEC1
006C 0E00      01332         MOVLW   0x00
006E 6EE5      01333         MOVWF   POSTDEC1
0070 0E18      01334         MOVLW   0x18
0072 6EE5      01335         MOVWF   POSTDEC1
0074 EC00 F000 01336         CALL    _get_input
0078 6E00      01337         MOVWF   r0x06
007A CFF3 F000 01338         MOVFF   PRODL, r0x07
007E 0E08      01339         MOVLW   0x08
0080 26E1      01340         ADDWF   FSR1L, F
               01341 ;       .line   133; src/clock.c        m = get_input(60, "MinuteS:", mode);
0082 5000      01342         MOVF    r0x05, W
0084 6EE5      01343         MOVWF   POSTDEC1
0086 5000      01344         MOVF    r0x04, W
0088 6EE5      01345         MOVWF   POSTDEC1
008A 5000      01346         MOVF    r0x03, W
008C 6EE5      01347         MOVWF   POSTDEC1
008E 0E00      01348         MOVLW   UPPER(__str_7)
0090 6EE5      01349         MOVWF   POSTDEC1
0092 0E00      01350         MOVLW   HIGH(__str_7)
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0094 6EE5      01351         MOVWF   POSTDEC1
0096 0E00      01352         MOVLW   LOW(__str_7)
0098 6EE5      01353         MOVWF   POSTDEC1
009A 0E00      01354         MOVLW   0x00
009C 6EE5      01355         MOVWF   POSTDEC1
009E 0E3C      01356         MOVLW   0x3c
00A0 6EE5      01357         MOVWF   POSTDEC1
00A2 EC00 F000 01358         CALL    _get_input
00A6 6E00      01359         MOVWF   r0x08
00A8 CFF3 F000 01360         MOVFF   PRODL, r0x09
00AC 0E08      01361         MOVLW   0x08
00AE 26E1      01362         ADDWF   FSR1L, F
               01363 ;       .line   134; src/clock.c        s = get_input(60, "SecondS:", mode);
00B0 5000      01364         MOVF    r0x05, W
00B2 6EE5      01365         MOVWF   POSTDEC1
00B4 5000      01366         MOVF    r0x04, W
00B6 6EE5      01367         MOVWF   POSTDEC1
00B8 5000      01368         MOVF    r0x03, W
00BA 6EE5      01369         MOVWF   POSTDEC1
00BC 0E00      01370         MOVLW   UPPER(__str_8)
00BE 6EE5      01371         MOVWF   POSTDEC1
00C0 0E00      01372         MOVLW   HIGH(__str_8)
00C2 6EE5      01373         MOVWF   POSTDEC1
00C4 0E00      01374         MOVLW   LOW(__str_8)
00C6 6EE5      01375         MOVWF   POSTDEC1
00C8 0E00      01376         MOVLW   0x00
00CA 6EE5      01377         MOVWF   POSTDEC1
00CC 0E3C      01378         MOVLW   0x3c
00CE 6EE5      01379         MOVWF   POSTDEC1
00D0 EC00 F000 01380         CALL    _get_input
00D4 6E00      01381         MOVWF   r0x03
00D6 CFF3 F000 01382         MOVFF   PRODL, r0x04
00DA 0E08      01383         MOVLW   0x08
00DC 26E1      01384         ADDWF   FSR1L, F
               01385 ;       .line   135; src/clock.c        time_set(t,h,m,s);
00DE 5000      01386         MOVF    r0x04, W
00E0 6EE5      01387         MOVWF   POSTDEC1
00E2 5000      01388         MOVF    r0x03, W
00E4 6EE5      01389         MOVWF   POSTDEC1
00E6 5000      01390         MOVF    r0x09, W
00E8 6EE5      01391         MOVWF   POSTDEC1
00EA 5000      01392         MOVF    r0x08, W
00EC 6EE5      01393         MOVWF   POSTDEC1
00EE 5000      01394         MOVF    r0x07, W
00F0 6EE5      01395         MOVWF   POSTDEC1
00F2 5000      01396         MOVF    r0x06, W
00F4 6EE5      01397         MOVWF   POSTDEC1
00F6 5000      01398         MOVF    r0x02, W
00F8 6EE5      01399         MOVWF   POSTDEC1
00FA 5000      01400         MOVF    r0x01, W
00FC 6EE5      01401         MOVWF   POSTDEC1
00FE 5000      01402         MOVF    r0x00, W
0100 6EE5      01403         MOVWF   POSTDEC1
0102 EC00 F000 01404         CALL    _time_set
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0106 0E09      01405         MOVLW   0x09
0108 26E1      01406         ADDWF   FSR1L, F
010A CFE4 F000 01407         MOVFF   PREINC1, r0x09
010E CFE4 F000 01408         MOVFF   PREINC1, r0x08
0112 CFE4 F000 01409         MOVFF   PREINC1, r0x07
0116 CFE4 F000 01410         MOVFF   PREINC1, r0x06
011A CFE4 F000 01411         MOVFF   PREINC1, r0x05
011E CFE4 F000 01412         MOVFF   PREINC1, r0x04
0122 CFE4 F000 01413         MOVFF   PREINC1, r0x03
0126 CFE4 F000 01414         MOVFF   PREINC1, r0x02
012A CFE4 F000 01415         MOVFF   PREINC1, r0x01
012E CFE4 F000 01416         MOVFF   PREINC1, r0x00
0132 CFE4 FFD9 01417         MOVFF   PREINC1, FSR2L
0136 0012      01418         RETURN  
               01419 
               01420 ; ; Starting pCode block
               01421 S_clock__init_config    code
0000 01422 _init_config:
               01423 ;       .line   83; src/clock.c void init_config(void){
0000 CFD9 FFE5 01424         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01425         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01426         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01427         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01428         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01429         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01430         MOVFF   r0x04, POSTDEC1
               01431 ;       .line   85; src/clock.c int choice = -1;
001C 0EFF      01432         MOVLW   0xff
001E 6E00      01433         MOVWF   r0x00
0020 6E00      01434         MOVWF   r0x01
               01435 ;       .line   86; src/clock.c display_string(START_FIRST_LINE, "Choose a config mode.");
0022 0E00      01436         MOVLW   UPPER(__str_0)
0024 6EE5      01437         MOVWF   POSTDEC1
0026 0E00      01438         MOVLW   HIGH(__str_0)
0028 6EE5      01439         MOVWF   POSTDEC1
002A 0E00      01440         MOVLW   LOW(__str_0)
002C 6EE5      01441         MOVWF   POSTDEC1
002E 0E00      01442         MOVLW   0x00
0030 6EE5      01443         MOVWF   POSTDEC1
0032 EC00 F000 01444         CALL    _display_string
0036 0E04      01445         MOVLW   0x04
0038 26E1      01446         ADDWF   FSR1L, F
003A 01447 _00138_DS_:
               01448 ;       .line   88; src/clock.c if(read_and_clear(&but2_pressed)){
003A 0E00      01449         MOVLW   HIGH(_but2_pressed)
003C 6E00      01450         MOVWF   r0x03
003E 0E00      01451         MOVLW   LOW(_but2_pressed)
0040 6E00      01452         MOVWF   r0x02
0042 0E80      01453         MOVLW   0x80
0044 6E00      01454         MOVWF   r0x04
0046 5000      01455         MOVF    r0x04, W
0048 6EE5      01456         MOVWF   POSTDEC1
004A 5000      01457         MOVF    r0x03, W
004C 6EE5      01458         MOVWF   POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004E 5000      01459         MOVF    r0x02, W
0050 6EE5      01460         MOVWF   POSTDEC1
0052 EC00 F000 01461         CALL    _read_and_clear
0056 6E00      01462         MOVWF   r0x02
0058 CFF3 F000 01463         MOVFF   PRODL, r0x03
005C 0E03      01464         MOVLW   0x03
005E 26E1      01465         ADDWF   FSR1L, F
0060 5000      01466         MOVF    r0x02, W
0062 1000      01467         IORWF   r0x03, W
0064 B4D8      01468         BTFSC   STATUS, 2
0066 D000      01469         BRA     _00130_DS_
               01470 ;       .line   90; src/clock.c switch(choice){
0068 5000      01471         MOVF    r0x00, W
006A E100      01472         BNZ     _00150_DS_
006C 5000      01473         MOVF    r0x01, W
006E E000      01474         BZ      _00125_DS_
0070 01475 _00150_DS_:
0070 5000      01476         MOVF    r0x00, W
0072 0A01      01477         XORLW   0x01
0074 E100      01478         BNZ     _00152_DS_
0076 5000      01479         MOVF    r0x01, W
0078 E000      01480         BZ      _00126_DS_
007A 01481 _00152_DS_:
007A D000      01482         BRA     _00127_DS_
007C 01483 _00125_DS_:
               01484 ;       .line   93; src/clock.c LCDErase();
007C EC00 F000 01485         CALL    _LCDErase
               01486 ;       .line   94; src/clock.c init_time(_alarm, "Setting alarm");                     
0080 0E00      01487         MOVLW   UPPER(__str_1)
0082 6EE5      01488         MOVWF   POSTDEC1
0084 0E00      01489         MOVLW   HIGH(__str_1)
0086 6EE5      01490         MOVWF   POSTDEC1
0088 0E00      01491         MOVLW   LOW(__str_1)
008A 6EE5      01492         MOVWF   POSTDEC1
008C 0000      01493         BANKSEL (__alarm + 2)
008E 5100      01494         MOVF    (__alarm + 2), W, B
0090 6EE5      01495         MOVWF   POSTDEC1
0092 0000      01496         BANKSEL (__alarm + 1)
0094 5100      01497         MOVF    (__alarm + 1), W, B
0096 6EE5      01498         MOVWF   POSTDEC1
0098 0000      01499         BANKSEL __alarm
009A 5100      01500         MOVF    __alarm, W, B
009C 6EE5      01501         MOVWF   POSTDEC1
009E EC00 F000 01502         CALL    _init_time
00A2 0E06      01503         MOVLW   0x06
00A4 26E1      01504         ADDWF   FSR1L, F
               01505 ;       .line   95; src/clock.c break;
00A6 D000      01506         BRA     _00130_DS_
00A8 01507 _00126_DS_:
               01508 ;       .line   98; src/clock.c LCDErase();
00A8 EC00 F000 01509         CALL    _LCDErase
               01510 ;       .line   99; src/clock.c init_time(_time, "Setting clock");                      
00AC 0E00      01511         MOVLW   UPPER(__str_2)
00AE 6EE5      01512         MOVWF   POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B0 0E00      01513         MOVLW   HIGH(__str_2)
00B2 6EE5      01514         MOVWF   POSTDEC1
00B4 0E00      01515         MOVLW   LOW(__str_2)
00B6 6EE5      01516         MOVWF   POSTDEC1
00B8 0000      01517         BANKSEL (__time + 2)
00BA 5100      01518         MOVF    (__time + 2), W, B
00BC 6EE5      01519         MOVWF   POSTDEC1
00BE 0000      01520         BANKSEL (__time + 1)
00C0 5100      01521         MOVF    (__time + 1), W, B
00C2 6EE5      01522         MOVWF   POSTDEC1
00C4 0000      01523         BANKSEL __time
00C6 5100      01524         MOVF    __time, W, B
00C8 6EE5      01525         MOVWF   POSTDEC1
00CA EC00 F000 01526         CALL    _init_time
00CE 0E06      01527         MOVLW   0x06
00D0 26E1      01528         ADDWF   FSR1L, F
               01529 ;       .line   100; src/clock.c        break;
00D2 D000      01530         BRA     _00130_DS_
00D4 01531 _00127_DS_:
               01532 ;       .line   102; src/clock.c        LCDErase();
00D4 EC00 F000 01533         CALL    _LCDErase
               01534 ;       .line   103; src/clock.c        return;
00D8 D000      01535         BRA     _00140_DS_
00DA 01536 _00130_DS_:
               01537 ;       .line   106; src/clock.c        if(read_and_clear(&but1_pressed)){ 
00DA 0E00      01538         MOVLW   HIGH(_but1_pressed)
00DC 6E00      01539         MOVWF   r0x03
00DE 0E00      01540         MOVLW   LOW(_but1_pressed)
00E0 6E00      01541         MOVWF   r0x02
00E2 0E80      01542         MOVLW   0x80
00E4 6E00      01543         MOVWF   r0x04
00E6 5000      01544         MOVF    r0x04, W
00E8 6EE5      01545         MOVWF   POSTDEC1
00EA 5000      01546         MOVF    r0x03, W
00EC 6EE5      01547         MOVWF   POSTDEC1
00EE 5000      01548         MOVF    r0x02, W
00F0 6EE5      01549         MOVWF   POSTDEC1
00F2 EC00 F000 01550         CALL    _read_and_clear
00F6 6E00      01551         MOVWF   r0x02
00F8 CFF3 F000 01552         MOVFF   PRODL, r0x03
00FC 0E03      01553         MOVLW   0x03
00FE 26E1      01554         ADDWF   FSR1L, F
0100 5000      01555         MOVF    r0x02, W
0102 1000      01556         IORWF   r0x03, W
0104 B4D8      01557         BTFSC   STATUS, 2
0106 D000      01558         BRA     _00138_DS_
               01559 ;       .line   108; src/clock.c        switch(choice){
0108 5000      01560         MOVF    r0x01, W
010A 0F80      01561         ADDLW   0x80
010C 0F81      01562         ADDLW   0x81
010E E100      01563         BNZ     _00153_DS_
0110 0EFF      01564         MOVLW   0xff
0112 5C00      01565         SUBWF   r0x00, W
0114 01566 _00153_DS_:
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0114 A0D8      01567         BTFSS   STATUS, 0
0116 D000      01568         BRA     _00138_DS_
0118 5000      01569         MOVF    r0x01, W
011A 0F80      01570         ADDLW   0x80
011C 0F80      01571         ADDLW   0x80
011E E100      01572         BNZ     _00154_DS_
0120 0E02      01573         MOVLW   0x02
0122 5C00      01574         SUBWF   r0x00, W
0124 01575 _00154_DS_:
0124 B0D8      01576         BTFSC   STATUS, 0
0126 D000      01577         BRA     _00138_DS_
0128 2800      01578         INCF    r0x00, W
012A 6E00      01579         MOVWF   r0x02
012C C000 FFE5 01580         MOVFF   r0x05, POSTDEC1
0130 C000 FFE5 01581         MOVFF   r0x06, POSTDEC1
0134 6A00      01582         CLRF    r0x06
0136 3400      01583         RLCF    r0x02, W
0138 3600      01584         RLCF    r0x06, F
013A 34E8      01585         RLCF    WREG, W
013C 3600      01586         RLCF    r0x06, F
013E 0BFC      01587         ANDLW   0xfc
0140 6E00      01588         MOVWF   r0x05
0142 0E00      01589         MOVLW   UPPER(_00155_DS_)
0144 6EFB      01590         MOVWF   PCLATU
0146 0E00      01591         MOVLW   HIGH(_00155_DS_)
0148 6EFA      01592         MOVWF   PCLATH
014A 0E00      01593         MOVLW   LOW(_00155_DS_)
014C 2600      01594         ADDWF   r0x05, F
014E 5000      01595         MOVF    r0x06, W
0150 22FA      01596         ADDWFC  PCLATH, F
0152 B0D8      01597         BTFSC   STATUS, 0
0154 2AFB      01598         INCF    PCLATU, F
0156 5000      01599         MOVF    r0x05, W
0158 CFE4 F000 01600         MOVFF   PREINC1, r0x06
015C CFE4 F000 01601         MOVFF   PREINC1, r0x05
0160 6EF9      01602         MOVWF   PCL
0162 01603 _00155_DS_:
0162 EF00 F000 01604         GOTO    _00131_DS_
0166 EF00 F000 01605         GOTO    _00132_DS_
016A EF00 F000 01606         GOTO    _00133_DS_
016E 01607 _00131_DS_:
               01608 ;       .line   111; src/clock.c        LCDErase();
016E EC00 F000 01609         CALL    _LCDErase
               01610 ;       .line   112; src/clock.c        choice = CONFIG_MODE_ALARM;
0172 6A00      01611         CLRF    r0x00
0174 6A00      01612         CLRF    r0x01
               01613 ;       .line   113; src/clock.c        display_string(START_FIRST_LINE, "Set alarm?");
0176 0E00      01614         MOVLW   UPPER(__str_3)
0178 6EE5      01615         MOVWF   POSTDEC1
017A 0E00      01616         MOVLW   HIGH(__str_3)
017C 6EE5      01617         MOVWF   POSTDEC1
017E 0E00      01618         MOVLW   LOW(__str_3)
0180 6EE5      01619         MOVWF   POSTDEC1
0182 0E00      01620         MOVLW   0x00
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0184 6EE5      01621         MOVWF   POSTDEC1
0186 EC00 F000 01622         CALL    _display_string
018A 0E04      01623         MOVLW   0x04
018C 26E1      01624         ADDWF   FSR1L, F
               01625 ;       .line   114; src/clock.c        break;
018E D000      01626         BRA     _00138_DS_
0190 01627 _00132_DS_:
               01628 ;       .line   117; src/clock.c        LCDErase();
0190 EC00 F000 01629         CALL    _LCDErase
               01630 ;       .line   118; src/clock.c        choice = CONFIG_MODE_CLOCK;
0194 0E01      01631         MOVLW   0x01
0196 6E00      01632         MOVWF   r0x00
0198 6A00      01633         CLRF    r0x01
               01634 ;       .line   119; src/clock.c        display_string(START_FIRST_LINE, "Set clock?");
019A 0E00      01635         MOVLW   UPPER(__str_4)
019C 6EE5      01636         MOVWF   POSTDEC1
019E 0E00      01637         MOVLW   HIGH(__str_4)
01A0 6EE5      01638         MOVWF   POSTDEC1
01A2 0E00      01639         MOVLW   LOW(__str_4)
01A4 6EE5      01640         MOVWF   POSTDEC1
01A6 0E00      01641         MOVLW   0x00
01A8 6EE5      01642         MOVWF   POSTDEC1
01AA EC00 F000 01643         CALL    _display_string
01AE 0E04      01644         MOVLW   0x04
01B0 26E1      01645         ADDWF   FSR1L, F
               01646 ;       .line   120; src/clock.c        break;
01B2 D000      01647         BRA     _00138_DS_
01B4 01648 _00133_DS_:
               01649 ;       .line   122; src/clock.c        LCDErase();
01B4 EC00 F000 01650         CALL    _LCDErase
               01651 ;       .line   123; src/clock.c        choice =CONFIG_MODE_NONE;
01B8 0EFF      01652         MOVLW   0xff
01BA 6E00      01653         MOVWF   r0x00
01BC 6E00      01654         MOVWF   r0x01
               01655 ;       .line   124; src/clock.c        display_string(START_FIRST_LINE, "Quit config mode?");
01BE 0E00      01656         MOVLW   UPPER(__str_5)
01C0 6EE5      01657         MOVWF   POSTDEC1
01C2 0E00      01658         MOVLW   HIGH(__str_5)
01C4 6EE5      01659         MOVWF   POSTDEC1
01C6 0E00      01660         MOVLW   LOW(__str_5)
01C8 6EE5      01661         MOVWF   POSTDEC1
01CA 0E00      01662         MOVLW   0x00
01CC 6EE5      01663         MOVWF   POSTDEC1
01CE EC00 F000 01664         CALL    _display_string
01D2 0E04      01665         MOVLW   0x04
01D4 26E1      01666         ADDWF   FSR1L, F
               01667 ;       .line   126; src/clock.c        }
01D6 D000      01668         BRA     _00138_DS_
01D8 01669 _00140_DS_:
01D8 CFE4 F000 01670         MOVFF   PREINC1, r0x04
01DC CFE4 F000 01671         MOVFF   PREINC1, r0x03
01E0 CFE4 F000 01672         MOVFF   PREINC1, r0x02
01E4 CFE4 F000 01673         MOVFF   PREINC1, r0x01
01E8 CFE4 F000 01674         MOVFF   PREINC1, r0x00
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01EC CFE4 FFD9 01675         MOVFF   PREINC1, FSR2L
01F0 0012      01676         RETURN  
               01677 
               01678 ; ; Starting pCode block
               01679 S_clock__alarm_led      code
0000 01680 _alarm_led:
               01681 ;       .line   79; src/clock.c void alarm_led(void){
0000 CFD9 FFE5 01682         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01683         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01684         MOVFF   r0x00, POSTDEC1
               01685 ;       .line   80; src/clock.c LED1_IO^=1;
000C 6A00      01686         CLRF    r0x00
000E B200      01687         BTFSC   _LATJbits, 1
0010 2A00      01688         INCF    r0x00, F
0012 0E01      01689         MOVLW   0x01
0014 1A00      01690         XORWF   r0x00, F
0016 5000      01691         MOVF    r0x00, W
0018 0B01      01692         ANDLW   0x01
001A 44E8      01693         RLNCF   WREG, W
001C 6EF4      01694         MOVWF   PRODH
001E 5000      01695         MOVF    _LATJbits, W
0020 0BFD      01696         ANDLW   0xfd
0022 10F4      01697         IORWF   PRODH, W
0024 6E00      01698         MOVWF   _LATJbits
               01699 ;       .line   81; src/clock.c LED2_IO^=1;
0026 6A00      01700         CLRF    r0x00
0028 B400      01701         BTFSC   _LATJbits, 2
002A 2A00      01702         INCF    r0x00, F
002C 0E01      01703         MOVLW   0x01
002E 1A00      01704         XORWF   r0x00, F
0030 5000      01705         MOVF    r0x00, W
0032 0B01      01706         ANDLW   0x01
0034 44E8      01707         RLNCF   WREG, W
0036 44E8      01708         RLNCF   WREG, W
0038 6EF4      01709         MOVWF   PRODH
003A 5000      01710         MOVF    _LATJbits, W
003C 0BFB      01711         ANDLW   0xfb
003E 10F4      01712         IORWF   PRODH, W
0040 6E00      01713         MOVWF   _LATJbits
0042 CFE4 F000 01714         MOVFF   PREINC1, r0x00
0046 CFE4 FFD9 01715         MOVFF   PREINC1, FSR2L
004A 0012      01716         RETURN  
               01717 
               01718 ; ; Starting pCode block
               01719 S_clock__toggle_led     code
0000 01720 _toggle_led:
               01721 ;       .line   75; src/clock.c void toggle_led(void){
0000 CFD9 FFE5 01722         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01723         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01724         MOVFF   r0x00, POSTDEC1
               01725 ;       .line   76; src/clock.c LED0_IO^=1;
000C 6A00      01726         CLRF    r0x00
000E B000      01727         BTFSC   _LATJbits, 0
0010 2A00      01728         INCF    r0x00, F
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0012 0E01      01729         MOVLW   0x01
0014 1A00      01730         XORWF   r0x00, F
0016 5000      01731         MOVF    r0x00, W
0018 0B01      01732         ANDLW   0x01
001A 6EF4      01733         MOVWF   PRODH
001C 5000      01734         MOVF    _LATJbits, W
001E 0BFE      01735         ANDLW   0xfe
0020 10F4      01736         IORWF   PRODH, W
0022 6E00      01737         MOVWF   _LATJbits
0024 CFE4 F000 01738         MOVFF   PREINC1, r0x00
0028 CFE4 FFD9 01739         MOVFF   PREINC1, FSR2L
002C 0012      01740         RETURN  
               01741 
               01742 ; ; Starting pCode block
               01743 S_clock__update_display code
0000 01744 _update_display:
               01745 ;       .line   70; src/clock.c void update_display(void){
0000 CFD9 FFE5 01746         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01747         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01748         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01749         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01750         MOVFF   r0x02, POSTDEC1
               01751 ;       .line   71; src/clock.c time_print(_time, display_line);
0014 0E00      01752         MOVLW   HIGH(_display_line)
0016 6E00      01753         MOVWF   r0x01
0018 0E00      01754         MOVLW   LOW(_display_line)
001A 6E00      01755         MOVWF   r0x00
001C 0E80      01756         MOVLW   0x80
001E 6E00      01757         MOVWF   r0x02
0020 5000      01758         MOVF    r0x02, W
0022 6EE5      01759         MOVWF   POSTDEC1
0024 5000      01760         MOVF    r0x01, W
0026 6EE5      01761         MOVWF   POSTDEC1
0028 5000      01762         MOVF    r0x00, W
002A 6EE5      01763         MOVWF   POSTDEC1
002C 0000      01764         BANKSEL (__time + 2)
002E 5100      01765         MOVF    (__time + 2), W, B
0030 6EE5      01766         MOVWF   POSTDEC1
0032 0000      01767         BANKSEL (__time + 1)
0034 5100      01768         MOVF    (__time + 1), W, B
0036 6EE5      01769         MOVWF   POSTDEC1
0038 0000      01770         BANKSEL __time
003A 5100      01771         MOVF    __time, W, B
003C 6EE5      01772         MOVWF   POSTDEC1
003E EC00 F000 01773         CALL    _time_print
0042 0E06      01774         MOVLW   0x06
0044 26E1      01775         ADDWF   FSR1L, F
               01776 ;       .line   72; src/clock.c display_string(0, display_line);
0046 0E00      01777         MOVLW   HIGH(_display_line)
0048 6E00      01778         MOVWF   r0x01
004A 0E00      01779         MOVLW   LOW(_display_line)
004C 6E00      01780         MOVWF   r0x00
004E 0E80      01781         MOVLW   0x80
0050 6E00      01782         MOVWF   r0x02
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0052 5000      01783         MOVF    r0x02, W
0054 6EE5      01784         MOVWF   POSTDEC1
0056 5000      01785         MOVF    r0x01, W
0058 6EE5      01786         MOVWF   POSTDEC1
005A 5000      01787         MOVF    r0x00, W
005C 6EE5      01788         MOVWF   POSTDEC1
005E 0E00      01789         MOVLW   0x00
0060 6EE5      01790         MOVWF   POSTDEC1
0062 EC00 F000 01791         CALL    _display_string
0066 0E04      01792         MOVLW   0x04
0068 26E1      01793         ADDWF   FSR1L, F
006A CFE4 F000 01794         MOVFF   PREINC1, r0x02
006E CFE4 F000 01795         MOVFF   PREINC1, r0x01
0072 CFE4 F000 01796         MOVFF   PREINC1, r0x00
0076 CFE4 FFD9 01797         MOVFF   PREINC1, FSR2L
007A 0012      01798         RETURN  
               01799 
               01800 ; ; Starting pCode block
007C 01801 __str_0:
007C 6843 6F6F 01802         DB      0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x20, 0x61, 0x20, 0x63, 0x6f, 0x6e
     6573 6120 
     6320 6E6F 
0088 6966 2067 01803         DB      0x66, 0x69, 0x67, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x00
     6F6D 6564 
     002E      
               01804 ; ; Starting pCode block
0092 01805 __str_1:
0092 6553 7474 01806         DB      0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x6c, 0x61, 0x72
     6E69 2067 
     6C61 7261 
009E 006D      01807         DB      0x6d, 0x00
               01808 ; ; Starting pCode block
00A0 01809 __str_2:
00A0 6553 7474 01810         DB      0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6c, 0x6f, 0x63
     6E69 2067 
     6C63 636F 
00AC 006B      01811         DB      0x6b, 0x00
               01812 ; ; Starting pCode block
00AE 01813 __str_3:
00AE 6553 2074 01814         DB      0x53, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x3f, 0x00
     6C61 7261 
     3F6D 0000 
               01815 ; ; Starting pCode block
00BA 01816 __str_4:
00BA 6553 2074 01817         DB      0x53, 0x65, 0x74, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x3f, 0x00
     6C63 636F 
     3F6B 0000 
               01818 ; ; Starting pCode block
00C6 01819 __str_5:
00C6 7551 7469 01820         DB      0x51, 0x75, 0x69, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20
     6320 6E6F 
     6966 2067 
00D2 6F6D 6564 01821         DB      0x6d, 0x6f, 0x64, 0x65, 0x3f, 0x00
     003F      
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01822 ; ; Starting pCode block
00D8 01823 __str_6:
00D8 6F48 7275 01824         DB      0x48, 0x6f, 0x75, 0x72, 0x73, 0x3a, 0x00
     3A73 0000 
               01825 ; ; Starting pCode block
00E0 01826 __str_7:
00E0 694D 756E 01827         DB      0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x53, 0x3a, 0x00
     6574 3A53 
     0000      
               01828 ; ; Starting pCode block
00EA 01829 __str_8:
00EA 6553 6F63 01830         DB      0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x3a, 0x00
     646E 3A53 
     0000      
               01831 ; ; Starting pCode block
00F4 01832 __str_9:
00F4 3025 6432 01833         DB      0x25, 0x30, 0x32, 0x64, 0x00
     0000      
               01834 
               01835 
               01836 ; Statistics:
               01837 ; code size:     2658 (0x0a62) bytes ( 2.03%)
               01838 ;                1329 (0x0531) words
               01839 ; udata size:      41 (0x0029) bytes ( 1.07%)
               01840 ; access size:     16 (0x0010) bytes
               01841 
               01842 
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

BSR                               00000FE0
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00125_DS_                        0000007C
_00126_DS_                        000000A8
_00127_DS_                        000000D4
_00130_DS_                        000000DA
_00131_DS_                        0000016E
_00132_DS_                        00000190
_00133_DS_                        000001B4
_00138_DS_                        0000003A
_00140_DS_                        000001D8
_00150_DS_                        00000070
_00152_DS_                        0000007A
_00153_DS_                        00000114
_00154_DS_                        00000124
_00155_DS_                        00000162
_00166_DS_                        00000064
_00167_DS_                        00000068
_00172_DS_                        000000CA
_00179_DS_                        0000012C
_00181_DS_                        0000017C
_00185_DS_                        000000B4
_00187_DS_                        000001C8
_00192_DS_                        00000090
_00196_DS_                        000000DE
_00200_DS_                        00000088
_00216_DS_                        00000052
_00218_DS_                        00000070
_00220_DS_                        000000F0
_00224_DS_                        00000128
_00228_DS_                        0000009E
_00229_DS_                        00000152
_00232_DS_                        00000154
_00247_DS_                        0000007E
_00248_DS_                        00000096
_00249_DS_                        00000098
_00250_DS_                        000000AC
_00251_DS_                        000000AE
_00252_DS_                        00000116
_00253_DS_                        00000118
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_10258_DS_                        00000088
_20259_DS_                        00000104
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCON1                         00000000
_BAUDCON1bits                     00000000
_BAUDCON2                         00000000
_BAUDCON2bits                     00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTL1                         00000000
_BAUDCTL1bits                     00000000
_BAUDCTL2                         00000000
_BAUDCTL2bits                     00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCP3CON                          00000000
_CCP3CONbits                      00000000
_CCP4CON                          00000000
_CCP4CONbits                      00000000
_CCP5CON                          00000000
_CCP5CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CCPR3                            00000000
_CCPR3H                           00000000
_CCPR3L                           00000000
_CCPR4                            00000000
_CCPR4H                           00000000
_CCPR4L                           00000000
_CCPR5                            00000000
_CCPR5H                           00000000
_CCPR5L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_DDRA                             00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_DDRAbits                         00000000
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_DDRF                             00000000
_DDRFbits                         00000000
_DDRG                             00000000
_DDRGbits                         00000000
_DDRH                             00000000
_DDRHbits                         00000000
_DDRJ                             00000000
_DDRJbits                         00000000
_EBSTCON                          00000000
_EBSTCONbits                      00000000
_EBSTCS                           00000000
_EBSTCSH                          00000000
_EBSTCSL                          00000000
_EBSTSD                           00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_ECCP2AS                          00000000
_ECCP2ASbits                      00000000
_ECCP2CON                         00000000
_ECCP2CONbits                     00000000
_ECCP2DEL                         00000000
_ECCP2DELbits                     00000000
_ECCP3AS                          00000000
_ECCP3ASbits                      00000000
_ECCP3CON                         00000000
_ECCP3CONbits                     00000000
_ECCP3DEL                         00000000
_ECCP3DELbits                     00000000
_ECON1                            00000000
_ECON1bits                        00000000
_ECON2                            00000000
_ECON2bits                        00000000
_EDATA                            00000000
_EDATAbits                        00000000
_EDMACS                           00000000
_EDMACSH                          00000000
_EDMACSL                          00000000
_EDMADST                          00000000
_EDMADSTH                         00000000
_EDMADSTL                         00000000
_EDMAND                           00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EDMANDH                          00000000
_EDMANDL                          00000000
_EDMAST                           00000000
_EDMASTH                          00000000
_EDMASTL                          00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EFLOCON                          00000000
_EFLOCONbits                      00000000
_EHT0                             00000000
_EHT1                             00000000
_EHT2                             00000000
_EHT3                             00000000
_EHT4                             00000000
_EHT5                             00000000
_EHT6                             00000000
_EHT7                             00000000
_EIE                              00000000
_EIEbits                          00000000
_EIR                              00000000
_EIRbits                          00000000
_EPAUS                            00000000
_EPAUSH                           00000000
_EPAUSL                           00000000
_EPKTCNT                          00000000
_EPMCS                            00000000
_EPMCSH                           00000000
_EPMCSL                           00000000
_EPMM0                            00000000
_EPMM1                            00000000
_EPMM2                            00000000
_EPMM3                            00000000
_EPMM4                            00000000
_EPMM5                            00000000
_EPMM6                            00000000
_EPMM7                            00000000
_EPMO                             00000000
_EPMOH                            00000000
_EPMOL                            00000000
_ERDPT                            00000000
_ERDPTH                           00000000
_ERDPTL                           00000000
_ERXFCON                          00000000
_ERXFCONbits                      00000000
_ERXND                            00000000
_ERXNDH                           00000000
_ERXNDL                           00000000
_ERXRDPT                          00000000
_ERXRDPTH                         00000000
_ERXRDPTL                         00000000
_ERXST                            00000000
_ERXSTH                           00000000
_ERXSTL                           00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_ERXWRPT                          00000000
_ERXWRPTH                         00000000
_ERXWRPTL                         00000000
_ESTAT                            00000000
_ESTATbits                        00000000
_ETXND                            00000000
_ETXNDH                           00000000
_ETXNDL                           00000000
_ETXST                            00000000
_ETXSTH                           00000000
_ETXSTL                           00000000
_EWOLIE                           00000000
_EWOLIEbits                       00000000
_EWOLIR                           00000000
_EWOLIRbits                       00000000
_EWRPT                            00000000
_EWRPTH                           00000000
_EWRPTL                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_IPR3                             00000000
_IPR3bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LATF                             00000000
_LATFbits                         00000000
_LATG                             00000000
_LATGbits                         00000000
_LATH                             00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_LATHbits                         00000000
_LATJ                             00000000
_LATJbits                         00000000
_LCDErase                         00000000
_LCDInit                          00000000
_LCDText                          00000000
_LCDUpdate                        00000000
_MAADR1                           00000000
_MAADR2                           00000000
_MAADR3                           00000000
_MAADR4                           00000000
_MAADR5                           00000000
_MAADR6                           00000000
_MABBIPG                          00000000
_MACLCON1                         00000000
_MACLCON1bits                     00000000
_MACLCON2                         00000000
_MACLCON2bits                     00000000
_MACON1                           00000000
_MACON1bits                       00000000
_MACON2                           00000000
_MACON2bits                       00000000
_MACON3                           00000000
_MACON3bits                       00000000
_MACON4                           00000000
_MACON4bits                       00000000
_MAIPG                            00000000
_MAIPGH                           00000000
_MAIPGL                           00000000
_MAMXFL                           00000000
_MAMXFLH                          00000000
_MAMXFLL                          00000000
_MEMCON                           00000000
_MEMCONbits                       00000000
_MICMD                            00000000
_MICMDbits                        00000000
_MICON                            00000000
_MICONbits                        00000000
_MIRD                             00000000
_MIRDH                            00000000
_MIRDL                            00000000
_MIREGADR                         00000000
_MISTAT                           00000000
_MISTATbits                       00000000
_MIWR                             00000000
_MIWRH                            00000000
_MIWRL                            00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_PC                               00000000
_PCL                              00000000
_PCLATH                           00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIE3                             00000000
_PIE3bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PIR3                             00000000
_PIR3bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_PORTF                            00000000
_PORTFbits                        00000000
_PORTG                            00000000
_PORTGbits                        00000000
_PORTH                            00000000
_PORTHbits                        00000000
_PORTJ                            00000000
_PORTJbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PR4                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_PSPCON                           00000000
_PSPCONbits                       00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCREG1                           00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_RCREG2                           00000000
_RCSTA                            00000000
_RCSTA1                           00000000
_RCSTA1bits                       00000000
_RCSTA2                           00000000
_RCSTA2bits                       00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRG1                           00000000
_SPBRG2                           00000000
_SPBRGH                           00000000
_SPBRGH1                          00000000
_SPBRGH2                          00000000
_SSP1ADD                          00000000
_SSP1BUF                          00000000
_SSP1CON1                         00000000
_SSP1CON1bits                     00000000
_SSP1CON2                         00000000
_SSP1CON2bits                     00000000
_SSP1STAT                         00000000
_SSP1STATbits                     00000000
_SSP2ADD                          00000000
_SSP2BUF                          00000000
_SSP2CON1                         00000000
_SSP2CON1bits                     00000000
_SSP2CON2                         00000000
_SSP2CON2bits                     00000000
_SSP2STAT                         00000000
_SSP2STATbits                     00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_T4CON                            00000000
_T4CONbits                        00000000
_TABLAT                           00000000
_TBLPTR                           00000000
_TBLPTRH                          00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TMR4                             00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TRISF                            00000000
_TRISFbits                        00000000
_TRISG                            00000000
_TRISGbits                        00000000
_TRISH                            00000000
_TRISHbits                        00000000
_TRISJ                            00000000
_TRISJbits                        00000000
_TXREG                            00000000
_TXREG1                           00000000
_TXREG2                           00000000
_TXSTA                            00000000
_TXSTA1                           00000000
_TXSTA1bits                       00000000
_TXSTA2                           00000000
_TXSTA2bits                       00000000
_TXSTAbits                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F97J60                        00000001
__alarm                           00000000
__gptrget1                        00000000
__gptrget2                        00000000
__gptrput1                        00000000
__gptrput2                        00000000
__modsint                         00000000
__str_0                           0000007C
__str_1                           00000092
__str_2                           000000A0
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
__str_3                           000000AE
__str_4                           000000BA
__str_5                           000000C6
__str_6                           000000D8
__str_7                           000000E0
__str_8                           000000EA
__str_9                           000000F4
__time                            00000000
_add_second                       00000000
_alarm_counter                    00000002
_alarm_going_off                  00000000
_alarm_led                        00000000
_but1_pressed                     00000006
_but2_pressed                     00000008
_config_mode_clock                0000000C
_config_mode_on                   0000000A
_display_line                     00000000
_display_string                   00000000
_get_input                        00000000
_highPriorityInterruptHandler     00000000
_init                             00000000
_init_config                      00000000
_init_time                        00000000
_main                             00000000
_overflow_counter                 00000004
_read_and_clear                   00000000
_sprintf                          00000000
_stdin                            00000000
_stdout                           00000000
_strlen                           00000000
_time_create                      00000000
_time_equals                      00000000
_time_print                       00000000
_time_set                         00000000
_to_double_digits                 00000000
_to_double_digits_buffer_1_1      00000000
_toggle_led                       00000000
_update_display                   00000000
ivec_0x1_highPriorityInterruptHandler  00000008
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  12:12:37         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
r0x0f                             0000000F


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

