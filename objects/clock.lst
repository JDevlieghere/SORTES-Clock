gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.9.4 #5595 (Nov 14 2013) (UNIX)
               00004 ; This file was generated Sat Nov 16 14:15:36 2013
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f97j60
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _config_mode_clock
               00016         global _update_display
               00017         global _toggle_second_led
               00018         global _init_config
               00019         global _display_config_mode
               00020         global _init_time
               00021         global _read_and_clear
               00022         global _get_input
               00023         global _display_string
               00024         global _to_double_digits
               00025         global _init
               00026         global __time
               00027         global __alarm
               00028         global _alarm_going_off
               00029         global _alarm_counter
               00030         global _overflow_counter
               00031         global _but1_pressed
               00032         global _but2_pressed
               00033         global _config_mode_on
               00034         global _config_called
               00035         global _main
               00036         global _toggle_alarm_led
               00037         global _highPriorityInterruptHandler
               00038 
               00039 ;--------------------------------------------------------
               00040 ; extern variables in this module
               00041 ;--------------------------------------------------------
               00042         extern __gptrget2
               00043         extern __gptrput2
               00044         extern __gptrget1
               00045         extern __gptrput1
               00046         extern _stdin
               00047         extern _stdout
               00048         extern _EBSTCONbits
               00049         extern _MISTATbits
               00050         extern _EFLOCONbits
               00051         extern _MACON1bits
               00052         extern _MACON2bits
               00053         extern _MACON3bits
               00054         extern _MACON4bits
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         extern _MACLCON1bits
               00056         extern _MACLCON2bits
               00057         extern _MICONbits
               00058         extern _MICMDbits
               00059         extern _EWOLIEbits
               00060         extern _EWOLIRbits
               00061         extern _ERXFCONbits
               00062         extern _EIEbits
               00063         extern _ESTATbits
               00064         extern _ECON2bits
               00065         extern _EIRbits
               00066         extern _EDATAbits
               00067         extern _SSP2CON2bits
               00068         extern _SSP2CON1bits
               00069         extern _SSP2STATbits
               00070         extern _ECCP2DELbits
               00071         extern _ECCP2ASbits
               00072         extern _ECCP3DELbits
               00073         extern _ECCP3ASbits
               00074         extern _RCSTA2bits
               00075         extern _TXSTA2bits
               00076         extern _CCP5CONbits
               00077         extern _CCP4CONbits
               00078         extern _T4CONbits
               00079         extern _ECCP1DELbits
               00080         extern _BAUDCON2bits
               00081         extern _BAUDCTL2bits
               00082         extern _BAUDCONbits
               00083         extern _BAUDCON1bits
               00084         extern _BAUDCTLbits
               00085         extern _BAUDCTL1bits
               00086         extern _PORTAbits
               00087         extern _PORTBbits
               00088         extern _PORTCbits
               00089         extern _PORTDbits
               00090         extern _PORTEbits
               00091         extern _PORTFbits
               00092         extern _PORTGbits
               00093         extern _PORTHbits
               00094         extern _PORTJbits
               00095         extern _LATAbits
               00096         extern _LATBbits
               00097         extern _LATCbits
               00098         extern _LATDbits
               00099         extern _LATEbits
               00100         extern _LATFbits
               00101         extern _LATGbits
               00102         extern _LATHbits
               00103         extern _LATJbits
               00104         extern _DDRAbits
               00105         extern _TRISAbits
               00106         extern _DDRBbits
               00107         extern _TRISBbits
               00108         extern _DDRCbits
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _TRISCbits
               00110         extern _DDRDbits
               00111         extern _TRISDbits
               00112         extern _DDREbits
               00113         extern _TRISEbits
               00114         extern _DDRFbits
               00115         extern _TRISFbits
               00116         extern _DDRGbits
               00117         extern _TRISGbits
               00118         extern _DDRHbits
               00119         extern _TRISHbits
               00120         extern _DDRJbits
               00121         extern _TRISJbits
               00122         extern _OSCTUNEbits
               00123         extern _MEMCONbits
               00124         extern _PIE1bits
               00125         extern _PIR1bits
               00126         extern _IPR1bits
               00127         extern _PIE2bits
               00128         extern _PIR2bits
               00129         extern _IPR2bits
               00130         extern _PIE3bits
               00131         extern _PIR3bits
               00132         extern _IPR3bits
               00133         extern _EECON1bits
               00134         extern _RCSTAbits
               00135         extern _RCSTA1bits
               00136         extern _TXSTAbits
               00137         extern _TXSTA1bits
               00138         extern _PSPCONbits
               00139         extern _T3CONbits
               00140         extern _CMCONbits
               00141         extern _CVRCONbits
               00142         extern _ECCP1ASbits
               00143         extern _CCP3CONbits
               00144         extern _ECCP3CONbits
               00145         extern _CCP2CONbits
               00146         extern _ECCP2CONbits
               00147         extern _CCP1CONbits
               00148         extern _ECCP1CONbits
               00149         extern _ADCON2bits
               00150         extern _ADCON1bits
               00151         extern _ADCON0bits
               00152         extern _SSP1CON2bits
               00153         extern _SSPCON2bits
               00154         extern _SSP1CON1bits
               00155         extern _SSPCON1bits
               00156         extern _SSP1STATbits
               00157         extern _SSPSTATbits
               00158         extern _T2CONbits
               00159         extern _T1CONbits
               00160         extern _RCONbits
               00161         extern _WDTCONbits
               00162         extern _ECON1bits
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _OSCCONbits
               00164         extern _T0CONbits
               00165         extern _STATUSbits
               00166         extern _INTCON3bits
               00167         extern _INTCON2bits
               00168         extern _INTCONbits
               00169         extern _STKPTRbits
               00170         extern _LCDText
               00171         extern _MAADR5
               00172         extern _MAADR6
               00173         extern _MAADR3
               00174         extern _MAADR4
               00175         extern _MAADR1
               00176         extern _MAADR2
               00177         extern _EBSTSD
               00178         extern _EBSTCON
               00179         extern _EBSTCS
               00180         extern _EBSTCSL
               00181         extern _EBSTCSH
               00182         extern _MISTAT
               00183         extern _EFLOCON
               00184         extern _EPAUS
               00185         extern _EPAUSL
               00186         extern _EPAUSH
               00187         extern _MACON1
               00188         extern _MACON2
               00189         extern _MACON3
               00190         extern _MACON4
               00191         extern _MABBIPG
               00192         extern _MAIPG
               00193         extern _MAIPGL
               00194         extern _MAIPGH
               00195         extern _MACLCON1
               00196         extern _MACLCON2
               00197         extern _MAMXFL
               00198         extern _MAMXFLL
               00199         extern _MAMXFLH
               00200         extern _MICON
               00201         extern _MICMD
               00202         extern _MIREGADR
               00203         extern _MIWR
               00204         extern _MIWRL
               00205         extern _MIWRH
               00206         extern _MIRD
               00207         extern _MIRDL
               00208         extern _MIRDH
               00209         extern _EHT0
               00210         extern _EHT1
               00211         extern _EHT2
               00212         extern _EHT3
               00213         extern _EHT4
               00214         extern _EHT5
               00215         extern _EHT6
               00216         extern _EHT7
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _EPMM0
               00218         extern _EPMM1
               00219         extern _EPMM2
               00220         extern _EPMM3
               00221         extern _EPMM4
               00222         extern _EPMM5
               00223         extern _EPMM6
               00224         extern _EPMM7
               00225         extern _EPMCS
               00226         extern _EPMCSL
               00227         extern _EPMCSH
               00228         extern _EPMO
               00229         extern _EPMOL
               00230         extern _EPMOH
               00231         extern _EWOLIE
               00232         extern _EWOLIR
               00233         extern _ERXFCON
               00234         extern _EPKTCNT
               00235         extern _EWRPT
               00236         extern _EWRPTL
               00237         extern _EWRPTH
               00238         extern _ETXST
               00239         extern _ETXSTL
               00240         extern _ETXSTH
               00241         extern _ETXND
               00242         extern _ETXNDL
               00243         extern _ETXNDH
               00244         extern _ERXST
               00245         extern _ERXSTL
               00246         extern _ERXSTH
               00247         extern _ERXND
               00248         extern _ERXNDL
               00249         extern _ERXNDH
               00250         extern _ERXRDPT
               00251         extern _ERXRDPTL
               00252         extern _ERXRDPTH
               00253         extern _ERXWRPT
               00254         extern _ERXWRPTL
               00255         extern _ERXWRPTH
               00256         extern _EDMAST
               00257         extern _EDMASTL
               00258         extern _EDMASTH
               00259         extern _EDMAND
               00260         extern _EDMANDL
               00261         extern _EDMANDH
               00262         extern _EDMADST
               00263         extern _EDMADSTL
               00264         extern _EDMADSTH
               00265         extern _EDMACS
               00266         extern _EDMACSL
               00267         extern _EDMACSH
               00268         extern _EIE
               00269         extern _ESTAT
               00270         extern _ECON2
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271         extern _EIR
               00272         extern _EDATA
               00273         extern _SSP2CON2
               00274         extern _SSP2CON1
               00275         extern _SSP2STAT
               00276         extern _SSP2ADD
               00277         extern _SSP2BUF
               00278         extern _ECCP2DEL
               00279         extern _ECCP2AS
               00280         extern _ECCP3DEL
               00281         extern _ECCP3AS
               00282         extern _RCSTA2
               00283         extern _TXSTA2
               00284         extern _TXREG2
               00285         extern _RCREG2
               00286         extern _SPBRG2
               00287         extern _CCP5CON
               00288         extern _CCPR5
               00289         extern _CCPR5L
               00290         extern _CCPR5H
               00291         extern _CCP4CON
               00292         extern _CCPR4
               00293         extern _CCPR4L
               00294         extern _CCPR4H
               00295         extern _T4CON
               00296         extern _PR4
               00297         extern _TMR4
               00298         extern _ECCP1DEL
               00299         extern _ERDPT
               00300         extern _ERDPTL
               00301         extern _ERDPTH
               00302         extern _BAUDCON2
               00303         extern _BAUDCTL2
               00304         extern _SPBRGH2
               00305         extern _BAUDCON
               00306         extern _BAUDCON1
               00307         extern _BAUDCTL
               00308         extern _BAUDCTL1
               00309         extern _SPBRGH
               00310         extern _SPBRGH1
               00311         extern _PORTA
               00312         extern _PORTB
               00313         extern _PORTC
               00314         extern _PORTD
               00315         extern _PORTE
               00316         extern _PORTF
               00317         extern _PORTG
               00318         extern _PORTH
               00319         extern _PORTJ
               00320         extern _LATA
               00321         extern _LATB
               00322         extern _LATC
               00323         extern _LATD
               00324         extern _LATE
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325         extern _LATF
               00326         extern _LATG
               00327         extern _LATH
               00328         extern _LATJ
               00329         extern _DDRA
               00330         extern _TRISA
               00331         extern _DDRB
               00332         extern _TRISB
               00333         extern _DDRC
               00334         extern _TRISC
               00335         extern _DDRD
               00336         extern _TRISD
               00337         extern _DDRE
               00338         extern _TRISE
               00339         extern _DDRF
               00340         extern _TRISF
               00341         extern _DDRG
               00342         extern _TRISG
               00343         extern _DDRH
               00344         extern _TRISH
               00345         extern _DDRJ
               00346         extern _TRISJ
               00347         extern _OSCTUNE
               00348         extern _MEMCON
               00349         extern _PIE1
               00350         extern _PIR1
               00351         extern _IPR1
               00352         extern _PIE2
               00353         extern _PIR2
               00354         extern _IPR2
               00355         extern _PIE3
               00356         extern _PIR3
               00357         extern _IPR3
               00358         extern _EECON1
               00359         extern _EECON2
               00360         extern _RCSTA
               00361         extern _RCSTA1
               00362         extern _TXSTA
               00363         extern _TXSTA1
               00364         extern _TXREG
               00365         extern _TXREG1
               00366         extern _RCREG
               00367         extern _RCREG1
               00368         extern _SPBRG
               00369         extern _SPBRG1
               00370         extern _PSPCON
               00371         extern _T3CON
               00372         extern _TMR3L
               00373         extern _TMR3H
               00374         extern _CMCON
               00375         extern _CVRCON
               00376         extern _ECCP1AS
               00377         extern _CCP3CON
               00378         extern _ECCP3CON
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00379         extern _CCPR3
               00380         extern _CCPR3L
               00381         extern _CCPR3H
               00382         extern _CCP2CON
               00383         extern _ECCP2CON
               00384         extern _CCPR2
               00385         extern _CCPR2L
               00386         extern _CCPR2H
               00387         extern _CCP1CON
               00388         extern _ECCP1CON
               00389         extern _CCPR1
               00390         extern _CCPR1L
               00391         extern _CCPR1H
               00392         extern _ADCON2
               00393         extern _ADCON1
               00394         extern _ADCON0
               00395         extern _ADRES
               00396         extern _ADRESL
               00397         extern _ADRESH
               00398         extern _SSP1CON2
               00399         extern _SSPCON2
               00400         extern _SSP1CON1
               00401         extern _SSPCON1
               00402         extern _SSP1STAT
               00403         extern _SSPSTAT
               00404         extern _SSP1ADD
               00405         extern _SSPADD
               00406         extern _SSP1BUF
               00407         extern _SSPBUF
               00408         extern _T2CON
               00409         extern _PR2
               00410         extern _TMR2
               00411         extern _T1CON
               00412         extern _TMR1L
               00413         extern _TMR1H
               00414         extern _RCON
               00415         extern _WDTCON
               00416         extern _ECON1
               00417         extern _OSCCON
               00418         extern _T0CON
               00419         extern _TMR0L
               00420         extern _TMR0H
               00421         extern _STATUS
               00422         extern _FSR2L
               00423         extern _FSR2H
               00424         extern _PLUSW2
               00425         extern _PREINC2
               00426         extern _POSTDEC2
               00427         extern _POSTINC2
               00428         extern _INDF2
               00429         extern _BSR
               00430         extern _FSR1L
               00431         extern _FSR1H
               00432         extern _PLUSW1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00433         extern _PREINC1
               00434         extern _POSTDEC1
               00435         extern _POSTINC1
               00436         extern _INDF1
               00437         extern _WREG
               00438         extern _FSR0L
               00439         extern _FSR0H
               00440         extern _PLUSW0
               00441         extern _PREINC0
               00442         extern _POSTDEC0
               00443         extern _POSTINC0
               00444         extern _INDF0
               00445         extern _INTCON3
               00446         extern _INTCON2
               00447         extern _INTCON
               00448         extern _PROD
               00449         extern _PRODL
               00450         extern _PRODH
               00451         extern _TABLAT
               00452         extern _TBLPTR
               00453         extern _TBLPTRL
               00454         extern _TBLPTRH
               00455         extern _TBLPTRU
               00456         extern _PC
               00457         extern _PCL
               00458         extern _PCLATH
               00459         extern _PCLATU
               00460         extern _STKPTR
               00461         extern _TOS
               00462         extern _TOSL
               00463         extern _TOSH
               00464         extern _TOSU
               00465         extern _sprintf
               00466         extern _strlen
               00467         extern _LCDInit
               00468         extern _LCDUpdate
               00469         extern _LCDErase
               00470         extern _time_create
               00471         extern _time_set
               00472         extern _add_second
               00473         extern _time_print
               00474         extern _time_equals
               00475         extern __modsint
               00476 ;--------------------------------------------------------
               00477 ;       Equates to used internal registers
               00478 ;--------------------------------------------------------
  00000FD8     00479 STATUS  equ     0xfd8
  00000FF9     00480 PCL     equ     0xff9
  00000FFA     00481 PCLATH  equ     0xffa
  00000FFB     00482 PCLATU  equ     0xffb
  00000FE8     00483 WREG    equ     0xfe8
  00000FE0     00484 BSR     equ     0xfe0
  00000FE9     00485 FSR0L   equ     0xfe9
  00000FEA     00486 FSR0H   equ     0xfea
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
  00000FE1     00487 FSR1L   equ     0xfe1
  00000FD9     00488 FSR2L   equ     0xfd9
  00000FE5     00489 POSTDEC1        equ     0xfe5
  00000FE4     00490 PREINC1 equ     0xfe4
  00000FDB     00491 PLUSW2  equ     0xfdb
  00000FF3     00492 PRODL   equ     0xff3
  00000FF4     00493 PRODH   equ     0xff4
               00494 
               00495 
               00496         idata
               00497 _alarm_going_off        db      0x00, 0x00
               00498 _alarm_counter  db      0x00, 0x00
               00499 _overflow_counter       db      0x00, 0x00
               00500 _but1_pressed   db      0x00, 0x00
               00501 _but2_pressed   db      0x00, 0x00
               00502 _config_mode_on db      0x00, 0x00
               00503 _config_mode_clock      db      0x01, 0x00
               00504 _config_called  db      0x00, 0x00
               00505 _init_config_choice_string_1_1  db      LOW(__str_0), HIGH(__str_0), UPPER(__str_0)
               00506 
               00507 
               00508 ; Internal registers
               00509 .registers      udata_ovr       0x0000
               00510 r0x00   res     1
               00511 r0x01   res     1
               00512 r0x02   res     1
               00513 r0x03   res     1
               00514 r0x04   res     1
               00515 r0x05   res     1
               00516 r0x06   res     1
               00517 r0x07   res     1
               00518 r0x08   res     1
               00519 r0x09   res     1
               00520 r0x0a   res     1
               00521 r0x0b   res     1
               00522 r0x0c   res     1
               00523 
               00524 udata_clock_0   udata
               00525 _update_display_display_line_1_1        res     32
               00526 
               00527 udata_clock_1   udata
               00528 __time  res     3
               00529 
               00530 udata_clock_2   udata
               00531 __alarm res     3
               00532 
               00533 udata_clock_3   udata
               00534 _to_double_digits_buffer_1_1    res     3
               00535 
               00536 ;--------------------------------------------------------
               00537 ; interrupt vector 
               00538 ;--------------------------------------------------------
               00539 
               00540 ;--------------------------------------------------------
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00541 ; global & static initialisations
               00542 ;--------------------------------------------------------
               00543 ; ; Starting pCode block for absolute section
               00544 ; ;-----------------------------------------
               00545 S_clock_ivec_0x1_highPriorityInterruptHandler   code    0X000008
0008 00546 ivec_0x1_highPriorityInterruptHandler:
0008 EF00 F000 00547         GOTO    _highPriorityInterruptHandler
               00548 
               00549 ; I code from now on!
               00550 ; ; Starting pCode block
               00551 S_clock__main   code
0000 00552 _main:
               00553 ;       .line   76; src/clock.c init();
0000 EC00 F000 00554         CALL    _init
               00555 ;       .line   78; src/clock.c init_config();
0004 EC00 F000 00556         CALL    _init_config
               00557 ;       .line   80; src/clock.c update_display();
0008 EC00 F000 00558         CALL    _update_display
000C 00559 _00108_DS_:
000C 0000      00560         BANKSEL _config_called
               00561 ;       .line   82; src/clock.c if(config_called){
000E 5100      00562         MOVF    _config_called, W, B
0010 0000      00563         BANKSEL (_config_called + 1)
0012 1100      00564         IORWF   (_config_called + 1), W, B
0014 E000      00565         BZ      _00108_DS_
0016 0000      00566         BANKSEL _config_called
               00567 ;       .line   83; src/clock.c config_called =0;
0018 6B00      00568         CLRF    _config_called, B
001A 0000      00569         BANKSEL (_config_called + 1)
001C 6B00      00570         CLRF    (_config_called + 1), B
               00571 ;       .line   84; src/clock.c init_config();
001E EC00 F000 00572         CALL    _init_config
0022 D000      00573         BRA     _00108_DS_
               00574 ;       .line   87; src/clock.c return 0;
0024 0012      00575         RETURN  
               00576 
               00577 ; ; Starting pCode block
               00578 S_clock__init   code
0000 00579 _init:
               00580 ;       .line   274; src/clock.c        void init(void){
0000 CFD9 FFE5 00581         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00582         MOVFF   FSR1L, FSR2L
               00583 ;       .line   276; src/clock.c        LCDInit();
0008 EC00 F000 00584         CALL    _LCDInit
               00585 ;       .line   279; src/clock.c        _time = time_create();
000C EC00 F000 00586         CALL    _time_create
0010 0000      00587         BANKSEL __time
0012 6F00      00588         MOVWF   __time, B
0014 CFF3 F000 00589         MOVFF   PRODL, (__time + 1)
0018 CFF4 F000 00590         MOVFF   PRODH, (__time + 2)
               00591 ;       .line   280; src/clock.c        _alarm = time_create();
001C EC00 F000 00592         CALL    _time_create
0020 0000      00593         BANKSEL __alarm
0022 6F00      00594         MOVWF   __alarm, B
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0024 CFF3 F000 00595         MOVFF   PRODL, (__alarm + 1)
0028 CFF4 F000 00596         MOVFF   PRODH, (__alarm + 2)
               00597 ;       .line   283; src/clock.c        BUTTON0_TRIS = 1;
002C 8600      00598         BSF     _TRISBbits, 3
               00599 ;       .line   284; src/clock.c        BUTTON1_TRIS = 1;
002E 8200      00600         BSF     _TRISBbits, 1
               00601 ;       .line   287; src/clock.c        INTCONbits.GIE = 1;
0030 8E00      00602         BSF     _INTCONbits, 7
               00603 ;       .line   288; src/clock.c        INTCONbits.PEIE = 1;
0032 8C00      00604         BSF     _INTCONbits, 6
               00605 ;       .line   289; src/clock.c        RCONbits.IPEN = 1; 
0034 8E00      00606         BSF     _RCONbits, 7
               00607 ;       .line   292; src/clock.c        T0CONbits.TMR0ON = 0;
0036 9E00      00608         BCF     _T0CONbits, 7
               00609 ;       .line   295; src/clock.c        TMR0H = 0x00000000;
0038 6A00      00610         CLRF    _TMR0H
               00611 ;       .line   296; src/clock.c        TMR0L = 0x00000000;
003A 6A00      00612         CLRF    _TMR0L
               00613 ;       .line   299; src/clock.c        T0CONbits.T08BIT = 0;
003C 9C00      00614         BCF     _T0CONbits, 6
               00615 ;       .line   302; src/clock.c        T0CONbits.T0CS = 0;
003E 9A00      00616         BCF     _T0CONbits, 5
               00617 ;       .line   305; src/clock.c        T0CONbits.PSA = 1;
0040 8600      00618         BSF     _T0CONbits, 3
               00619 ;       .line   308; src/clock.c        INTCONbits.TMR0IE = 1;
0042 8A00      00620         BSF     _INTCONbits, 5
               00621 ;       .line   311; src/clock.c        INTCON3bits.INT1IE = 1;
0044 8600      00622         BSF     _INTCON3bits, 3
               00623 ;       .line   312; src/clock.c        INTCON3bits.INT3IE = 1;
0046 8A00      00624         BSF     _INTCON3bits, 5
               00625 ;       .line   315; src/clock.c        LED0_TRIS = 0;
0048 9000      00626         BCF     _TRISJbits, 0
               00627 ;       .line   316; src/clock.c        LED1_TRIS = 0;   
004A 9200      00628         BCF     _TRISJbits, 1
               00629 ;       .line   317; src/clock.c        LED2_TRIS = 0;
004C 9400      00630         BCF     _TRISJbits, 2
               00631 ;       .line   318; src/clock.c        LED3_TRIS = 0;
004E 9A00      00632         BCF     _TRISGbits, 5
               00633 ;       .line   321; src/clock.c        LED0_IO = 0; 
0050 9000      00634         BCF     _LATJbits, 0
               00635 ;       .line   322; src/clock.c        LED1_IO = 0;
0052 9200      00636         BCF     _LATJbits, 1
               00637 ;       .line   323; src/clock.c        LED2_IO = 0;
0054 9400      00638         BCF     _LATJbits, 2
               00639 ;       .line   324; src/clock.c        LED3_IO = 1;
0056 8A00      00640         BSF     _PORTGbits, 5
0058 CFE4 FFD9 00641         MOVFF   PREINC1, FSR2L
005C 0012      00642         RETURN  
               00643 
               00644 ; ; Starting pCode block
               00645 S_clock__highPriorityInterruptHandler   code
0000 00646 _highPriorityInterruptHandler:
               00647 ;       .line   230; src/clock.c        void highPriorityInterruptHandler (void) __interrupt(1){
0000 CFE8 FFE5 00648         MOVFF   WREG, POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0004 CFD8 FFE5 00649         MOVFF   STATUS, POSTDEC1
0008 CFE0 FFE5 00650         MOVFF   BSR, POSTDEC1
000C CFF3 FFE5 00651         MOVFF   PRODL, POSTDEC1
0010 CFF4 FFE5 00652         MOVFF   PRODH, POSTDEC1
0014 CFE9 FFE5 00653         MOVFF   FSR0L, POSTDEC1
0018 CFEA FFE5 00654         MOVFF   FSR0H, POSTDEC1
001C CFFA FFE5 00655         MOVFF   PCLATH, POSTDEC1
0020 CFFB FFE5 00656         MOVFF   PCLATU, POSTDEC1
0024 CFD9 FFE5 00657         MOVFF   FSR2L, POSTDEC1
0028 CFE1 FFD9 00658         MOVFF   FSR1L, FSR2L
002C C000 FFE5 00659         MOVFF   r0x00, POSTDEC1
0030 C000 FFE5 00660         MOVFF   r0x01, POSTDEC1
               00661 ;       .line   231; src/clock.c        if(INTCON3bits.INT1F == 1){
0034 6A00      00662         CLRF    r0x00
0036 B000      00663         BTFSC   _INTCON3bits, 0
0038 2A00      00664         INCF    r0x00, F
003A 5000      00665         MOVF    r0x00, W
003C 0A01      00666         XORLW   0x01
003E E100      00667         BNZ     _00229_DS_
0040 00668 _00262_DS_:
0040 0000      00669         BANKSEL _config_mode_on
               00670 ;       .line   232; src/clock.c        if(!config_mode_on){
0042 5100      00671         MOVF    _config_mode_on, W, B
0044 0000      00672         BANKSEL (_config_mode_on + 1)
0046 1100      00673         IORWF   (_config_mode_on + 1), W, B
0048 E100      00674         BNZ     _00226_DS_
               00675 ;       .line   233; src/clock.c        config_called =1;       
004A 0E01      00676         MOVLW   0x01
004C 0000      00677         BANKSEL _config_called
004E 6F00      00678         MOVWF   _config_called, B
0050 0000      00679         BANKSEL (_config_called + 1)
0052 6B00      00680         CLRF    (_config_called + 1), B
0054 D000      00681         BRA     _00227_DS_
0056 00682 _00226_DS_:
               00683 ;       .line   235; src/clock.c        but2_pressed = 1;       
0056 0E01      00684         MOVLW   0x01
0058 0000      00685         BANKSEL _but2_pressed
005A 6F00      00686         MOVWF   _but2_pressed, B
005C 0000      00687         BANKSEL (_but2_pressed + 1)
005E 6B00      00688         CLRF    (_but2_pressed + 1), B
               00689 ; ;;!!! pic16_aopOp:1071 called for a spillLocation -- assigning WREG instead --- CHECK
0060 00690 _00227_DS_:
               00691 ;       .line   237; src/clock.c        if(BUTTON0_IO);
0060 6AE8      00692         CLRF    WREG
0062 B600      00693         BTFSC   _PORTBbits, 3
0064 2AE8      00694         INCF    WREG, F
               00695 ;       .line   238; src/clock.c        INTCON3bits.INT1F = 0; 
0066 9000      00696         BCF     _INTCON3bits, 0
0068 00697 _00229_DS_:
               00698 ;       .line   241; src/clock.c        if(INTCON3bits.INT3F  == 1){
0068 6A00      00699         CLRF    r0x00
006A B400      00700         BTFSC   _INTCON3bits, 2
006C 2A00      00701         INCF    r0x00, F
006E 5000      00702         MOVF    r0x00, W
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0070 0A01      00703         XORLW   0x01
0072 E100      00704         BNZ     _00231_DS_
               00705 ;       .line   242; src/clock.c        but1_pressed = 1;       
0074 0E01      00706         MOVLW   0x01
0076 0000      00707         BANKSEL _but1_pressed
0078 6F00      00708         MOVWF   _but1_pressed, B
007A 0000      00709         BANKSEL (_but1_pressed + 1)
007C 6B00      00710         CLRF    (_but1_pressed + 1), B
               00711 ; ;;!!! pic16_aopOp:1071 called for a spillLocation -- assigning WREG instead --- CHECK
               00712 ;       .line   243; src/clock.c        if(BUTTON1_IO);
007E 6AE8      00713         CLRF    WREG
0080 B200      00714         BTFSC   _PORTBbits, 1
0082 2AE8      00715         INCF    WREG, F
               00716 ;       .line   244; src/clock.c        INTCON3bits.INT3F = 0; 
0084 9400      00717         BCF     _INTCON3bits, 2
0086 00718 _00231_DS_:
               00719 ;       .line   246; src/clock.c        if(INTCONbits.TMR0IF == 1) {
0086 6A00      00720         CLRF    r0x00
0088 B400      00721         BTFSC   _INTCONbits, 2
008A 2A00      00722         INCF    r0x00, F
008C 5000      00723         MOVF    r0x00, W
008E 0A01      00724         XORLW   0x01
0090 E000      00725         BZ      _00266_DS_
0092 D000      00726         BRA     _00248_DS_
0094 00727 _00266_DS_:
0094 0000      00728         BANKSEL _overflow_counter
               00729 ;       .line   247; src/clock.c        overflow_counter++;
0096 2B00      00730         INCF    _overflow_counter, F, B
0098 E300      00731         BNC     _10277_DS_
009A 0000      00732         BANKSEL (_overflow_counter + 1)
009C 2B00      00733         INCF    (_overflow_counter + 1), F, B
009E 00734 _10277_DS_:
009E 0000      00735         BANKSEL _overflow_counter
               00736 ;       .line   248; src/clock.c        if(overflow_counter == CYCLES/2){
00A0 5100      00737         MOVF    _overflow_counter, W, B
00A2 0A2E      00738         XORLW   0x2e
00A4 E100      00739         BNZ     _00267_DS_
00A6 0000      00740         BANKSEL (_overflow_counter + 1)
00A8 5100      00741         MOVF    (_overflow_counter + 1), W, B
00AA E000      00742         BZ      _00268_DS_
00AC 00743 _00267_DS_:
00AC D000      00744         BRA     _00244_DS_
00AE 00745 _00268_DS_:
               00746 ;       .line   249; src/clock.c        toggle_second_led();
00AE EC00 F000 00747         CALL    _toggle_second_led
00B2 D000      00748         BRA     _00245_DS_
00B4 00749 _00244_DS_:
00B4 0000      00750         BANKSEL _overflow_counter
               00751 ;       .line   250; src/clock.c        }else if(overflow_counter == CYCLES){
00B6 5100      00752         MOVF    _overflow_counter, W, B
00B8 0A5D      00753         XORLW   0x5d
00BA E100      00754         BNZ     _00269_DS_
00BC 0000      00755         BANKSEL (_overflow_counter + 1)
00BE 5100      00756         MOVF    (_overflow_counter + 1), W, B
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C0 E000      00757         BZ      _00270_DS_
00C2 00758 _00269_DS_:
00C2 D000      00759         BRA     _00245_DS_
00C4 00760 _00270_DS_:
00C4 0000      00761         BANKSEL (__time + 2)
               00762 ;       .line   251; src/clock.c        if(time_equals(_alarm,_time)){
00C6 5100      00763         MOVF    (__time + 2), W, B
00C8 6EE5      00764         MOVWF   POSTDEC1
00CA 0000      00765         BANKSEL (__time + 1)
00CC 5100      00766         MOVF    (__time + 1), W, B
00CE 6EE5      00767         MOVWF   POSTDEC1
00D0 0000      00768         BANKSEL __time
00D2 5100      00769         MOVF    __time, W, B
00D4 6EE5      00770         MOVWF   POSTDEC1
00D6 0000      00771         BANKSEL (__alarm + 2)
00D8 5100      00772         MOVF    (__alarm + 2), W, B
00DA 6EE5      00773         MOVWF   POSTDEC1
00DC 0000      00774         BANKSEL (__alarm + 1)
00DE 5100      00775         MOVF    (__alarm + 1), W, B
00E0 6EE5      00776         MOVWF   POSTDEC1
00E2 0000      00777         BANKSEL __alarm
00E4 5100      00778         MOVF    __alarm, W, B
00E6 6EE5      00779         MOVWF   POSTDEC1
00E8 EC00 F000 00780         CALL    _time_equals
00EC 6E00      00781         MOVWF   r0x00
00EE CFF3 F000 00782         MOVFF   PRODL, r0x01
00F2 0E06      00783         MOVLW   0x06
00F4 26E1      00784         ADDWF   FSR1L, F
00F6 5000      00785         MOVF    r0x00, W
00F8 1000      00786         IORWF   r0x01, W
00FA E000      00787         BZ      _00233_DS_
               00788 ;       .line   252; src/clock.c        alarm_going_off = 1;
00FC 0E01      00789         MOVLW   0x01
00FE 0000      00790         BANKSEL _alarm_going_off
0100 6F00      00791         MOVWF   _alarm_going_off, B
0102 0000      00792         BANKSEL (_alarm_going_off + 1)
0104 6B00      00793         CLRF    (_alarm_going_off + 1), B
0106 00794 _00233_DS_:
0106 0000      00795         BANKSEL _alarm_going_off
               00796 ;       .line   254; src/clock.c        if(alarm_going_off){
0108 5100      00797         MOVF    _alarm_going_off, W, B
010A 0000      00798         BANKSEL (_alarm_going_off + 1)
010C 1100      00799         IORWF   (_alarm_going_off + 1), W, B
010E E000      00800         BZ      _00237_DS_
0110 0000      00801         BANKSEL _alarm_counter
               00802 ;       .line   255; src/clock.c        alarm_counter++;
0112 2B00      00803         INCF    _alarm_counter, F, B
0114 E300      00804         BNC     _20278_DS_
0116 0000      00805         BANKSEL (_alarm_counter + 1)
0118 2B00      00806         INCF    (_alarm_counter + 1), F, B
011A 00807 _20278_DS_:
               00808 ;       .line   256; src/clock.c        toggle_alarm_led();
011A EC00 F000 00809         CALL    _toggle_alarm_led
011E 0000      00810         BANKSEL _alarm_counter
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00811 ;       .line   257; src/clock.c        if(alarm_counter==30){
0120 5100      00812         MOVF    _alarm_counter, W, B
0122 0A1E      00813         XORLW   0x1e
0124 E100      00814         BNZ     _00271_DS_
0126 0000      00815         BANKSEL (_alarm_counter + 1)
0128 5100      00816         MOVF    (_alarm_counter + 1), W, B
012A E000      00817         BZ      _00272_DS_
012C 00818 _00271_DS_:
012C D000      00819         BRA     _00237_DS_
012E 00820 _00272_DS_:
012E 0000      00821         BANKSEL _alarm_going_off
               00822 ;       .line   258; src/clock.c        alarm_going_off =0;
0130 6B00      00823         CLRF    _alarm_going_off, B
0132 0000      00824         BANKSEL (_alarm_going_off + 1)
0134 6B00      00825         CLRF    (_alarm_going_off + 1), B
0136 0000      00826         BANKSEL _alarm_counter
               00827 ;       .line   259; src/clock.c        alarm_counter = 0;
0138 6B00      00828         CLRF    _alarm_counter, B
013A 0000      00829         BANKSEL (_alarm_counter + 1)
013C 6B00      00830         CLRF    (_alarm_counter + 1), B
013E 00831 _00237_DS_:
013E 0000      00832         BANKSEL _overflow_counter
               00833 ;       .line   262; src/clock.c        overflow_counter = 0;
0140 6B00      00834         CLRF    _overflow_counter, B
0142 0000      00835         BANKSEL (_overflow_counter + 1)
0144 6B00      00836         CLRF    (_overflow_counter + 1), B
               00837 ;       .line   263; src/clock.c        toggle_second_led();
0146 EC00 F000 00838         CALL    _toggle_second_led
014A 0000      00839         BANKSEL (__time + 2)
               00840 ;       .line   264; src/clock.c        add_second(_time);
014C 5100      00841         MOVF    (__time + 2), W, B
014E 6EE5      00842         MOVWF   POSTDEC1
0150 0000      00843         BANKSEL (__time + 1)
0152 5100      00844         MOVF    (__time + 1), W, B
0154 6EE5      00845         MOVWF   POSTDEC1
0156 0000      00846         BANKSEL __time
0158 5100      00847         MOVF    __time, W, B
015A 6EE5      00848         MOVWF   POSTDEC1
015C EC00 F000 00849         CALL    _add_second
0160 0E03      00850         MOVLW   0x03
0162 26E1      00851         ADDWF   FSR1L, F
0164 0000      00852         BANKSEL _config_called
               00853 ;       .line   265; src/clock.c        if(!config_called && !config_mode_on){
0166 5100      00854         MOVF    _config_called, W, B
0168 0000      00855         BANKSEL (_config_called + 1)
016A 1100      00856         IORWF   (_config_called + 1), W, B
016C E100      00857         BNZ     _00245_DS_
016E 0000      00858         BANKSEL _config_mode_on
0170 5100      00859         MOVF    _config_mode_on, W, B
0172 0000      00860         BANKSEL (_config_mode_on + 1)
0174 1100      00861         IORWF   (_config_mode_on + 1), W, B
0176 E100      00862         BNZ     _00245_DS_
               00863 ;       .line   266; src/clock.c        update_display();
0178 EC00 F000 00864         CALL    _update_display
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
017C 00865 _00245_DS_:
               00866 ;       .line   269; src/clock.c        INTCONbits.TMR0IF = 0;
017C 9400      00867         BCF     _INTCONbits, 2
017E 00868 _00248_DS_:
017E CFE4 F000 00869         MOVFF   PREINC1, r0x01
0182 CFE4 F000 00870         MOVFF   PREINC1, r0x00
0186 CFE4 FFD9 00871         MOVFF   PREINC1, FSR2L
018A CFE4 FFFB 00872         MOVFF   PREINC1, PCLATU
018E CFE4 FFFA 00873         MOVFF   PREINC1, PCLATH
0192 CFE4 FFEA 00874         MOVFF   PREINC1, FSR0H
0196 CFE4 FFE9 00875         MOVFF   PREINC1, FSR0L
019A CFE4 FFF4 00876         MOVFF   PREINC1, PRODH
019E CFE4 FFF3 00877         MOVFF   PREINC1, PRODL
01A2 CFE4 FFE0 00878         MOVFF   PREINC1, BSR
01A6 CFE4 FFD8 00879         MOVFF   PREINC1, STATUS
01AA CFE4 FFE8 00880         MOVFF   PREINC1, WREG
01AE 0010      00881         RETFIE  
               00882 
               00883 ; ; Starting pCode block
               00884 S_clock__to_double_digits       code
0000 00885 _to_double_digits:
               00886 ;       .line   224; src/clock.c        char* to_double_digits(int value){
0000 CFD9 FFE5 00887         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00888         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00889         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00890         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00891         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00892         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00893         MOVFF   r0x04, POSTDEC1
001C 0E02      00894         MOVLW   0x02
001E CFDB F000 00895         MOVFF   PLUSW2, r0x00
0022 0E03      00896         MOVLW   0x03
0024 CFDB F000 00897         MOVFF   PLUSW2, r0x01
               00898 ;       .line   226; src/clock.c        sprintf(buffer, "%02d", value);
0028 0E00      00899         MOVLW   HIGH(_to_double_digits_buffer_1_1)
002A 6E00      00900         MOVWF   r0x03
002C 0E00      00901         MOVLW   LOW(_to_double_digits_buffer_1_1)
002E 6E00      00902         MOVWF   r0x02
0030 0E80      00903         MOVLW   0x80
0032 6E00      00904         MOVWF   r0x04
0034 5000      00905         MOVF    r0x01, W
0036 6EE5      00906         MOVWF   POSTDEC1
0038 5000      00907         MOVF    r0x00, W
003A 6EE5      00908         MOVWF   POSTDEC1
003C 0E00      00909         MOVLW   UPPER(__str_9)
003E 6EE5      00910         MOVWF   POSTDEC1
0040 0E00      00911         MOVLW   HIGH(__str_9)
0042 6EE5      00912         MOVWF   POSTDEC1
0044 0E00      00913         MOVLW   LOW(__str_9)
0046 6EE5      00914         MOVWF   POSTDEC1
0048 5000      00915         MOVF    r0x04, W
004A 6EE5      00916         MOVWF   POSTDEC1
004C 5000      00917         MOVF    r0x03, W
004E 6EE5      00918         MOVWF   POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0050 5000      00919         MOVF    r0x02, W
0052 6EE5      00920         MOVWF   POSTDEC1
0054 EC00 F000 00921         CALL    _sprintf
0058 0E08      00922         MOVLW   0x08
005A 26E1      00923         ADDWF   FSR1L, F
               00924 ;       .line   227; src/clock.c        return buffer;
005C 0E00      00925         MOVLW   HIGH(_to_double_digits_buffer_1_1)
005E 6E00      00926         MOVWF   r0x01
0060 0E00      00927         MOVLW   LOW(_to_double_digits_buffer_1_1)
0062 6E00      00928         MOVWF   r0x00
0064 0E80      00929         MOVLW   0x80
0066 6E00      00930         MOVWF   r0x02
0068 C000 FFF4 00931         MOVFF   r0x02, PRODH
006C C000 FFF3 00932         MOVFF   r0x01, PRODL
0070 5000      00933         MOVF    r0x00, W
0072 CFE4 F000 00934         MOVFF   PREINC1, r0x04
0076 CFE4 F000 00935         MOVFF   PREINC1, r0x03
007A CFE4 F000 00936         MOVFF   PREINC1, r0x02
007E CFE4 F000 00937         MOVFF   PREINC1, r0x01
0082 CFE4 F000 00938         MOVFF   PREINC1, r0x00
0086 CFE4 FFD9 00939         MOVFF   PREINC1, FSR2L
008A 0012      00940         RETURN  
               00941 
               00942 ; ; Starting pCode block
               00943 S_clock__display_string code
0000 00944 _display_string:
               00945 ;       .line   213; src/clock.c        void display_string(BYTE pos, char* text){
0000 CFD9 FFE5 00946         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00947         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00948         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00949         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00950         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00951         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00952         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00953         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00954         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00955         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00956         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 00957         MOVFF   r0x09, POSTDEC1
0030 0E02      00958         MOVLW   0x02
0032 CFDB F000 00959         MOVFF   PLUSW2, r0x00
0036 0E03      00960         MOVLW   0x03
0038 CFDB F000 00961         MOVFF   PLUSW2, r0x01
003C 0E04      00962         MOVLW   0x04
003E CFDB F000 00963         MOVFF   PLUSW2, r0x02
0042 0E05      00964         MOVLW   0x05
0044 CFDB F000 00965         MOVFF   PLUSW2, r0x03
               00966 ;       .line   214; src/clock.c        BYTE        l = strlen(text);
0048 5000      00967         MOVF    r0x03, W
004A 6EE5      00968         MOVWF   POSTDEC1
004C 5000      00969         MOVF    r0x02, W
004E 6EE5      00970         MOVWF   POSTDEC1
0050 5000      00971         MOVF    r0x01, W
0052 6EE5      00972         MOVWF   POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0054 EC00 F000 00973         CALL    _strlen
0058 6E00      00974         MOVWF   r0x04
005A CFF3 F000 00975         MOVFF   PRODL, r0x05
005E 0E03      00976         MOVLW   0x03
0060 26E1      00977         ADDWF   FSR1L, F
               00978 ;       .line   215; src/clock.c        BYTE      max = 32-pos;    
0062 5000      00979         MOVF    r0x00, W
0064 0820      00980         SUBLW   0x20
0066 6E00      00981         MOVWF   r0x05
               00982 ;       .line   216; src/clock.c        char       *d = (char*)&LCDText[pos];
0068 6A00      00983         CLRF    r0x06
006A 0E00      00984         MOVLW   LOW(_LCDText)
006C 2600      00985         ADDWF   r0x00, F
006E 0E00      00986         MOVLW   HIGH(_LCDText)
0070 2200      00987         ADDWFC  r0x06, F
0072 5000      00988         MOVF    r0x06, W
0074 6E00      00989         MOVWF   r0x06
0076 5000      00990         MOVF    r0x00, W
0078 6E00      00991         MOVWF   r0x00
007A 0E80      00992         MOVLW   0x80
007C 6E00      00993         MOVWF   r0x07
               00994 ;       .line   218; src/clock.c        size_t      n = (l<max)?l:max;
007E 5000      00995         MOVF    r0x05, W
0080 5C00      00996         SUBWF   r0x04, W
0082 E300      00997         BNC     _00210_DS_
0084 C000 F000 00998         MOVFF   r0x05, r0x04
0088 00999 _00210_DS_:
0088 6A00      01000         CLRF    r0x05
               01001 ;       .line   219; src/clock.c        if (n != 0)
008A 5000      01002         MOVF    r0x04, W
008C 1000      01003         IORWF   r0x05, W
008E E000      01004         BZ      _00206_DS_
0090 01005 _00202_DS_:
               01006 ;       .line   220; src/clock.c        while (n-- != 0)*d++ = *s++;
0090 C000 F000 01007         MOVFF   r0x04, r0x08
0094 C000 F000 01008         MOVFF   r0x05, r0x09
0098 0EFF      01009         MOVLW   0xff
009A 2600      01010         ADDWF   r0x04, F
009C A0D8      01011         BTFSS   STATUS, 0
009E 0600      01012         DECF    r0x05, F
00A0 5000      01013         MOVF    r0x08, W
00A2 1000      01014         IORWF   r0x09, W
00A4 E000      01015         BZ      _00206_DS_
00A6 C000 FFE9 01016         MOVFF   r0x01, FSR0L
00AA C000 FFF3 01017         MOVFF   r0x02, PRODL
00AE 5000      01018         MOVF    r0x03, W
00B0 EC00 F000 01019         CALL    __gptrget1
00B4 6E00      01020         MOVWF   r0x08
00B6 2A00      01021         INCF    r0x01, F
00B8 B0D8      01022         BTFSC   STATUS, 0
00BA 2A00      01023         INCF    r0x02, F
00BC B0D8      01024         BTFSC   STATUS, 0
00BE 2A00      01025         INCF    r0x03, F
00C0 C000 FFE5 01026         MOVFF   r0x08, POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C4 C000 FFE9 01027         MOVFF   r0x00, FSR0L
00C8 C000 FFF3 01028         MOVFF   r0x06, PRODL
00CC 5000      01029         MOVF    r0x07, W
00CE EC00 F000 01030         CALL    __gptrput1
00D2 2A00      01031         INCF    r0x00, F
00D4 B0D8      01032         BTFSC   STATUS, 0
00D6 2A00      01033         INCF    r0x06, F
00D8 B0D8      01034         BTFSC   STATUS, 0
00DA 2A00      01035         INCF    r0x07, F
00DC D000      01036         BRA     _00202_DS_
00DE 01037 _00206_DS_:
               01038 ;       .line   221; src/clock.c        LCDUpdate();
00DE EC00 F000 01039         CALL    _LCDUpdate
00E2 CFE4 F000 01040         MOVFF   PREINC1, r0x09
00E6 CFE4 F000 01041         MOVFF   PREINC1, r0x08
00EA CFE4 F000 01042         MOVFF   PREINC1, r0x07
00EE CFE4 F000 01043         MOVFF   PREINC1, r0x06
00F2 CFE4 F000 01044         MOVFF   PREINC1, r0x05
00F6 CFE4 F000 01045         MOVFF   PREINC1, r0x04
00FA CFE4 F000 01046         MOVFF   PREINC1, r0x03
00FE CFE4 F000 01047         MOVFF   PREINC1, r0x02
0102 CFE4 F000 01048         MOVFF   PREINC1, r0x01
0106 CFE4 F000 01049         MOVFF   PREINC1, r0x00
010A CFE4 FFD9 01050         MOVFF   PREINC1, FSR2L
010E 0012      01051         RETURN  
               01052 
               01053 ; ; Starting pCode block
               01054 S_clock__get_input      code
0000 01055 _get_input:
               01056 ;       .line   189; src/clock.c        int get_input(int maxvalue, char *text, char *mode){
0000 CFD9 FFE5 01057         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01058         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01059         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01060         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01061         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01062         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01063         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01064         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01065         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01066         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01067         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01068         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 01069         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 01070         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 01071         MOVFF   r0x0c, POSTDEC1
003C 0E02      01072         MOVLW   0x02
003E CFDB F000 01073         MOVFF   PLUSW2, r0x00
0042 0E03      01074         MOVLW   0x03
0044 CFDB F000 01075         MOVFF   PLUSW2, r0x01
0048 0E04      01076         MOVLW   0x04
004A CFDB F000 01077         MOVFF   PLUSW2, r0x02
004E 0E05      01078         MOVLW   0x05
0050 CFDB F000 01079         MOVFF   PLUSW2, r0x03
0054 0E06      01080         MOVLW   0x06
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0056 CFDB F000 01081         MOVFF   PLUSW2, r0x04
005A 0E07      01082         MOVLW   0x07
005C CFDB F000 01083         MOVFF   PLUSW2, r0x05
0060 0E08      01084         MOVLW   0x08
0062 CFDB F000 01085         MOVFF   PLUSW2, r0x06
0066 0E09      01086         MOVLW   0x09
0068 CFDB F000 01087         MOVFF   PLUSW2, r0x07
               01088 ;       .line   190; src/clock.c        BYTE length = strlen(text);
006C 5000      01089         MOVF    r0x04, W
006E 6EE5      01090         MOVWF   POSTDEC1
0070 5000      01091         MOVF    r0x03, W
0072 6EE5      01092         MOVWF   POSTDEC1
0074 5000      01093         MOVF    r0x02, W
0076 6EE5      01094         MOVWF   POSTDEC1
0078 EC00 F000 01095         CALL    _strlen
007C 6E00      01096         MOVWF   r0x08
007E CFF3 F000 01097         MOVFF   PRODL, r0x09
0082 0E03      01098         MOVLW   0x03
0084 26E1      01099         ADDWF   FSR1L, F
               01100 ;       .line   191; src/clock.c        int value = 0;
0086 6A00      01101         CLRF    r0x09
0088 6A00      01102         CLRF    r0x0a
               01103 ;       .line   192; src/clock.c        display_string(START_FIRST_LINE , mode);
008A 5000      01104         MOVF    r0x07, W
008C 6EE5      01105         MOVWF   POSTDEC1
008E 5000      01106         MOVF    r0x06, W
0090 6EE5      01107         MOVWF   POSTDEC1
0092 5000      01108         MOVF    r0x05, W
0094 6EE5      01109         MOVWF   POSTDEC1
0096 0E00      01110         MOVLW   0x00
0098 6EE5      01111         MOVWF   POSTDEC1
009A EC00 F000 01112         CALL    _display_string
009E 0E04      01113         MOVLW   0x04
00A0 26E1      01114         ADDWF   FSR1L, F
               01115 ;       .line   193; src/clock.c        display_string(START_SECOND_LINE, text);
00A2 5000      01116         MOVF    r0x04, W
00A4 6EE5      01117         MOVWF   POSTDEC1
00A6 5000      01118         MOVF    r0x03, W
00A8 6EE5      01119         MOVWF   POSTDEC1
00AA 5000      01120         MOVF    r0x02, W
00AC 6EE5      01121         MOVWF   POSTDEC1
00AE 0E10      01122         MOVLW   0x10
00B0 6EE5      01123         MOVWF   POSTDEC1
00B2 EC00 F000 01124         CALL    _display_string
00B6 0E04      01125         MOVLW   0x04
00B8 26E1      01126         ADDWF   FSR1L, F
               01127 ;       .line   194; src/clock.c        while(1)
00BA 0E11      01128         MOVLW   0x11
00BC 2400      01129         ADDWF   r0x08, W
00BE 6E00      01130         MOVWF   r0x02
00C0 01131 _00195_DS_:
00C0 0000      01132         BANKSEL _config_mode_on
               01133 ;       .line   197; src/clock.c        if(config_mode_on){
00C2 5100      01134         MOVF    _config_mode_on, W, B
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C4 0000      01135         BANKSEL (_config_mode_on + 1)
00C6 1100      01136         IORWF   (_config_mode_on + 1), W, B
00C8 E000      01137         BZ      _00195_DS_
               01138 ;       .line   198; src/clock.c        DelayMs(10);
00CA 0E68      01139         MOVLW   0x68
00CC 6E00      01140         MOVWF   r0x03
00CE 0E42      01141         MOVLW   0x42
00D0 6E00      01142         MOVWF   r0x04
00D2 6A00      01143         CLRF    r0x05
00D4 6A00      01144         CLRF    r0x06
00D6 01145 _00182_DS_:
00D6 C000 F000 01146         MOVFF   r0x03, r0x07
00DA C000 F000 01147         MOVFF   r0x04, r0x08
00DE C000 F000 01148         MOVFF   r0x05, r0x0b
00E2 C000 F000 01149         MOVFF   r0x06, r0x0c
00E6 0EFF      01150         MOVLW   0xff
00E8 2600      01151         ADDWF   r0x03, F
00EA 0EFF      01152         MOVLW   0xff
00EC 2200      01153         ADDWFC  r0x04, F
00EE 0EFF      01154         MOVLW   0xff
00F0 2200      01155         ADDWFC  r0x05, F
00F2 0EFF      01156         MOVLW   0xff
00F4 2200      01157         ADDWFC  r0x06, F
00F6 5000      01158         MOVF    r0x07, W
00F8 1000      01159         IORWF   r0x08, W
00FA 1000      01160         IORWF   r0x0b, W
00FC 1000      01161         IORWF   r0x0c, W
00FE E100      01162         BNZ     _00182_DS_
               01163 ;       .line   199; src/clock.c        if(read_and_clear(&but2_pressed)){
0100 0E00      01164         MOVLW   HIGH(_but2_pressed)
0102 6E00      01165         MOVWF   r0x04
0104 0E00      01166         MOVLW   LOW(_but2_pressed)
0106 6E00      01167         MOVWF   r0x03
0108 0E80      01168         MOVLW   0x80
010A 6E00      01169         MOVWF   r0x05
010C 5000      01170         MOVF    r0x05, W
010E 6EE5      01171         MOVWF   POSTDEC1
0110 5000      01172         MOVF    r0x04, W
0112 6EE5      01173         MOVWF   POSTDEC1
0114 5000      01174         MOVF    r0x03, W
0116 6EE5      01175         MOVWF   POSTDEC1
0118 EC00 F000 01176         CALL    _read_and_clear
011C 6E00      01177         MOVWF   r0x03
011E CFF3 F000 01178         MOVFF   PRODL, r0x04
0122 0E03      01179         MOVLW   0x03
0124 26E1      01180         ADDWF   FSR1L, F
0126 5000      01181         MOVF    r0x03, W
0128 1000      01182         IORWF   r0x04, W
012A E000      01183         BZ      _00189_DS_
               01184 ;       .line   200; src/clock.c        LCDErase();
012C EC00 F000 01185         CALL    _LCDErase
               01186 ;       .line   201; src/clock.c        return value;
0130 C000 FFF3 01187         MOVFF   r0x0a, PRODL
0134 5000      01188         MOVF    r0x09, W
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0136 D000      01189         BRA     _00197_DS_
0138 01190 _00189_DS_:
               01191 ;       .line   203; src/clock.c        if(read_and_clear(&but1_pressed)){ 
0138 0E00      01192         MOVLW   HIGH(_but1_pressed)
013A 6E00      01193         MOVWF   r0x04
013C 0E00      01194         MOVLW   LOW(_but1_pressed)
013E 6E00      01195         MOVWF   r0x03
0140 0E80      01196         MOVLW   0x80
0142 6E00      01197         MOVWF   r0x05
0144 5000      01198         MOVF    r0x05, W
0146 6EE5      01199         MOVWF   POSTDEC1
0148 5000      01200         MOVF    r0x04, W
014A 6EE5      01201         MOVWF   POSTDEC1
014C 5000      01202         MOVF    r0x03, W
014E 6EE5      01203         MOVWF   POSTDEC1
0150 EC00 F000 01204         CALL    _read_and_clear
0154 6E00      01205         MOVWF   r0x03
0156 CFF3 F000 01206         MOVFF   PRODL, r0x04
015A 0E03      01207         MOVLW   0x03
015C 26E1      01208         ADDWF   FSR1L, F
015E 5000      01209         MOVF    r0x03, W
0160 1000      01210         IORWF   r0x04, W
0162 E000      01211         BZ      _00191_DS_
               01212 ;       .line   204; src/clock.c        value = (++value)%maxvalue;
0164 2A00      01213         INCF    r0x09, F
0166 B0D8      01214         BTFSC   STATUS, 0
0168 2A00      01215         INCF    r0x0a, F
016A 5000      01216         MOVF    r0x01, W
016C 6EE5      01217         MOVWF   POSTDEC1
016E 5000      01218         MOVF    r0x00, W
0170 6EE5      01219         MOVWF   POSTDEC1
0172 5000      01220         MOVF    r0x0a, W
0174 6EE5      01221         MOVWF   POSTDEC1
0176 5000      01222         MOVF    r0x09, W
0178 6EE5      01223         MOVWF   POSTDEC1
017A EC00 F000 01224         CALL    __modsint
017E 6E00      01225         MOVWF   r0x09
0180 CFF3 F000 01226         MOVFF   PRODL, r0x0a
0184 0E04      01227         MOVLW   0x04
0186 26E1      01228         ADDWF   FSR1L, F
0188 01229 _00191_DS_:
               01230 ;       .line   206; src/clock.c        display_string(START_SECOND_LINE + length + 1, to_double_digits(value));
0188 5000      01231         MOVF    r0x0a, W
018A 6EE5      01232         MOVWF   POSTDEC1
018C 5000      01233         MOVF    r0x09, W
018E 6EE5      01234         MOVWF   POSTDEC1
0190 EC00 F000 01235         CALL    _to_double_digits
0194 6E00      01236         MOVWF   r0x03
0196 CFF3 F000 01237         MOVFF   PRODL, r0x04
019A CFF4 F000 01238         MOVFF   PRODH, r0x05
019E 0E02      01239         MOVLW   0x02
01A0 26E1      01240         ADDWF   FSR1L, F
01A2 5000      01241         MOVF    r0x05, W
01A4 6EE5      01242         MOVWF   POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01A6 5000      01243         MOVF    r0x04, W
01A8 6EE5      01244         MOVWF   POSTDEC1
01AA 5000      01245         MOVF    r0x03, W
01AC 6EE5      01246         MOVWF   POSTDEC1
01AE 5000      01247         MOVF    r0x02, W
01B0 6EE5      01248         MOVWF   POSTDEC1
01B2 EC00 F000 01249         CALL    _display_string
01B6 0E04      01250         MOVLW   0x04
01B8 26E1      01251         ADDWF   FSR1L, F
01BA D000      01252         BRA     _00195_DS_
01BC 01253 _00197_DS_:
01BC CFE4 F000 01254         MOVFF   PREINC1, r0x0c
01C0 CFE4 F000 01255         MOVFF   PREINC1, r0x0b
01C4 CFE4 F000 01256         MOVFF   PREINC1, r0x0a
01C8 CFE4 F000 01257         MOVFF   PREINC1, r0x09
01CC CFE4 F000 01258         MOVFF   PREINC1, r0x08
01D0 CFE4 F000 01259         MOVFF   PREINC1, r0x07
01D4 CFE4 F000 01260         MOVFF   PREINC1, r0x06
01D8 CFE4 F000 01261         MOVFF   PREINC1, r0x05
01DC CFE4 F000 01262         MOVFF   PREINC1, r0x04
01E0 CFE4 F000 01263         MOVFF   PREINC1, r0x03
01E4 CFE4 F000 01264         MOVFF   PREINC1, r0x02
01E8 CFE4 F000 01265         MOVFF   PREINC1, r0x01
01EC CFE4 F000 01266         MOVFF   PREINC1, r0x00
01F0 CFE4 FFD9 01267         MOVFF   PREINC1, FSR2L
01F4 0012      01268         RETURN  
               01269 
               01270 ; ; Starting pCode block
               01271 S_clock__read_and_clear code
0000 01272 _read_and_clear:
               01273 ;       .line   182; src/clock.c        int read_and_clear(int *variable){
0000 CFD9 FFE5 01274         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01275         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01276         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01277         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01278         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01279         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01280         MOVFF   r0x04, POSTDEC1
001C 0E02      01281         MOVLW   0x02
001E CFDB F000 01282         MOVFF   PLUSW2, r0x00
0022 0E03      01283         MOVLW   0x03
0024 CFDB F000 01284         MOVFF   PLUSW2, r0x01
0028 0E04      01285         MOVLW   0x04
002A CFDB F000 01286         MOVFF   PLUSW2, r0x02
               01287 ;       .line   183; src/clock.c        if(*variable){
002E C000 FFE9 01288         MOVFF   r0x00, FSR0L
0032 C000 FFF3 01289         MOVFF   r0x01, PRODL
0036 5000      01290         MOVF    r0x02, W
0038 EC00 F000 01291         CALL    __gptrget2
003C 6E00      01292         MOVWF   r0x03
003E CFF3 F000 01293         MOVFF   PRODL, r0x04
0042 5000      01294         MOVF    r0x03, W
0044 1000      01295         IORWF   r0x04, W
0046 E000      01296         BZ      _00176_DS_
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01297 ;       .line   184; src/clock.c        *variable = 0;
0048 0E00      01298         MOVLW   0x00
004A 6EE5      01299         MOVWF   POSTDEC1
004C 0E00      01300         MOVLW   0x00
004E 6EF4      01301         MOVWF   PRODH
0050 C000 FFE9 01302         MOVFF   r0x00, FSR0L
0054 C000 FFF3 01303         MOVFF   r0x01, PRODL
0058 5000      01304         MOVF    r0x02, W
005A EC00 F000 01305         CALL    __gptrput2
               01306 ;       .line   185; src/clock.c        return 1;
005E 6AF3      01307         CLRF    PRODL
0060 0E01      01308         MOVLW   0x01
0062 D000      01309         BRA     _00177_DS_
0064 01310 _00176_DS_:
               01311 ;       .line   187; src/clock.c        return 0;
0064 6AF3      01312         CLRF    PRODL
0066 6AE8      01313         CLRF    WREG
0068 01314 _00177_DS_:
0068 CFE4 F000 01315         MOVFF   PREINC1, r0x04
006C CFE4 F000 01316         MOVFF   PREINC1, r0x03
0070 CFE4 F000 01317         MOVFF   PREINC1, r0x02
0074 CFE4 F000 01318         MOVFF   PREINC1, r0x01
0078 CFE4 F000 01319         MOVFF   PREINC1, r0x00
007C CFE4 FFD9 01320         MOVFF   PREINC1, FSR2L
0080 0012      01321         RETURN  
               01322 
               01323 ; ; Starting pCode block
               01324 S_clock__init_time      code
0000 01325 _init_time:
               01326 ;       .line   174; src/clock.c        void init_time(time t, char *mode){ 
0000 CFD9 FFE5 01327         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01328         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01329         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01330         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01331         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01332         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01333         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01334         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01335         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01336         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01337         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01338         MOVFF   r0x09, POSTDEC1
0030 0E02      01339         MOVLW   0x02
0032 CFDB F000 01340         MOVFF   PLUSW2, r0x00
0036 0E03      01341         MOVLW   0x03
0038 CFDB F000 01342         MOVFF   PLUSW2, r0x01
003C 0E04      01343         MOVLW   0x04
003E CFDB F000 01344         MOVFF   PLUSW2, r0x02
0042 0E05      01345         MOVLW   0x05
0044 CFDB F000 01346         MOVFF   PLUSW2, r0x03
0048 0E06      01347         MOVLW   0x06
004A CFDB F000 01348         MOVFF   PLUSW2, r0x04
004E 0E07      01349         MOVLW   0x07
0050 CFDB F000 01350         MOVFF   PLUSW2, r0x05
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01351 ;       .line   176; src/clock.c        h = get_input(24, "Hours:", mode);
0054 5000      01352         MOVF    r0x05, W
0056 6EE5      01353         MOVWF   POSTDEC1
0058 5000      01354         MOVF    r0x04, W
005A 6EE5      01355         MOVWF   POSTDEC1
005C 5000      01356         MOVF    r0x03, W
005E 6EE5      01357         MOVWF   POSTDEC1
0060 0E00      01358         MOVLW   UPPER(__str_6)
0062 6EE5      01359         MOVWF   POSTDEC1
0064 0E00      01360         MOVLW   HIGH(__str_6)
0066 6EE5      01361         MOVWF   POSTDEC1
0068 0E00      01362         MOVLW   LOW(__str_6)
006A 6EE5      01363         MOVWF   POSTDEC1
006C 0E00      01364         MOVLW   0x00
006E 6EE5      01365         MOVWF   POSTDEC1
0070 0E18      01366         MOVLW   0x18
0072 6EE5      01367         MOVWF   POSTDEC1
0074 EC00 F000 01368         CALL    _get_input
0078 6E00      01369         MOVWF   r0x06
007A CFF3 F000 01370         MOVFF   PRODL, r0x07
007E 0E08      01371         MOVLW   0x08
0080 26E1      01372         ADDWF   FSR1L, F
               01373 ;       .line   177; src/clock.c        m = get_input(60, "Minutes:", mode);
0082 5000      01374         MOVF    r0x05, W
0084 6EE5      01375         MOVWF   POSTDEC1
0086 5000      01376         MOVF    r0x04, W
0088 6EE5      01377         MOVWF   POSTDEC1
008A 5000      01378         MOVF    r0x03, W
008C 6EE5      01379         MOVWF   POSTDEC1
008E 0E00      01380         MOVLW   UPPER(__str_7)
0090 6EE5      01381         MOVWF   POSTDEC1
0092 0E00      01382         MOVLW   HIGH(__str_7)
0094 6EE5      01383         MOVWF   POSTDEC1
0096 0E00      01384         MOVLW   LOW(__str_7)
0098 6EE5      01385         MOVWF   POSTDEC1
009A 0E00      01386         MOVLW   0x00
009C 6EE5      01387         MOVWF   POSTDEC1
009E 0E3C      01388         MOVLW   0x3c
00A0 6EE5      01389         MOVWF   POSTDEC1
00A2 EC00 F000 01390         CALL    _get_input
00A6 6E00      01391         MOVWF   r0x08
00A8 CFF3 F000 01392         MOVFF   PRODL, r0x09
00AC 0E08      01393         MOVLW   0x08
00AE 26E1      01394         ADDWF   FSR1L, F
               01395 ;       .line   178; src/clock.c        s = get_input(60, "Seconds:", mode);
00B0 5000      01396         MOVF    r0x05, W
00B2 6EE5      01397         MOVWF   POSTDEC1
00B4 5000      01398         MOVF    r0x04, W
00B6 6EE5      01399         MOVWF   POSTDEC1
00B8 5000      01400         MOVF    r0x03, W
00BA 6EE5      01401         MOVWF   POSTDEC1
00BC 0E00      01402         MOVLW   UPPER(__str_8)
00BE 6EE5      01403         MOVWF   POSTDEC1
00C0 0E00      01404         MOVLW   HIGH(__str_8)
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C2 6EE5      01405         MOVWF   POSTDEC1
00C4 0E00      01406         MOVLW   LOW(__str_8)
00C6 6EE5      01407         MOVWF   POSTDEC1
00C8 0E00      01408         MOVLW   0x00
00CA 6EE5      01409         MOVWF   POSTDEC1
00CC 0E3C      01410         MOVLW   0x3c
00CE 6EE5      01411         MOVWF   POSTDEC1
00D0 EC00 F000 01412         CALL    _get_input
00D4 6E00      01413         MOVWF   r0x03
00D6 CFF3 F000 01414         MOVFF   PRODL, r0x04
00DA 0E08      01415         MOVLW   0x08
00DC 26E1      01416         ADDWF   FSR1L, F
               01417 ;       .line   179; src/clock.c        time_set(t,h,m,s);
00DE 5000      01418         MOVF    r0x04, W
00E0 6EE5      01419         MOVWF   POSTDEC1
00E2 5000      01420         MOVF    r0x03, W
00E4 6EE5      01421         MOVWF   POSTDEC1
00E6 5000      01422         MOVF    r0x09, W
00E8 6EE5      01423         MOVWF   POSTDEC1
00EA 5000      01424         MOVF    r0x08, W
00EC 6EE5      01425         MOVWF   POSTDEC1
00EE 5000      01426         MOVF    r0x07, W
00F0 6EE5      01427         MOVWF   POSTDEC1
00F2 5000      01428         MOVF    r0x06, W
00F4 6EE5      01429         MOVWF   POSTDEC1
00F6 5000      01430         MOVF    r0x02, W
00F8 6EE5      01431         MOVWF   POSTDEC1
00FA 5000      01432         MOVF    r0x01, W
00FC 6EE5      01433         MOVWF   POSTDEC1
00FE 5000      01434         MOVF    r0x00, W
0100 6EE5      01435         MOVWF   POSTDEC1
0102 EC00 F000 01436         CALL    _time_set
0106 0E09      01437         MOVLW   0x09
0108 26E1      01438         ADDWF   FSR1L, F
010A CFE4 F000 01439         MOVFF   PREINC1, r0x09
010E CFE4 F000 01440         MOVFF   PREINC1, r0x08
0112 CFE4 F000 01441         MOVFF   PREINC1, r0x07
0116 CFE4 F000 01442         MOVFF   PREINC1, r0x06
011A CFE4 F000 01443         MOVFF   PREINC1, r0x05
011E CFE4 F000 01444         MOVFF   PREINC1, r0x04
0122 CFE4 F000 01445         MOVFF   PREINC1, r0x03
0126 CFE4 F000 01446         MOVFF   PREINC1, r0x02
012A CFE4 F000 01447         MOVFF   PREINC1, r0x01
012E CFE4 F000 01448         MOVFF   PREINC1, r0x00
0132 CFE4 FFD9 01449         MOVFF   PREINC1, FSR2L
0136 0012      01450         RETURN  
               01451 
               01452 ; ; Starting pCode block
               01453 S_clock__display_config_mode    code
0000 01454 _display_config_mode:
               01455 ;       .line   169; src/clock.c        void display_config_mode(char *choice_string){
0000 CFD9 FFE5 01456         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01457         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01458         MOVFF   r0x00, POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
000C C000 FFE5 01459         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01460         MOVFF   r0x02, POSTDEC1
0014 0E02      01461         MOVLW   0x02
0016 CFDB F000 01462         MOVFF   PLUSW2, r0x00
001A 0E03      01463         MOVLW   0x03
001C CFDB F000 01464         MOVFF   PLUSW2, r0x01
0020 0E04      01465         MOVLW   0x04
0022 CFDB F000 01466         MOVFF   PLUSW2, r0x02
               01467 ;       .line   170; src/clock.c        display_string(START_FIRST_LINE, CM_STRING);
0026 0E00      01468         MOVLW   UPPER(__str_5)
0028 6EE5      01469         MOVWF   POSTDEC1
002A 0E00      01470         MOVLW   HIGH(__str_5)
002C 6EE5      01471         MOVWF   POSTDEC1
002E 0E00      01472         MOVLW   LOW(__str_5)
0030 6EE5      01473         MOVWF   POSTDEC1
0032 0E00      01474         MOVLW   0x00
0034 6EE5      01475         MOVWF   POSTDEC1
0036 EC00 F000 01476         CALL    _display_string
003A 0E04      01477         MOVLW   0x04
003C 26E1      01478         ADDWF   FSR1L, F
               01479 ;       .line   171; src/clock.c        display_string(START_SECOND_LINE, choice_string);
003E 5000      01480         MOVF    r0x02, W
0040 6EE5      01481         MOVWF   POSTDEC1
0042 5000      01482         MOVF    r0x01, W
0044 6EE5      01483         MOVWF   POSTDEC1
0046 5000      01484         MOVF    r0x00, W
0048 6EE5      01485         MOVWF   POSTDEC1
004A 0E10      01486         MOVLW   0x10
004C 6EE5      01487         MOVWF   POSTDEC1
004E EC00 F000 01488         CALL    _display_string
0052 0E04      01489         MOVLW   0x04
0054 26E1      01490         ADDWF   FSR1L, F
0056 CFE4 F000 01491         MOVFF   PREINC1, r0x02
005A CFE4 F000 01492         MOVFF   PREINC1, r0x01
005E CFE4 F000 01493         MOVFF   PREINC1, r0x00
0062 CFE4 FFD9 01494         MOVFF   PREINC1, FSR2L
0066 0012      01495         RETURN  
               01496 
               01497 ; ; Starting pCode block
               01498 S_clock__init_config    code
0000 01499 _init_config:
               01500 ;       .line   111; src/clock.c        void init_config(void){
0000 CFD9 FFE5 01501         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01502         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01503         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01504         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01505         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01506         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01507         MOVFF   r0x04, POSTDEC1
               01508 ;       .line   113; src/clock.c        int choice = CONFIG_MODE_ALARM;
001C 6A00      01509         CLRF    r0x00
001E 6A00      01510         CLRF    r0x01
               01511 ;       .line   115; src/clock.c        config_mode_on = 1;
0020 0E01      01512         MOVLW   0x01
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0022 0000      01513         BANKSEL _config_mode_on
0024 6F00      01514         MOVWF   _config_mode_on, B
0026 0000      01515         BANKSEL (_config_mode_on + 1)
0028 6B00      01516         CLRF    (_config_mode_on + 1), B
002A 0000      01517         BANKSEL (_init_config_choice_string_1_1 + 2)
               01518 ;       .line   116; src/clock.c        display_config_mode(choice_string);
002C 5100      01519         MOVF    (_init_config_choice_string_1_1 + 2), W, B
002E 6EE5      01520         MOVWF   POSTDEC1
0030 0000      01521         BANKSEL (_init_config_choice_string_1_1 + 1)
0032 5100      01522         MOVF    (_init_config_choice_string_1_1 + 1), W, B
0034 6EE5      01523         MOVWF   POSTDEC1
0036 0000      01524         BANKSEL _init_config_choice_string_1_1
0038 5100      01525         MOVF    _init_config_choice_string_1_1, W, B
003A 6EE5      01526         MOVWF   POSTDEC1
003C EC00 F000 01527         CALL    _display_config_mode
0040 0E03      01528         MOVLW   0x03
0042 26E1      01529         ADDWF   FSR1L, F
0044 01530 _00143_DS_:
               01531 ;       .line   118; src/clock.c        if(read_and_clear(&but2_pressed)){
0044 0E00      01532         MOVLW   HIGH(_but2_pressed)
0046 6E00      01533         MOVWF   r0x03
0048 0E00      01534         MOVLW   LOW(_but2_pressed)
004A 6E00      01535         MOVWF   r0x02
004C 0E80      01536         MOVLW   0x80
004E 6E00      01537         MOVWF   r0x04
0050 5000      01538         MOVF    r0x04, W
0052 6EE5      01539         MOVWF   POSTDEC1
0054 5000      01540         MOVF    r0x03, W
0056 6EE5      01541         MOVWF   POSTDEC1
0058 5000      01542         MOVF    r0x02, W
005A 6EE5      01543         MOVWF   POSTDEC1
005C EC00 F000 01544         CALL    _read_and_clear
0060 6E00      01545         MOVWF   r0x02
0062 CFF3 F000 01546         MOVFF   PRODL, r0x03
0066 0E03      01547         MOVLW   0x03
0068 26E1      01548         ADDWF   FSR1L, F
006A 5000      01549         MOVF    r0x02, W
006C 1000      01550         IORWF   r0x03, W
006E B4D8      01551         BTFSC   STATUS, 2
0070 D000      01552         BRA     _00135_DS_
               01553 ;       .line   120; src/clock.c        switch(choice){
0072 5000      01554         MOVF    r0x00, W
0074 E100      01555         BNZ     _00155_DS_
0076 5000      01556         MOVF    r0x01, W
0078 E000      01557         BZ      _00130_DS_
007A 01558 _00155_DS_:
007A 5000      01559         MOVF    r0x00, W
007C 0A01      01560         XORLW   0x01
007E E100      01561         BNZ     _00157_DS_
0080 5000      01562         MOVF    r0x01, W
0082 E000      01563         BZ      _00131_DS_
0084 01564 _00157_DS_:
0084 D000      01565         BRA     _00132_DS_
0086 01566 _00130_DS_:
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01567 ;       .line   123; src/clock.c        LCDErase();
0086 EC00 F000 01568         CALL    _LCDErase
               01569 ;       .line   124; src/clock.c        init_time(_alarm, SM_ALARM_STRING);                     
008A 0E00      01570         MOVLW   UPPER(__str_1)
008C 6EE5      01571         MOVWF   POSTDEC1
008E 0E00      01572         MOVLW   HIGH(__str_1)
0090 6EE5      01573         MOVWF   POSTDEC1
0092 0E00      01574         MOVLW   LOW(__str_1)
0094 6EE5      01575         MOVWF   POSTDEC1
0096 0000      01576         BANKSEL (__alarm + 2)
0098 5100      01577         MOVF    (__alarm + 2), W, B
009A 6EE5      01578         MOVWF   POSTDEC1
009C 0000      01579         BANKSEL (__alarm + 1)
009E 5100      01580         MOVF    (__alarm + 1), W, B
00A0 6EE5      01581         MOVWF   POSTDEC1
00A2 0000      01582         BANKSEL __alarm
00A4 5100      01583         MOVF    __alarm, W, B
00A6 6EE5      01584         MOVWF   POSTDEC1
00A8 EC00 F000 01585         CALL    _init_time
00AC 0E06      01586         MOVLW   0x06
00AE 26E1      01587         ADDWF   FSR1L, F
00B0 0000      01588         BANKSEL (_init_config_choice_string_1_1 + 2)
               01589 ;       .line   125; src/clock.c        display_config_mode(choice_string);
00B2 5100      01590         MOVF    (_init_config_choice_string_1_1 + 2), W, B
00B4 6EE5      01591         MOVWF   POSTDEC1
00B6 0000      01592         BANKSEL (_init_config_choice_string_1_1 + 1)
00B8 5100      01593         MOVF    (_init_config_choice_string_1_1 + 1), W, B
00BA 6EE5      01594         MOVWF   POSTDEC1
00BC 0000      01595         BANKSEL _init_config_choice_string_1_1
00BE 5100      01596         MOVF    _init_config_choice_string_1_1, W, B
00C0 6EE5      01597         MOVWF   POSTDEC1
00C2 EC00 F000 01598         CALL    _display_config_mode
00C6 0E03      01599         MOVLW   0x03
00C8 26E1      01600         ADDWF   FSR1L, F
               01601 ;       .line   126; src/clock.c        break;
00CA D000      01602         BRA     _00135_DS_
00CC 01603 _00131_DS_:
               01604 ;       .line   129; src/clock.c        LCDErase();
00CC EC00 F000 01605         CALL    _LCDErase
               01606 ;       .line   130; src/clock.c        init_time(_time, SM_CLOCK_STRING);
00D0 0E00      01607         MOVLW   UPPER(__str_2)
00D2 6EE5      01608         MOVWF   POSTDEC1
00D4 0E00      01609         MOVLW   HIGH(__str_2)
00D6 6EE5      01610         MOVWF   POSTDEC1
00D8 0E00      01611         MOVLW   LOW(__str_2)
00DA 6EE5      01612         MOVWF   POSTDEC1
00DC 0000      01613         BANKSEL (__time + 2)
00DE 5100      01614         MOVF    (__time + 2), W, B
00E0 6EE5      01615         MOVWF   POSTDEC1
00E2 0000      01616         BANKSEL (__time + 1)
00E4 5100      01617         MOVF    (__time + 1), W, B
00E6 6EE5      01618         MOVWF   POSTDEC1
00E8 0000      01619         BANKSEL __time
00EA 5100      01620         MOVF    __time, W, B
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00EC 6EE5      01621         MOVWF   POSTDEC1
00EE EC00 F000 01622         CALL    _init_time
00F2 0E06      01623         MOVLW   0x06
00F4 26E1      01624         ADDWF   FSR1L, F
               01625 ;       .line   131; src/clock.c        T0CONbits.TMR0ON = 1;                   
00F6 8E00      01626         BSF     _T0CONbits, 7
00F8 0000      01627         BANKSEL (_init_config_choice_string_1_1 + 2)
               01628 ;       .line   132; src/clock.c        display_config_mode(choice_string);
00FA 5100      01629         MOVF    (_init_config_choice_string_1_1 + 2), W, B
00FC 6EE5      01630         MOVWF   POSTDEC1
00FE 0000      01631         BANKSEL (_init_config_choice_string_1_1 + 1)
0100 5100      01632         MOVF    (_init_config_choice_string_1_1 + 1), W, B
0102 6EE5      01633         MOVWF   POSTDEC1
0104 0000      01634         BANKSEL _init_config_choice_string_1_1
0106 5100      01635         MOVF    _init_config_choice_string_1_1, W, B
0108 6EE5      01636         MOVWF   POSTDEC1
010A EC00 F000 01637         CALL    _display_config_mode
010E 0E03      01638         MOVLW   0x03
0110 26E1      01639         ADDWF   FSR1L, F
               01640 ;       .line   133; src/clock.c        break;
0112 D000      01641         BRA     _00135_DS_
0114 01642 _00132_DS_:
               01643 ;       .line   135; src/clock.c        LCDErase();
0114 EC00 F000 01644         CALL    _LCDErase
0118 0000      01645         BANKSEL _config_mode_on
               01646 ;       .line   136; src/clock.c        config_mode_on = 0;
011A 6B00      01647         CLRF    _config_mode_on, B
011C 0000      01648         BANKSEL (_config_mode_on + 1)
011E 6B00      01649         CLRF    (_config_mode_on + 1), B
               01650 ;       .line   137; src/clock.c        return;
0120 D000      01651         BRA     _00145_DS_
0122 01652 _00135_DS_:
               01653 ;       .line   140; src/clock.c        if(read_and_clear(&but1_pressed)){ 
0122 0E00      01654         MOVLW   HIGH(_but1_pressed)
0124 6E00      01655         MOVWF   r0x03
0126 0E00      01656         MOVLW   LOW(_but1_pressed)
0128 6E00      01657         MOVWF   r0x02
012A 0E80      01658         MOVLW   0x80
012C 6E00      01659         MOVWF   r0x04
012E 5000      01660         MOVF    r0x04, W
0130 6EE5      01661         MOVWF   POSTDEC1
0132 5000      01662         MOVF    r0x03, W
0134 6EE5      01663         MOVWF   POSTDEC1
0136 5000      01664         MOVF    r0x02, W
0138 6EE5      01665         MOVWF   POSTDEC1
013A EC00 F000 01666         CALL    _read_and_clear
013E 6E00      01667         MOVWF   r0x02
0140 CFF3 F000 01668         MOVFF   PRODL, r0x03
0144 0E03      01669         MOVLW   0x03
0146 26E1      01670         ADDWF   FSR1L, F
0148 5000      01671         MOVF    r0x02, W
014A 1000      01672         IORWF   r0x03, W
014C B4D8      01673         BTFSC   STATUS, 2
014E D000      01674         BRA     _00143_DS_
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01675 ;       .line   142; src/clock.c        switch(choice){
0150 5000      01676         MOVF    r0x01, W
0152 0F80      01677         ADDLW   0x80
0154 0F81      01678         ADDLW   0x81
0156 E100      01679         BNZ     _00158_DS_
0158 0EFF      01680         MOVLW   0xff
015A 5C00      01681         SUBWF   r0x00, W
015C 01682 _00158_DS_:
015C A0D8      01683         BTFSS   STATUS, 0
015E D000      01684         BRA     _00143_DS_
0160 5000      01685         MOVF    r0x01, W
0162 0F80      01686         ADDLW   0x80
0164 0F80      01687         ADDLW   0x80
0166 E100      01688         BNZ     _00159_DS_
0168 0E02      01689         MOVLW   0x02
016A 5C00      01690         SUBWF   r0x00, W
016C 01691 _00159_DS_:
016C B0D8      01692         BTFSC   STATUS, 0
016E D000      01693         BRA     _00143_DS_
0170 2800      01694         INCF    r0x00, W
0172 6E00      01695         MOVWF   r0x02
0174 C000 FFE5 01696         MOVFF   r0x05, POSTDEC1
0178 C000 FFE5 01697         MOVFF   r0x06, POSTDEC1
017C 6A00      01698         CLRF    r0x06
017E 3400      01699         RLCF    r0x02, W
0180 3600      01700         RLCF    r0x06, F
0182 34E8      01701         RLCF    WREG, W
0184 3600      01702         RLCF    r0x06, F
0186 0BFC      01703         ANDLW   0xfc
0188 6E00      01704         MOVWF   r0x05
018A 0E00      01705         MOVLW   UPPER(_00160_DS_)
018C 6EFB      01706         MOVWF   PCLATU
018E 0E00      01707         MOVLW   HIGH(_00160_DS_)
0190 6EFA      01708         MOVWF   PCLATH
0192 0E00      01709         MOVLW   LOW(_00160_DS_)
0194 2600      01710         ADDWF   r0x05, F
0196 5000      01711         MOVF    r0x06, W
0198 22FA      01712         ADDWFC  PCLATH, F
019A B0D8      01713         BTFSC   STATUS, 0
019C 2AFB      01714         INCF    PCLATU, F
019E 5000      01715         MOVF    r0x05, W
01A0 CFE4 F000 01716         MOVFF   PREINC1, r0x06
01A4 CFE4 F000 01717         MOVFF   PREINC1, r0x05
01A8 6EF9      01718         MOVWF   PCL
01AA 01719 _00160_DS_:
01AA EF00 F000 01720         GOTO    _00136_DS_
01AE EF00 F000 01721         GOTO    _00137_DS_
01B2 EF00 F000 01722         GOTO    _00138_DS_
01B6 01723 _00136_DS_:
               01724 ;       .line   145; src/clock.c        LCDErase();
01B6 EC00 F000 01725         CALL    _LCDErase
               01726 ;       .line   146; src/clock.c        choice = CONFIG_MODE_ALARM;
01BA 6A00      01727         CLRF    r0x00
01BC 6A00      01728         CLRF    r0x01
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01729 ;       .line   147; src/clock.c        choice_string = CM_ALARM_STRING;
01BE 0E00      01730         MOVLW   LOW(__str_0)
01C0 0000      01731         BANKSEL _init_config_choice_string_1_1
01C2 6F00      01732         MOVWF   _init_config_choice_string_1_1, B
01C4 0E00      01733         MOVLW   HIGH(__str_0)
01C6 0000      01734         BANKSEL (_init_config_choice_string_1_1 + 1)
01C8 6F00      01735         MOVWF   (_init_config_choice_string_1_1 + 1), B
01CA 0E00      01736         MOVLW   UPPER(__str_0)
01CC 0000      01737         BANKSEL (_init_config_choice_string_1_1 + 2)
01CE 6F00      01738         MOVWF   (_init_config_choice_string_1_1 + 2), B
01D0 0000      01739         BANKSEL (_init_config_choice_string_1_1 + 2)
               01740 ;       .line   148; src/clock.c        display_config_mode(choice_string);
01D2 5100      01741         MOVF    (_init_config_choice_string_1_1 + 2), W, B
01D4 6EE5      01742         MOVWF   POSTDEC1
01D6 0000      01743         BANKSEL (_init_config_choice_string_1_1 + 1)
01D8 5100      01744         MOVF    (_init_config_choice_string_1_1 + 1), W, B
01DA 6EE5      01745         MOVWF   POSTDEC1
01DC 0000      01746         BANKSEL _init_config_choice_string_1_1
01DE 5100      01747         MOVF    _init_config_choice_string_1_1, W, B
01E0 6EE5      01748         MOVWF   POSTDEC1
01E2 EC00 F000 01749         CALL    _display_config_mode
01E6 0E03      01750         MOVLW   0x03
01E8 26E1      01751         ADDWF   FSR1L, F
               01752 ;       .line   149; src/clock.c        break;
01EA D000      01753         BRA     _00143_DS_
01EC 01754 _00137_DS_:
               01755 ;       .line   152; src/clock.c        LCDErase();
01EC EC00 F000 01756         CALL    _LCDErase
               01757 ;       .line   153; src/clock.c        choice = CONFIG_MODE_CLOCK;
01F0 0E01      01758         MOVLW   0x01
01F2 6E00      01759         MOVWF   r0x00
01F4 6A00      01760         CLRF    r0x01
               01761 ;       .line   154; src/clock.c        choice_string = CM_CLOCK_STRING;
01F6 0E00      01762         MOVLW   LOW(__str_3)
01F8 0000      01763         BANKSEL _init_config_choice_string_1_1
01FA 6F00      01764         MOVWF   _init_config_choice_string_1_1, B
01FC 0E00      01765         MOVLW   HIGH(__str_3)
01FE 0000      01766         BANKSEL (_init_config_choice_string_1_1 + 1)
0200 6F00      01767         MOVWF   (_init_config_choice_string_1_1 + 1), B
0202 0E00      01768         MOVLW   UPPER(__str_3)
0204 0000      01769         BANKSEL (_init_config_choice_string_1_1 + 2)
0206 6F00      01770         MOVWF   (_init_config_choice_string_1_1 + 2), B
0208 0000      01771         BANKSEL (_init_config_choice_string_1_1 + 2)
               01772 ;       .line   155; src/clock.c        display_config_mode(choice_string);
020A 5100      01773         MOVF    (_init_config_choice_string_1_1 + 2), W, B
020C 6EE5      01774         MOVWF   POSTDEC1
020E 0000      01775         BANKSEL (_init_config_choice_string_1_1 + 1)
0210 5100      01776         MOVF    (_init_config_choice_string_1_1 + 1), W, B
0212 6EE5      01777         MOVWF   POSTDEC1
0214 0000      01778         BANKSEL _init_config_choice_string_1_1
0216 5100      01779         MOVF    _init_config_choice_string_1_1, W, B
0218 6EE5      01780         MOVWF   POSTDEC1
021A EC00 F000 01781         CALL    _display_config_mode
021E 0E03      01782         MOVLW   0x03
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0220 26E1      01783         ADDWF   FSR1L, F
               01784 ;       .line   156; src/clock.c        break;
0222 D000      01785         BRA     _00143_DS_
0224 01786 _00138_DS_:
               01787 ;       .line   159; src/clock.c        LCDErase();
0224 EC00 F000 01788         CALL    _LCDErase
               01789 ;       .line   160; src/clock.c        choice =CONFIG_MODE_QUIT;
0228 0EFF      01790         MOVLW   0xff
022A 6E00      01791         MOVWF   r0x00
022C 6E00      01792         MOVWF   r0x01
               01793 ;       .line   161; src/clock.c        choice_string = CM_QUIT_STRING;
022E 0E00      01794         MOVLW   LOW(__str_4)
0230 0000      01795         BANKSEL _init_config_choice_string_1_1
0232 6F00      01796         MOVWF   _init_config_choice_string_1_1, B
0234 0E00      01797         MOVLW   HIGH(__str_4)
0236 0000      01798         BANKSEL (_init_config_choice_string_1_1 + 1)
0238 6F00      01799         MOVWF   (_init_config_choice_string_1_1 + 1), B
023A 0E00      01800         MOVLW   UPPER(__str_4)
023C 0000      01801         BANKSEL (_init_config_choice_string_1_1 + 2)
023E 6F00      01802         MOVWF   (_init_config_choice_string_1_1 + 2), B
0240 0000      01803         BANKSEL (_init_config_choice_string_1_1 + 2)
               01804 ;       .line   162; src/clock.c        display_config_mode(choice_string);
0242 5100      01805         MOVF    (_init_config_choice_string_1_1 + 2), W, B
0244 6EE5      01806         MOVWF   POSTDEC1
0246 0000      01807         BANKSEL (_init_config_choice_string_1_1 + 1)
0248 5100      01808         MOVF    (_init_config_choice_string_1_1 + 1), W, B
024A 6EE5      01809         MOVWF   POSTDEC1
024C 0000      01810         BANKSEL _init_config_choice_string_1_1
024E 5100      01811         MOVF    _init_config_choice_string_1_1, W, B
0250 6EE5      01812         MOVWF   POSTDEC1
0252 EC00 F000 01813         CALL    _display_config_mode
0256 0E03      01814         MOVLW   0x03
0258 26E1      01815         ADDWF   FSR1L, F
               01816 ;       .line   164; src/clock.c        }
025A D000      01817         BRA     _00143_DS_
025C 01818 _00145_DS_:
025C CFE4 F000 01819         MOVFF   PREINC1, r0x04
0260 CFE4 F000 01820         MOVFF   PREINC1, r0x03
0264 CFE4 F000 01821         MOVFF   PREINC1, r0x02
0268 CFE4 F000 01822         MOVFF   PREINC1, r0x01
026C CFE4 F000 01823         MOVFF   PREINC1, r0x00
0270 CFE4 FFD9 01824         MOVFF   PREINC1, FSR2L
0274 0012      01825         RETURN  
               01826 
               01827 ; ; Starting pCode block
               01828 S_clock__toggle_alarm_led       code
0000 01829 _toggle_alarm_led:
               01830 ;       .line   106; src/clock.c        void toggle_alarm_led(void){
0000 CFD9 FFE5 01831         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01832         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01833         MOVFF   r0x00, POSTDEC1
               01834 ;       .line   107; src/clock.c        LED1_IO^=1;
000C 6A00      01835         CLRF    r0x00
000E B200      01836         BTFSC   _LATJbits, 1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0010 2A00      01837         INCF    r0x00, F
0012 0E01      01838         MOVLW   0x01
0014 1A00      01839         XORWF   r0x00, F
0016 5000      01840         MOVF    r0x00, W
0018 0B01      01841         ANDLW   0x01
001A 44E8      01842         RLNCF   WREG, W
001C 6EF4      01843         MOVWF   PRODH
001E 5000      01844         MOVF    _LATJbits, W
0020 0BFD      01845         ANDLW   0xfd
0022 10F4      01846         IORWF   PRODH, W
0024 6E00      01847         MOVWF   _LATJbits
               01848 ;       .line   108; src/clock.c        LED2_IO^=1;
0026 6A00      01849         CLRF    r0x00
0028 B400      01850         BTFSC   _LATJbits, 2
002A 2A00      01851         INCF    r0x00, F
002C 0E01      01852         MOVLW   0x01
002E 1A00      01853         XORWF   r0x00, F
0030 5000      01854         MOVF    r0x00, W
0032 0B01      01855         ANDLW   0x01
0034 44E8      01856         RLNCF   WREG, W
0036 44E8      01857         RLNCF   WREG, W
0038 6EF4      01858         MOVWF   PRODH
003A 5000      01859         MOVF    _LATJbits, W
003C 0BFB      01860         ANDLW   0xfb
003E 10F4      01861         IORWF   PRODH, W
0040 6E00      01862         MOVWF   _LATJbits
0042 CFE4 F000 01863         MOVFF   PREINC1, r0x00
0046 CFE4 FFD9 01864         MOVFF   PREINC1, FSR2L
004A 0012      01865         RETURN  
               01866 
               01867 ; ; Starting pCode block
               01868 S_clock__toggle_second_led      code
0000 01869 _toggle_second_led:
               01870 ;       .line   99; src/clock.c void toggle_second_led(void){
0000 CFD9 FFE5 01871         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01872         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01873         MOVFF   r0x00, POSTDEC1
               01874 ;       .line   100; src/clock.c        LED0_IO^=1;
000C 6A00      01875         CLRF    r0x00
000E B000      01876         BTFSC   _LATJbits, 0
0010 2A00      01877         INCF    r0x00, F
0012 0E01      01878         MOVLW   0x01
0014 1A00      01879         XORWF   r0x00, F
0016 5000      01880         MOVF    r0x00, W
0018 0B01      01881         ANDLW   0x01
001A 6EF4      01882         MOVWF   PRODH
001C 5000      01883         MOVF    _LATJbits, W
001E 0BFE      01884         ANDLW   0xfe
0020 10F4      01885         IORWF   PRODH, W
0022 6E00      01886         MOVWF   _LATJbits
0024 CFE4 F000 01887         MOVFF   PREINC1, r0x00
0028 CFE4 FFD9 01888         MOVFF   PREINC1, FSR2L
002C 0012      01889         RETURN  
               01890 
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01891 ; ; Starting pCode block
               01892 S_clock__update_display code
0000 01893 _update_display:
               01894 ;       .line   90; src/clock.c void update_display(void){
0000 CFD9 FFE5 01895         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01896         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01897         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01898         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01899         MOVFF   r0x02, POSTDEC1
               01900 ;       .line   92; src/clock.c time_print(_time, display_line);
0014 0E00      01901         MOVLW   HIGH(_update_display_display_line_1_1)
0016 6E00      01902         MOVWF   r0x01
0018 0E00      01903         MOVLW   LOW(_update_display_display_line_1_1)
001A 6E00      01904         MOVWF   r0x00
001C 0E80      01905         MOVLW   0x80
001E 6E00      01906         MOVWF   r0x02
0020 5000      01907         MOVF    r0x02, W
0022 6EE5      01908         MOVWF   POSTDEC1
0024 5000      01909         MOVF    r0x01, W
0026 6EE5      01910         MOVWF   POSTDEC1
0028 5000      01911         MOVF    r0x00, W
002A 6EE5      01912         MOVWF   POSTDEC1
002C 0000      01913         BANKSEL (__time + 2)
002E 5100      01914         MOVF    (__time + 2), W, B
0030 6EE5      01915         MOVWF   POSTDEC1
0032 0000      01916         BANKSEL (__time + 1)
0034 5100      01917         MOVF    (__time + 1), W, B
0036 6EE5      01918         MOVWF   POSTDEC1
0038 0000      01919         BANKSEL __time
003A 5100      01920         MOVF    __time, W, B
003C 6EE5      01921         MOVWF   POSTDEC1
003E EC00 F000 01922         CALL    _time_print
0042 0E06      01923         MOVLW   0x06
0044 26E1      01924         ADDWF   FSR1L, F
               01925 ;       .line   93; src/clock.c display_string(0, display_line);
0046 0E00      01926         MOVLW   HIGH(_update_display_display_line_1_1)
0048 6E00      01927         MOVWF   r0x01
004A 0E00      01928         MOVLW   LOW(_update_display_display_line_1_1)
004C 6E00      01929         MOVWF   r0x00
004E 0E80      01930         MOVLW   0x80
0050 6E00      01931         MOVWF   r0x02
0052 5000      01932         MOVF    r0x02, W
0054 6EE5      01933         MOVWF   POSTDEC1
0056 5000      01934         MOVF    r0x01, W
0058 6EE5      01935         MOVWF   POSTDEC1
005A 5000      01936         MOVF    r0x00, W
005C 6EE5      01937         MOVWF   POSTDEC1
005E 0E00      01938         MOVLW   0x00
0060 6EE5      01939         MOVWF   POSTDEC1
0062 EC00 F000 01940         CALL    _display_string
0066 0E04      01941         MOVLW   0x04
0068 26E1      01942         ADDWF   FSR1L, F
006A CFE4 F000 01943         MOVFF   PREINC1, r0x02
006E CFE4 F000 01944         MOVFF   PREINC1, r0x01
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0072 CFE4 F000 01945         MOVFF   PREINC1, r0x00
0076 CFE4 FFD9 01946         MOVFF   PREINC1, FSR2L
007A 0012      01947         RETURN  
               01948 
               01949 ; ; Starting pCode block
007C 01950 __str_0:
007C 6553 2074 01951         DB      0x53, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x3f, 0x00
     6C61 7261 
     3F6D 0000 
               01952 ; ; Starting pCode block
0088 01953 __str_1:
0088 6553 2074 01954         DB      0x53, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x3a, 0x00
     6C61 7261 
     3A6D 0000 
               01955 ; ; Starting pCode block
0094 01956 __str_2:
0094 6553 2074 01957         DB      0x53, 0x65, 0x74, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x3a, 0x00
     6C63 636F 
     3A6B 0000 
               01958 ; ; Starting pCode block
00A0 01959 __str_3:
00A0 6553 2074 01960         DB      0x53, 0x65, 0x74, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x3f, 0x00
     6C63 636F 
     3F6B 0000 
               01961 ; ; Starting pCode block
00AC 01962 __str_4:
00AC 7551 7469 01963         DB      0x51, 0x75, 0x69, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20
     6320 6E6F 
     6966 2067 
00B8 6F6D 6564 01964         DB      0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x00
     002E      
               01965 ; ; Starting pCode block
00BE 01966 __str_5:
00BE 6843 6F6F 01967         DB      0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x3a
     6573 6D20 
     646F 3A65 
00CA 0000      01968         DB      0x00
               01969 ; ; Starting pCode block
00CC 01970 __str_6:
00CC 6F48 7275 01971         DB      0x48, 0x6f, 0x75, 0x72, 0x73, 0x3a, 0x00
     3A73 0000 
               01972 ; ; Starting pCode block
00D4 01973 __str_7:
00D4 694D 756E 01974         DB      0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x3a, 0x00
     6574 3A73 
     0000      
               01975 ; ; Starting pCode block
00DE 01976 __str_8:
00DE 6553 6F63 01977         DB      0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x3a, 0x00
     646E 3A73 
     0000      
               01978 ; ; Starting pCode block
00E8 01979 __str_9:
00E8 3025 6432 01980         DB      0x25, 0x30, 0x32, 0x64, 0x00
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
     0000      
               01981 
               01982 
               01983 ; Statistics:
               01984 ; code size:     2926 (0x0b6e) bytes ( 2.23%)
               01985 ;                1463 (0x05b7) words
               01986 ; udata size:      41 (0x0029) bytes ( 1.07%)
               01987 ; access size:     13 (0x000d) bytes
               01988 
               01989 
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

BSR                               00000FE0
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00108_DS_                        0000000C
_00130_DS_                        00000086
_00131_DS_                        000000CC
_00132_DS_                        00000114
_00135_DS_                        00000122
_00136_DS_                        000001B6
_00137_DS_                        000001EC
_00138_DS_                        00000224
_00143_DS_                        00000044
_00145_DS_                        0000025C
_00155_DS_                        0000007A
_00157_DS_                        00000084
_00158_DS_                        0000015C
_00159_DS_                        0000016C
_00160_DS_                        000001AA
_00176_DS_                        00000064
_00177_DS_                        00000068
_00182_DS_                        000000D6
_00189_DS_                        00000138
_00191_DS_                        00000188
_00195_DS_                        000000C0
_00197_DS_                        000001BC
_00202_DS_                        00000090
_00206_DS_                        000000DE
_00210_DS_                        00000088
_00226_DS_                        00000056
_00227_DS_                        00000060
_00229_DS_                        00000068
_00231_DS_                        00000086
_00233_DS_                        00000106
_00237_DS_                        0000013E
_00244_DS_                        000000B4
_00245_DS_                        0000017C
_00248_DS_                        0000017E
_00262_DS_                        00000040
_00266_DS_                        00000094
_00267_DS_                        000000AC
_00268_DS_                        000000AE
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00269_DS_                        000000C2
_00270_DS_                        000000C4
_00271_DS_                        0000012C
_00272_DS_                        0000012E
_10277_DS_                        0000009E
_20278_DS_                        0000011A
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCON1                         00000000
_BAUDCON1bits                     00000000
_BAUDCON2                         00000000
_BAUDCON2bits                     00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTL1                         00000000
_BAUDCTL1bits                     00000000
_BAUDCTL2                         00000000
_BAUDCTL2bits                     00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCP3CON                          00000000
_CCP3CONbits                      00000000
_CCP4CON                          00000000
_CCP4CONbits                      00000000
_CCP5CON                          00000000
_CCP5CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CCPR3                            00000000
_CCPR3H                           00000000
_CCPR3L                           00000000
_CCPR4                            00000000
_CCPR4H                           00000000
_CCPR4L                           00000000
_CCPR5                            00000000
_CCPR5H                           00000000
_CCPR5L                           00000000
_CMCON                            00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_DDRA                             00000000
_DDRAbits                         00000000
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_DDRF                             00000000
_DDRFbits                         00000000
_DDRG                             00000000
_DDRGbits                         00000000
_DDRH                             00000000
_DDRHbits                         00000000
_DDRJ                             00000000
_DDRJbits                         00000000
_EBSTCON                          00000000
_EBSTCONbits                      00000000
_EBSTCS                           00000000
_EBSTCSH                          00000000
_EBSTCSL                          00000000
_EBSTSD                           00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_ECCP2AS                          00000000
_ECCP2ASbits                      00000000
_ECCP2CON                         00000000
_ECCP2CONbits                     00000000
_ECCP2DEL                         00000000
_ECCP2DELbits                     00000000
_ECCP3AS                          00000000
_ECCP3ASbits                      00000000
_ECCP3CON                         00000000
_ECCP3CONbits                     00000000
_ECCP3DEL                         00000000
_ECCP3DELbits                     00000000
_ECON1                            00000000
_ECON1bits                        00000000
_ECON2                            00000000
_ECON2bits                        00000000
_EDATA                            00000000
_EDATAbits                        00000000
_EDMACS                           00000000
_EDMACSH                          00000000
_EDMACSL                          00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EDMADST                          00000000
_EDMADSTH                         00000000
_EDMADSTL                         00000000
_EDMAND                           00000000
_EDMANDH                          00000000
_EDMANDL                          00000000
_EDMAST                           00000000
_EDMASTH                          00000000
_EDMASTL                          00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EFLOCON                          00000000
_EFLOCONbits                      00000000
_EHT0                             00000000
_EHT1                             00000000
_EHT2                             00000000
_EHT3                             00000000
_EHT4                             00000000
_EHT5                             00000000
_EHT6                             00000000
_EHT7                             00000000
_EIE                              00000000
_EIEbits                          00000000
_EIR                              00000000
_EIRbits                          00000000
_EPAUS                            00000000
_EPAUSH                           00000000
_EPAUSL                           00000000
_EPKTCNT                          00000000
_EPMCS                            00000000
_EPMCSH                           00000000
_EPMCSL                           00000000
_EPMM0                            00000000
_EPMM1                            00000000
_EPMM2                            00000000
_EPMM3                            00000000
_EPMM4                            00000000
_EPMM5                            00000000
_EPMM6                            00000000
_EPMM7                            00000000
_EPMO                             00000000
_EPMOH                            00000000
_EPMOL                            00000000
_ERDPT                            00000000
_ERDPTH                           00000000
_ERDPTL                           00000000
_ERXFCON                          00000000
_ERXFCONbits                      00000000
_ERXND                            00000000
_ERXNDH                           00000000
_ERXNDL                           00000000
_ERXRDPT                          00000000
_ERXRDPTH                         00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_ERXRDPTL                         00000000
_ERXST                            00000000
_ERXSTH                           00000000
_ERXSTL                           00000000
_ERXWRPT                          00000000
_ERXWRPTH                         00000000
_ERXWRPTL                         00000000
_ESTAT                            00000000
_ESTATbits                        00000000
_ETXND                            00000000
_ETXNDH                           00000000
_ETXNDL                           00000000
_ETXST                            00000000
_ETXSTH                           00000000
_ETXSTL                           00000000
_EWOLIE                           00000000
_EWOLIEbits                       00000000
_EWOLIR                           00000000
_EWOLIRbits                       00000000
_EWRPT                            00000000
_EWRPTH                           00000000
_EWRPTL                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_IPR3                             00000000
_IPR3bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LATF                             00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_LATFbits                         00000000
_LATG                             00000000
_LATGbits                         00000000
_LATH                             00000000
_LATHbits                         00000000
_LATJ                             00000000
_LATJbits                         00000000
_LCDErase                         00000000
_LCDInit                          00000000
_LCDText                          00000000
_LCDUpdate                        00000000
_MAADR1                           00000000
_MAADR2                           00000000
_MAADR3                           00000000
_MAADR4                           00000000
_MAADR5                           00000000
_MAADR6                           00000000
_MABBIPG                          00000000
_MACLCON1                         00000000
_MACLCON1bits                     00000000
_MACLCON2                         00000000
_MACLCON2bits                     00000000
_MACON1                           00000000
_MACON1bits                       00000000
_MACON2                           00000000
_MACON2bits                       00000000
_MACON3                           00000000
_MACON3bits                       00000000
_MACON4                           00000000
_MACON4bits                       00000000
_MAIPG                            00000000
_MAIPGH                           00000000
_MAIPGL                           00000000
_MAMXFL                           00000000
_MAMXFLH                          00000000
_MAMXFLL                          00000000
_MEMCON                           00000000
_MEMCONbits                       00000000
_MICMD                            00000000
_MICMDbits                        00000000
_MICON                            00000000
_MICONbits                        00000000
_MIRD                             00000000
_MIRDH                            00000000
_MIRDL                            00000000
_MIREGADR                         00000000
_MISTAT                           00000000
_MISTATbits                       00000000
_MIWR                             00000000
_MIWRH                            00000000
_MIWRL                            00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_OSCTUNEbits                      00000000
_PC                               00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIE3                             00000000
_PIE3bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PIR3                             00000000
_PIR3bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_PORTF                            00000000
_PORTFbits                        00000000
_PORTG                            00000000
_PORTGbits                        00000000
_PORTH                            00000000
_PORTHbits                        00000000
_PORTJ                            00000000
_PORTJbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PR4                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_PSPCON                           00000000
_PSPCONbits                       00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCREG1                           00000000
_RCREG2                           00000000
_RCSTA                            00000000
_RCSTA1                           00000000
_RCSTA1bits                       00000000
_RCSTA2                           00000000
_RCSTA2bits                       00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRG1                           00000000
_SPBRG2                           00000000
_SPBRGH                           00000000
_SPBRGH1                          00000000
_SPBRGH2                          00000000
_SSP1ADD                          00000000
_SSP1BUF                          00000000
_SSP1CON1                         00000000
_SSP1CON1bits                     00000000
_SSP1CON2                         00000000
_SSP1CON2bits                     00000000
_SSP1STAT                         00000000
_SSP1STATbits                     00000000
_SSP2ADD                          00000000
_SSP2BUF                          00000000
_SSP2CON1                         00000000
_SSP2CON1bits                     00000000
_SSP2CON2                         00000000
_SSP2CON2bits                     00000000
_SSP2STAT                         00000000
_SSP2STATbits                     00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_T4CON                            00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_T4CONbits                        00000000
_TABLAT                           00000000
_TBLPTR                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TMR4                             00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TRISF                            00000000
_TRISFbits                        00000000
_TRISG                            00000000
_TRISGbits                        00000000
_TRISH                            00000000
_TRISHbits                        00000000
_TRISJ                            00000000
_TRISJbits                        00000000
_TXREG                            00000000
_TXREG1                           00000000
_TXREG2                           00000000
_TXSTA                            00000000
_TXSTA1                           00000000
_TXSTA1bits                       00000000
_TXSTA2                           00000000
_TXSTA2bits                       00000000
_TXSTAbits                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F97J60                        00000001
__alarm                           00000000
__gptrget1                        00000000
__gptrget2                        00000000
__gptrput1                        00000000
__gptrput2                        00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
__modsint                         00000000
__str_0                           0000007C
__str_1                           00000088
__str_2                           00000094
__str_3                           000000A0
__str_4                           000000AC
__str_5                           000000BE
__str_6                           000000CC
__str_7                           000000D4
__str_8                           000000DE
__str_9                           000000E8
__time                            00000000
_add_second                       00000000
_alarm_counter                    00000002
_alarm_going_off                  00000000
_but1_pressed                     00000006
_but2_pressed                     00000008
_config_called                    0000000E
_config_mode_clock                0000000C
_config_mode_on                   0000000A
_display_config_mode              00000000
_display_string                   00000000
_get_input                        00000000
_highPriorityInterruptHandler     00000000
_init                             00000000
_init_config                      00000000
_init_config_choice_string_1_1    00000010
_init_time                        00000000
_main                             00000000
_overflow_counter                 00000004
_read_and_clear                   00000000
_sprintf                          00000000
_stdin                            00000000
_stdout                           00000000
_strlen                           00000000
_time_create                      00000000
_time_equals                      00000000
_time_print                       00000000
_time_set                         00000000
_to_double_digits                 00000000
_to_double_digits_buffer_1_1      00000000
_toggle_alarm_led                 00000000
_toggle_second_led                00000000
_update_display                   00000000
_update_display_display_line_1_1  00000000
ivec_0x1_highPriorityInterruptHandler  00000008
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:15:36         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

