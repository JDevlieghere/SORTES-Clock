gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.9.4 #5595 (Nov 14 2013) (UNIX)
               00004 ; This file was generated Sat Nov 16 14:00:42 2013
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f97j60
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _config_mode_clock
               00016         global _update_display
               00017         global _toggle_led
               00018         global _init_config
               00019         global _display_config_mode
               00020         global _init_time
               00021         global _read_and_clear
               00022         global _get_input
               00023         global _display_string
               00024         global _to_double_digits
               00025         global _init
               00026         global __time
               00027         global __alarm
               00028         global _display_line
               00029         global _alarm_going_off
               00030         global _alarm_counter
               00031         global _overflow_counter
               00032         global _but1_pressed
               00033         global _but2_pressed
               00034         global _config_mode_on
               00035         global _config_called
               00036         global _main
               00037         global _alarm_led
               00038         global _highPriorityInterruptHandler
               00039 
               00040 ;--------------------------------------------------------
               00041 ; extern variables in this module
               00042 ;--------------------------------------------------------
               00043         extern __gptrget2
               00044         extern __gptrput2
               00045         extern __gptrget1
               00046         extern __gptrput1
               00047         extern _stdin
               00048         extern _stdout
               00049         extern _EBSTCONbits
               00050         extern _MISTATbits
               00051         extern _EFLOCONbits
               00052         extern _MACON1bits
               00053         extern _MACON2bits
               00054         extern _MACON3bits
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         extern _MACON4bits
               00056         extern _MACLCON1bits
               00057         extern _MACLCON2bits
               00058         extern _MICONbits
               00059         extern _MICMDbits
               00060         extern _EWOLIEbits
               00061         extern _EWOLIRbits
               00062         extern _ERXFCONbits
               00063         extern _EIEbits
               00064         extern _ESTATbits
               00065         extern _ECON2bits
               00066         extern _EIRbits
               00067         extern _EDATAbits
               00068         extern _SSP2CON2bits
               00069         extern _SSP2CON1bits
               00070         extern _SSP2STATbits
               00071         extern _ECCP2DELbits
               00072         extern _ECCP2ASbits
               00073         extern _ECCP3DELbits
               00074         extern _ECCP3ASbits
               00075         extern _RCSTA2bits
               00076         extern _TXSTA2bits
               00077         extern _CCP5CONbits
               00078         extern _CCP4CONbits
               00079         extern _T4CONbits
               00080         extern _ECCP1DELbits
               00081         extern _BAUDCON2bits
               00082         extern _BAUDCTL2bits
               00083         extern _BAUDCONbits
               00084         extern _BAUDCON1bits
               00085         extern _BAUDCTLbits
               00086         extern _BAUDCTL1bits
               00087         extern _PORTAbits
               00088         extern _PORTBbits
               00089         extern _PORTCbits
               00090         extern _PORTDbits
               00091         extern _PORTEbits
               00092         extern _PORTFbits
               00093         extern _PORTGbits
               00094         extern _PORTHbits
               00095         extern _PORTJbits
               00096         extern _LATAbits
               00097         extern _LATBbits
               00098         extern _LATCbits
               00099         extern _LATDbits
               00100         extern _LATEbits
               00101         extern _LATFbits
               00102         extern _LATGbits
               00103         extern _LATHbits
               00104         extern _LATJbits
               00105         extern _DDRAbits
               00106         extern _TRISAbits
               00107         extern _DDRBbits
               00108         extern _TRISBbits
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _DDRCbits
               00110         extern _TRISCbits
               00111         extern _DDRDbits
               00112         extern _TRISDbits
               00113         extern _DDREbits
               00114         extern _TRISEbits
               00115         extern _DDRFbits
               00116         extern _TRISFbits
               00117         extern _DDRGbits
               00118         extern _TRISGbits
               00119         extern _DDRHbits
               00120         extern _TRISHbits
               00121         extern _DDRJbits
               00122         extern _TRISJbits
               00123         extern _OSCTUNEbits
               00124         extern _MEMCONbits
               00125         extern _PIE1bits
               00126         extern _PIR1bits
               00127         extern _IPR1bits
               00128         extern _PIE2bits
               00129         extern _PIR2bits
               00130         extern _IPR2bits
               00131         extern _PIE3bits
               00132         extern _PIR3bits
               00133         extern _IPR3bits
               00134         extern _EECON1bits
               00135         extern _RCSTAbits
               00136         extern _RCSTA1bits
               00137         extern _TXSTAbits
               00138         extern _TXSTA1bits
               00139         extern _PSPCONbits
               00140         extern _T3CONbits
               00141         extern _CMCONbits
               00142         extern _CVRCONbits
               00143         extern _ECCP1ASbits
               00144         extern _CCP3CONbits
               00145         extern _ECCP3CONbits
               00146         extern _CCP2CONbits
               00147         extern _ECCP2CONbits
               00148         extern _CCP1CONbits
               00149         extern _ECCP1CONbits
               00150         extern _ADCON2bits
               00151         extern _ADCON1bits
               00152         extern _ADCON0bits
               00153         extern _SSP1CON2bits
               00154         extern _SSPCON2bits
               00155         extern _SSP1CON1bits
               00156         extern _SSPCON1bits
               00157         extern _SSP1STATbits
               00158         extern _SSPSTATbits
               00159         extern _T2CONbits
               00160         extern _T1CONbits
               00161         extern _RCONbits
               00162         extern _WDTCONbits
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _ECON1bits
               00164         extern _OSCCONbits
               00165         extern _T0CONbits
               00166         extern _STATUSbits
               00167         extern _INTCON3bits
               00168         extern _INTCON2bits
               00169         extern _INTCONbits
               00170         extern _STKPTRbits
               00171         extern _LCDText
               00172         extern _MAADR5
               00173         extern _MAADR6
               00174         extern _MAADR3
               00175         extern _MAADR4
               00176         extern _MAADR1
               00177         extern _MAADR2
               00178         extern _EBSTSD
               00179         extern _EBSTCON
               00180         extern _EBSTCS
               00181         extern _EBSTCSL
               00182         extern _EBSTCSH
               00183         extern _MISTAT
               00184         extern _EFLOCON
               00185         extern _EPAUS
               00186         extern _EPAUSL
               00187         extern _EPAUSH
               00188         extern _MACON1
               00189         extern _MACON2
               00190         extern _MACON3
               00191         extern _MACON4
               00192         extern _MABBIPG
               00193         extern _MAIPG
               00194         extern _MAIPGL
               00195         extern _MAIPGH
               00196         extern _MACLCON1
               00197         extern _MACLCON2
               00198         extern _MAMXFL
               00199         extern _MAMXFLL
               00200         extern _MAMXFLH
               00201         extern _MICON
               00202         extern _MICMD
               00203         extern _MIREGADR
               00204         extern _MIWR
               00205         extern _MIWRL
               00206         extern _MIWRH
               00207         extern _MIRD
               00208         extern _MIRDL
               00209         extern _MIRDH
               00210         extern _EHT0
               00211         extern _EHT1
               00212         extern _EHT2
               00213         extern _EHT3
               00214         extern _EHT4
               00215         extern _EHT5
               00216         extern _EHT6
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _EHT7
               00218         extern _EPMM0
               00219         extern _EPMM1
               00220         extern _EPMM2
               00221         extern _EPMM3
               00222         extern _EPMM4
               00223         extern _EPMM5
               00224         extern _EPMM6
               00225         extern _EPMM7
               00226         extern _EPMCS
               00227         extern _EPMCSL
               00228         extern _EPMCSH
               00229         extern _EPMO
               00230         extern _EPMOL
               00231         extern _EPMOH
               00232         extern _EWOLIE
               00233         extern _EWOLIR
               00234         extern _ERXFCON
               00235         extern _EPKTCNT
               00236         extern _EWRPT
               00237         extern _EWRPTL
               00238         extern _EWRPTH
               00239         extern _ETXST
               00240         extern _ETXSTL
               00241         extern _ETXSTH
               00242         extern _ETXND
               00243         extern _ETXNDL
               00244         extern _ETXNDH
               00245         extern _ERXST
               00246         extern _ERXSTL
               00247         extern _ERXSTH
               00248         extern _ERXND
               00249         extern _ERXNDL
               00250         extern _ERXNDH
               00251         extern _ERXRDPT
               00252         extern _ERXRDPTL
               00253         extern _ERXRDPTH
               00254         extern _ERXWRPT
               00255         extern _ERXWRPTL
               00256         extern _ERXWRPTH
               00257         extern _EDMAST
               00258         extern _EDMASTL
               00259         extern _EDMASTH
               00260         extern _EDMAND
               00261         extern _EDMANDL
               00262         extern _EDMANDH
               00263         extern _EDMADST
               00264         extern _EDMADSTL
               00265         extern _EDMADSTH
               00266         extern _EDMACS
               00267         extern _EDMACSL
               00268         extern _EDMACSH
               00269         extern _EIE
               00270         extern _ESTAT
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271         extern _ECON2
               00272         extern _EIR
               00273         extern _EDATA
               00274         extern _SSP2CON2
               00275         extern _SSP2CON1
               00276         extern _SSP2STAT
               00277         extern _SSP2ADD
               00278         extern _SSP2BUF
               00279         extern _ECCP2DEL
               00280         extern _ECCP2AS
               00281         extern _ECCP3DEL
               00282         extern _ECCP3AS
               00283         extern _RCSTA2
               00284         extern _TXSTA2
               00285         extern _TXREG2
               00286         extern _RCREG2
               00287         extern _SPBRG2
               00288         extern _CCP5CON
               00289         extern _CCPR5
               00290         extern _CCPR5L
               00291         extern _CCPR5H
               00292         extern _CCP4CON
               00293         extern _CCPR4
               00294         extern _CCPR4L
               00295         extern _CCPR4H
               00296         extern _T4CON
               00297         extern _PR4
               00298         extern _TMR4
               00299         extern _ECCP1DEL
               00300         extern _ERDPT
               00301         extern _ERDPTL
               00302         extern _ERDPTH
               00303         extern _BAUDCON2
               00304         extern _BAUDCTL2
               00305         extern _SPBRGH2
               00306         extern _BAUDCON
               00307         extern _BAUDCON1
               00308         extern _BAUDCTL
               00309         extern _BAUDCTL1
               00310         extern _SPBRGH
               00311         extern _SPBRGH1
               00312         extern _PORTA
               00313         extern _PORTB
               00314         extern _PORTC
               00315         extern _PORTD
               00316         extern _PORTE
               00317         extern _PORTF
               00318         extern _PORTG
               00319         extern _PORTH
               00320         extern _PORTJ
               00321         extern _LATA
               00322         extern _LATB
               00323         extern _LATC
               00324         extern _LATD
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325         extern _LATE
               00326         extern _LATF
               00327         extern _LATG
               00328         extern _LATH
               00329         extern _LATJ
               00330         extern _DDRA
               00331         extern _TRISA
               00332         extern _DDRB
               00333         extern _TRISB
               00334         extern _DDRC
               00335         extern _TRISC
               00336         extern _DDRD
               00337         extern _TRISD
               00338         extern _DDRE
               00339         extern _TRISE
               00340         extern _DDRF
               00341         extern _TRISF
               00342         extern _DDRG
               00343         extern _TRISG
               00344         extern _DDRH
               00345         extern _TRISH
               00346         extern _DDRJ
               00347         extern _TRISJ
               00348         extern _OSCTUNE
               00349         extern _MEMCON
               00350         extern _PIE1
               00351         extern _PIR1
               00352         extern _IPR1
               00353         extern _PIE2
               00354         extern _PIR2
               00355         extern _IPR2
               00356         extern _PIE3
               00357         extern _PIR3
               00358         extern _IPR3
               00359         extern _EECON1
               00360         extern _EECON2
               00361         extern _RCSTA
               00362         extern _RCSTA1
               00363         extern _TXSTA
               00364         extern _TXSTA1
               00365         extern _TXREG
               00366         extern _TXREG1
               00367         extern _RCREG
               00368         extern _RCREG1
               00369         extern _SPBRG
               00370         extern _SPBRG1
               00371         extern _PSPCON
               00372         extern _T3CON
               00373         extern _TMR3L
               00374         extern _TMR3H
               00375         extern _CMCON
               00376         extern _CVRCON
               00377         extern _ECCP1AS
               00378         extern _CCP3CON
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00379         extern _ECCP3CON
               00380         extern _CCPR3
               00381         extern _CCPR3L
               00382         extern _CCPR3H
               00383         extern _CCP2CON
               00384         extern _ECCP2CON
               00385         extern _CCPR2
               00386         extern _CCPR2L
               00387         extern _CCPR2H
               00388         extern _CCP1CON
               00389         extern _ECCP1CON
               00390         extern _CCPR1
               00391         extern _CCPR1L
               00392         extern _CCPR1H
               00393         extern _ADCON2
               00394         extern _ADCON1
               00395         extern _ADCON0
               00396         extern _ADRES
               00397         extern _ADRESL
               00398         extern _ADRESH
               00399         extern _SSP1CON2
               00400         extern _SSPCON2
               00401         extern _SSP1CON1
               00402         extern _SSPCON1
               00403         extern _SSP1STAT
               00404         extern _SSPSTAT
               00405         extern _SSP1ADD
               00406         extern _SSPADD
               00407         extern _SSP1BUF
               00408         extern _SSPBUF
               00409         extern _T2CON
               00410         extern _PR2
               00411         extern _TMR2
               00412         extern _T1CON
               00413         extern _TMR1L
               00414         extern _TMR1H
               00415         extern _RCON
               00416         extern _WDTCON
               00417         extern _ECON1
               00418         extern _OSCCON
               00419         extern _T0CON
               00420         extern _TMR0L
               00421         extern _TMR0H
               00422         extern _STATUS
               00423         extern _FSR2L
               00424         extern _FSR2H
               00425         extern _PLUSW2
               00426         extern _PREINC2
               00427         extern _POSTDEC2
               00428         extern _POSTINC2
               00429         extern _INDF2
               00430         extern _BSR
               00431         extern _FSR1L
               00432         extern _FSR1H
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00433         extern _PLUSW1
               00434         extern _PREINC1
               00435         extern _POSTDEC1
               00436         extern _POSTINC1
               00437         extern _INDF1
               00438         extern _WREG
               00439         extern _FSR0L
               00440         extern _FSR0H
               00441         extern _PLUSW0
               00442         extern _PREINC0
               00443         extern _POSTDEC0
               00444         extern _POSTINC0
               00445         extern _INDF0
               00446         extern _INTCON3
               00447         extern _INTCON2
               00448         extern _INTCON
               00449         extern _PROD
               00450         extern _PRODL
               00451         extern _PRODH
               00452         extern _TABLAT
               00453         extern _TBLPTR
               00454         extern _TBLPTRL
               00455         extern _TBLPTRH
               00456         extern _TBLPTRU
               00457         extern _PC
               00458         extern _PCL
               00459         extern _PCLATH
               00460         extern _PCLATU
               00461         extern _STKPTR
               00462         extern _TOS
               00463         extern _TOSL
               00464         extern _TOSH
               00465         extern _TOSU
               00466         extern _sprintf
               00467         extern _strlen
               00468         extern _LCDInit
               00469         extern _LCDUpdate
               00470         extern _LCDErase
               00471         extern _time_create
               00472         extern _time_set
               00473         extern _add_second
               00474         extern _time_print
               00475         extern _time_equals
               00476         extern __modsint
               00477 ;--------------------------------------------------------
               00478 ;       Equates to used internal registers
               00479 ;--------------------------------------------------------
  00000FD8     00480 STATUS  equ     0xfd8
  00000FF9     00481 PCL     equ     0xff9
  00000FFA     00482 PCLATH  equ     0xffa
  00000FFB     00483 PCLATU  equ     0xffb
  00000FE8     00484 WREG    equ     0xfe8
  00000FE0     00485 BSR     equ     0xfe0
  00000FE9     00486 FSR0L   equ     0xfe9
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
  00000FEA     00487 FSR0H   equ     0xfea
  00000FE1     00488 FSR1L   equ     0xfe1
  00000FD9     00489 FSR2L   equ     0xfd9
  00000FE5     00490 POSTDEC1        equ     0xfe5
  00000FE4     00491 PREINC1 equ     0xfe4
  00000FDB     00492 PLUSW2  equ     0xfdb
  00000FF3     00493 PRODL   equ     0xff3
  00000FF4     00494 PRODH   equ     0xff4
               00495 
               00496 
               00497         idata
               00498 _alarm_going_off        db      0x00, 0x00
               00499 _alarm_counter  db      0x00, 0x00
               00500 _overflow_counter       db      0x00, 0x00
               00501 _but1_pressed   db      0x00, 0x00
               00502 _but2_pressed   db      0x00, 0x00
               00503 _config_mode_on db      0x00, 0x00
               00504 _config_mode_clock      db      0x01, 0x00
               00505 _config_called  db      0x00, 0x00
               00506 
               00507 
               00508 ; Internal registers
               00509 .registers      udata_ovr       0x0000
               00510 r0x00   res     1
               00511 r0x01   res     1
               00512 r0x02   res     1
               00513 r0x03   res     1
               00514 r0x04   res     1
               00515 r0x05   res     1
               00516 r0x06   res     1
               00517 r0x07   res     1
               00518 r0x08   res     1
               00519 r0x09   res     1
               00520 r0x0a   res     1
               00521 r0x0b   res     1
               00522 r0x0c   res     1
               00523 
               00524 udata_clock_0   udata
               00525 __time  res     3
               00526 
               00527 udata_clock_1   udata
               00528 __alarm res     3
               00529 
               00530 udata_clock_2   udata
               00531 _display_line   res     32
               00532 
               00533 udata_clock_3   udata
               00534 _to_double_digits_buffer_1_1    res     3
               00535 
               00536 ;--------------------------------------------------------
               00537 ; interrupt vector 
               00538 ;--------------------------------------------------------
               00539 
               00540 ;--------------------------------------------------------
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00541 ; global & static initialisations
               00542 ;--------------------------------------------------------
               00543 ; ; Starting pCode block for absolute section
               00544 ; ;-----------------------------------------
               00545 S_clock_ivec_0x1_highPriorityInterruptHandler   code    0X000008
0008 00546 ivec_0x1_highPriorityInterruptHandler:
0008 EF00 F000 00547         GOTO    _highPriorityInterruptHandler
               00548 
               00549 ; I code from now on!
               00550 ; ; Starting pCode block
               00551 S_clock__main   code
0000 00552 _main:
               00553 ;       .line   72; src/clock.c _time = time_create();
0000 EC00 F000 00554         CALL    _time_create
0004 0000      00555         BANKSEL __time
0006 6F00      00556         MOVWF   __time, B
0008 CFF3 F000 00557         MOVFF   PRODL, (__time + 1)
000C CFF4 F000 00558         MOVFF   PRODH, (__time + 2)
               00559 ;       .line   73; src/clock.c _alarm = time_create();
0010 EC00 F000 00560         CALL    _time_create
0014 0000      00561         BANKSEL __alarm
0016 6F00      00562         MOVWF   __alarm, B
0018 CFF3 F000 00563         MOVFF   PRODL, (__alarm + 1)
001C CFF4 F000 00564         MOVFF   PRODH, (__alarm + 2)
               00565 ;       .line   75; src/clock.c init();
0020 EC00 F000 00566         CALL    _init
               00567 ;       .line   76; src/clock.c init_config();
0024 EC00 F000 00568         CALL    _init_config
               00569 ;       .line   78; src/clock.c T0CONbits.TMR0ON = 1;
0028 8E00      00570         BSF     _T0CONbits, 7
               00571 ;       .line   79; src/clock.c update_display();
002A EC00 F000 00572         CALL    _update_display
002E 00573 _00108_DS_:
002E 0000      00574         BANKSEL _config_called
               00575 ;       .line   81; src/clock.c if(config_called){
0030 5100      00576         MOVF    _config_called, W, B
0032 0000      00577         BANKSEL (_config_called + 1)
0034 1100      00578         IORWF   (_config_called + 1), W, B
0036 E000      00579         BZ      _00108_DS_
0038 0000      00580         BANKSEL _config_called
               00581 ;       .line   82; src/clock.c config_called =0;
003A 6B00      00582         CLRF    _config_called, B
003C 0000      00583         BANKSEL (_config_called + 1)
003E 6B00      00584         CLRF    (_config_called + 1), B
               00585 ;       .line   83; src/clock.c init_config();
0040 EC00 F000 00586         CALL    _init_config
0044 D000      00587         BRA     _00108_DS_
               00588 ;       .line   86; src/clock.c return 0;
0046 0012      00589         RETURN  
               00590 
               00591 ; ; Starting pCode block
               00592 S_clock__init   code
0000 00593 _init:
               00594 ;       .line   264; src/clock.c        void init(void){
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0000 CFD9 FFE5 00595         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00596         MOVFF   FSR1L, FSR2L
               00597 ;       .line   266; src/clock.c        LCDInit();
0008 EC00 F000 00598         CALL    _LCDInit
               00599 ;       .line   269; src/clock.c        BUTTON0_TRIS = 1;
000C 8600      00600         BSF     _TRISBbits, 3
               00601 ;       .line   270; src/clock.c        BUTTON1_TRIS = 1;
000E 8200      00602         BSF     _TRISBbits, 1
               00603 ;       .line   273; src/clock.c        INTCONbits.GIE = 1;
0010 8E00      00604         BSF     _INTCONbits, 7
               00605 ;       .line   274; src/clock.c        INTCONbits.PEIE = 1;
0012 8C00      00606         BSF     _INTCONbits, 6
               00607 ;       .line   275; src/clock.c        RCONbits.IPEN = 1; 
0014 8E00      00608         BSF     _RCONbits, 7
               00609 ;       .line   278; src/clock.c        T0CONbits.TMR0ON = 0;
0016 9E00      00610         BCF     _T0CONbits, 7
               00611 ;       .line   281; src/clock.c        TMR0H = 0x00000000;
0018 6A00      00612         CLRF    _TMR0H
               00613 ;       .line   282; src/clock.c        TMR0L = 0x00000000;
001A 6A00      00614         CLRF    _TMR0L
               00615 ;       .line   285; src/clock.c        T0CONbits.T08BIT = 0;
001C 9C00      00616         BCF     _T0CONbits, 6
               00617 ;       .line   288; src/clock.c        T0CONbits.T0CS = 0;
001E 9A00      00618         BCF     _T0CONbits, 5
               00619 ;       .line   291; src/clock.c        T0CONbits.PSA = 1;
0020 8600      00620         BSF     _T0CONbits, 3
               00621 ;       .line   294; src/clock.c        INTCONbits.TMR0IE = 1;
0022 8A00      00622         BSF     _INTCONbits, 5
               00623 ;       .line   297; src/clock.c        INTCON3bits.INT1IE = 1;
0024 8600      00624         BSF     _INTCON3bits, 3
               00625 ;       .line   298; src/clock.c        INTCON3bits.INT3IE = 1;
0026 8A00      00626         BSF     _INTCON3bits, 5
               00627 ;       .line   301; src/clock.c        LED0_TRIS = 0;
0028 9000      00628         BCF     _TRISJbits, 0
               00629 ;       .line   302; src/clock.c        LED1_TRIS = 0;   
002A 9200      00630         BCF     _TRISJbits, 1
               00631 ;       .line   303; src/clock.c        LED2_TRIS = 0;
002C 9400      00632         BCF     _TRISJbits, 2
               00633 ;       .line   304; src/clock.c        LED3_TRIS = 0;
002E 9A00      00634         BCF     _TRISGbits, 5
               00635 ;       .line   307; src/clock.c        LED0_IO = 0; 
0030 9000      00636         BCF     _LATJbits, 0
               00637 ;       .line   308; src/clock.c        LED1_IO = 0;
0032 9200      00638         BCF     _LATJbits, 1
               00639 ;       .line   309; src/clock.c        LED2_IO = 0;
0034 9400      00640         BCF     _LATJbits, 2
               00641 ;       .line   310; src/clock.c        LED3_IO = 1;
0036 8A00      00642         BSF     _PORTGbits, 5
0038 CFE4 FFD9 00643         MOVFF   PREINC1, FSR2L
003C 0012      00644         RETURN  
               00645 
               00646 ; ; Starting pCode block
               00647 S_clock__highPriorityInterruptHandler   code
0000 00648 _highPriorityInterruptHandler:
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00649 ;       .line   220; src/clock.c        void highPriorityInterruptHandler (void) __interrupt(1){
0000 CFE8 FFE5 00650         MOVFF   WREG, POSTDEC1
0004 CFD8 FFE5 00651         MOVFF   STATUS, POSTDEC1
0008 CFE0 FFE5 00652         MOVFF   BSR, POSTDEC1
000C CFF3 FFE5 00653         MOVFF   PRODL, POSTDEC1
0010 CFF4 FFE5 00654         MOVFF   PRODH, POSTDEC1
0014 CFE9 FFE5 00655         MOVFF   FSR0L, POSTDEC1
0018 CFEA FFE5 00656         MOVFF   FSR0H, POSTDEC1
001C CFFA FFE5 00657         MOVFF   PCLATH, POSTDEC1
0020 CFFB FFE5 00658         MOVFF   PCLATU, POSTDEC1
0024 CFD9 FFE5 00659         MOVFF   FSR2L, POSTDEC1
0028 CFE1 FFD9 00660         MOVFF   FSR1L, FSR2L
002C C000 FFE5 00661         MOVFF   r0x00, POSTDEC1
0030 C000 FFE5 00662         MOVFF   r0x01, POSTDEC1
               00663 ;       .line   221; src/clock.c        if(INTCON3bits.INT1F == 1){
0034 6A00      00664         CLRF    r0x00
0036 B000      00665         BTFSC   _INTCON3bits, 0
0038 2A00      00666         INCF    r0x00, F
003A 5000      00667         MOVF    r0x00, W
003C 0A01      00668         XORLW   0x01
003E E100      00669         BNZ     _00229_DS_
0040 00670 _00262_DS_:
0040 0000      00671         BANKSEL _config_mode_on
               00672 ;       .line   222; src/clock.c        if(!config_mode_on){
0042 5100      00673         MOVF    _config_mode_on, W, B
0044 0000      00674         BANKSEL (_config_mode_on + 1)
0046 1100      00675         IORWF   (_config_mode_on + 1), W, B
0048 E100      00676         BNZ     _00226_DS_
               00677 ;       .line   223; src/clock.c        config_called =1;       
004A 0E01      00678         MOVLW   0x01
004C 0000      00679         BANKSEL _config_called
004E 6F00      00680         MOVWF   _config_called, B
0050 0000      00681         BANKSEL (_config_called + 1)
0052 6B00      00682         CLRF    (_config_called + 1), B
0054 D000      00683         BRA     _00227_DS_
0056 00684 _00226_DS_:
               00685 ;       .line   225; src/clock.c        but2_pressed = 1;       
0056 0E01      00686         MOVLW   0x01
0058 0000      00687         BANKSEL _but2_pressed
005A 6F00      00688         MOVWF   _but2_pressed, B
005C 0000      00689         BANKSEL (_but2_pressed + 1)
005E 6B00      00690         CLRF    (_but2_pressed + 1), B
               00691 ; ;;!!! pic16_aopOp:1071 called for a spillLocation -- assigning WREG instead --- CHECK
0060 00692 _00227_DS_:
               00693 ;       .line   227; src/clock.c        if(BUTTON0_IO);
0060 6AE8      00694         CLRF    WREG
0062 B600      00695         BTFSC   _PORTBbits, 3
0064 2AE8      00696         INCF    WREG, F
               00697 ;       .line   228; src/clock.c        INTCON3bits.INT1F = 0; 
0066 9000      00698         BCF     _INTCON3bits, 0
0068 00699 _00229_DS_:
               00700 ;       .line   231; src/clock.c        if(INTCON3bits.INT3F  == 1){
0068 6A00      00701         CLRF    r0x00
006A B400      00702         BTFSC   _INTCON3bits, 2
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
006C 2A00      00703         INCF    r0x00, F
006E 5000      00704         MOVF    r0x00, W
0070 0A01      00705         XORLW   0x01
0072 E100      00706         BNZ     _00231_DS_
               00707 ;       .line   232; src/clock.c        but1_pressed = 1;       
0074 0E01      00708         MOVLW   0x01
0076 0000      00709         BANKSEL _but1_pressed
0078 6F00      00710         MOVWF   _but1_pressed, B
007A 0000      00711         BANKSEL (_but1_pressed + 1)
007C 6B00      00712         CLRF    (_but1_pressed + 1), B
               00713 ; ;;!!! pic16_aopOp:1071 called for a spillLocation -- assigning WREG instead --- CHECK
               00714 ;       .line   233; src/clock.c        if(BUTTON1_IO);
007E 6AE8      00715         CLRF    WREG
0080 B200      00716         BTFSC   _PORTBbits, 1
0082 2AE8      00717         INCF    WREG, F
               00718 ;       .line   234; src/clock.c        INTCON3bits.INT3F = 0; 
0084 9400      00719         BCF     _INTCON3bits, 2
0086 00720 _00231_DS_:
               00721 ;       .line   236; src/clock.c        if(INTCONbits.TMR0IF == 1) {
0086 6A00      00722         CLRF    r0x00
0088 B400      00723         BTFSC   _INTCONbits, 2
008A 2A00      00724         INCF    r0x00, F
008C 5000      00725         MOVF    r0x00, W
008E 0A01      00726         XORLW   0x01
0090 E000      00727         BZ      _00266_DS_
0092 D000      00728         BRA     _00248_DS_
0094 00729 _00266_DS_:
0094 0000      00730         BANKSEL _overflow_counter
               00731 ;       .line   237; src/clock.c        overflow_counter++;
0096 2B00      00732         INCF    _overflow_counter, F, B
0098 E300      00733         BNC     _10277_DS_
009A 0000      00734         BANKSEL (_overflow_counter + 1)
009C 2B00      00735         INCF    (_overflow_counter + 1), F, B
009E 00736 _10277_DS_:
009E 0000      00737         BANKSEL _overflow_counter
               00738 ;       .line   238; src/clock.c        if(overflow_counter == CYCLES/2){
00A0 5100      00739         MOVF    _overflow_counter, W, B
00A2 0A2E      00740         XORLW   0x2e
00A4 E100      00741         BNZ     _00267_DS_
00A6 0000      00742         BANKSEL (_overflow_counter + 1)
00A8 5100      00743         MOVF    (_overflow_counter + 1), W, B
00AA E000      00744         BZ      _00268_DS_
00AC 00745 _00267_DS_:
00AC D000      00746         BRA     _00244_DS_
00AE 00747 _00268_DS_:
               00748 ;       .line   239; src/clock.c        toggle_led();
00AE EC00 F000 00749         CALL    _toggle_led
00B2 D000      00750         BRA     _00245_DS_
00B4 00751 _00244_DS_:
00B4 0000      00752         BANKSEL _overflow_counter
               00753 ;       .line   240; src/clock.c        }else if(overflow_counter == CYCLES){
00B6 5100      00754         MOVF    _overflow_counter, W, B
00B8 0A5D      00755         XORLW   0x5d
00BA E100      00756         BNZ     _00269_DS_
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00BC 0000      00757         BANKSEL (_overflow_counter + 1)
00BE 5100      00758         MOVF    (_overflow_counter + 1), W, B
00C0 E000      00759         BZ      _00270_DS_
00C2 00760 _00269_DS_:
00C2 D000      00761         BRA     _00245_DS_
00C4 00762 _00270_DS_:
00C4 0000      00763         BANKSEL (__time + 2)
               00764 ;       .line   241; src/clock.c        if(time_equals(_alarm,_time)){
00C6 5100      00765         MOVF    (__time + 2), W, B
00C8 6EE5      00766         MOVWF   POSTDEC1
00CA 0000      00767         BANKSEL (__time + 1)
00CC 5100      00768         MOVF    (__time + 1), W, B
00CE 6EE5      00769         MOVWF   POSTDEC1
00D0 0000      00770         BANKSEL __time
00D2 5100      00771         MOVF    __time, W, B
00D4 6EE5      00772         MOVWF   POSTDEC1
00D6 0000      00773         BANKSEL (__alarm + 2)
00D8 5100      00774         MOVF    (__alarm + 2), W, B
00DA 6EE5      00775         MOVWF   POSTDEC1
00DC 0000      00776         BANKSEL (__alarm + 1)
00DE 5100      00777         MOVF    (__alarm + 1), W, B
00E0 6EE5      00778         MOVWF   POSTDEC1
00E2 0000      00779         BANKSEL __alarm
00E4 5100      00780         MOVF    __alarm, W, B
00E6 6EE5      00781         MOVWF   POSTDEC1
00E8 EC00 F000 00782         CALL    _time_equals
00EC 6E00      00783         MOVWF   r0x00
00EE CFF3 F000 00784         MOVFF   PRODL, r0x01
00F2 0E06      00785         MOVLW   0x06
00F4 26E1      00786         ADDWF   FSR1L, F
00F6 5000      00787         MOVF    r0x00, W
00F8 1000      00788         IORWF   r0x01, W
00FA E000      00789         BZ      _00233_DS_
               00790 ;       .line   242; src/clock.c        alarm_going_off = 1;
00FC 0E01      00791         MOVLW   0x01
00FE 0000      00792         BANKSEL _alarm_going_off
0100 6F00      00793         MOVWF   _alarm_going_off, B
0102 0000      00794         BANKSEL (_alarm_going_off + 1)
0104 6B00      00795         CLRF    (_alarm_going_off + 1), B
0106 00796 _00233_DS_:
0106 0000      00797         BANKSEL _alarm_going_off
               00798 ;       .line   244; src/clock.c        if(alarm_going_off){
0108 5100      00799         MOVF    _alarm_going_off, W, B
010A 0000      00800         BANKSEL (_alarm_going_off + 1)
010C 1100      00801         IORWF   (_alarm_going_off + 1), W, B
010E E000      00802         BZ      _00237_DS_
0110 0000      00803         BANKSEL _alarm_counter
               00804 ;       .line   245; src/clock.c        alarm_counter++;
0112 2B00      00805         INCF    _alarm_counter, F, B
0114 E300      00806         BNC     _20278_DS_
0116 0000      00807         BANKSEL (_alarm_counter + 1)
0118 2B00      00808         INCF    (_alarm_counter + 1), F, B
011A 00809 _20278_DS_:
               00810 ;       .line   246; src/clock.c        alarm_led();
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
011A EC00 F000 00811         CALL    _alarm_led
011E 0000      00812         BANKSEL _alarm_counter
               00813 ;       .line   247; src/clock.c        if(alarm_counter==30){
0120 5100      00814         MOVF    _alarm_counter, W, B
0122 0A1E      00815         XORLW   0x1e
0124 E100      00816         BNZ     _00271_DS_
0126 0000      00817         BANKSEL (_alarm_counter + 1)
0128 5100      00818         MOVF    (_alarm_counter + 1), W, B
012A E000      00819         BZ      _00272_DS_
012C 00820 _00271_DS_:
012C D000      00821         BRA     _00237_DS_
012E 00822 _00272_DS_:
012E 0000      00823         BANKSEL _alarm_going_off
               00824 ;       .line   248; src/clock.c        alarm_going_off =0;
0130 6B00      00825         CLRF    _alarm_going_off, B
0132 0000      00826         BANKSEL (_alarm_going_off + 1)
0134 6B00      00827         CLRF    (_alarm_going_off + 1), B
0136 0000      00828         BANKSEL _alarm_counter
               00829 ;       .line   249; src/clock.c        alarm_counter = 0;
0138 6B00      00830         CLRF    _alarm_counter, B
013A 0000      00831         BANKSEL (_alarm_counter + 1)
013C 6B00      00832         CLRF    (_alarm_counter + 1), B
013E 00833 _00237_DS_:
013E 0000      00834         BANKSEL _overflow_counter
               00835 ;       .line   252; src/clock.c        overflow_counter = 0;
0140 6B00      00836         CLRF    _overflow_counter, B
0142 0000      00837         BANKSEL (_overflow_counter + 1)
0144 6B00      00838         CLRF    (_overflow_counter + 1), B
               00839 ;       .line   253; src/clock.c        toggle_led();
0146 EC00 F000 00840         CALL    _toggle_led
014A 0000      00841         BANKSEL (__time + 2)
               00842 ;       .line   254; src/clock.c        add_second(_time);
014C 5100      00843         MOVF    (__time + 2), W, B
014E 6EE5      00844         MOVWF   POSTDEC1
0150 0000      00845         BANKSEL (__time + 1)
0152 5100      00846         MOVF    (__time + 1), W, B
0154 6EE5      00847         MOVWF   POSTDEC1
0156 0000      00848         BANKSEL __time
0158 5100      00849         MOVF    __time, W, B
015A 6EE5      00850         MOVWF   POSTDEC1
015C EC00 F000 00851         CALL    _add_second
0160 0E03      00852         MOVLW   0x03
0162 26E1      00853         ADDWF   FSR1L, F
0164 0000      00854         BANKSEL _config_called
               00855 ;       .line   255; src/clock.c        if(!config_called && !config_mode_on){
0166 5100      00856         MOVF    _config_called, W, B
0168 0000      00857         BANKSEL (_config_called + 1)
016A 1100      00858         IORWF   (_config_called + 1), W, B
016C E100      00859         BNZ     _00245_DS_
016E 0000      00860         BANKSEL _config_mode_on
0170 5100      00861         MOVF    _config_mode_on, W, B
0172 0000      00862         BANKSEL (_config_mode_on + 1)
0174 1100      00863         IORWF   (_config_mode_on + 1), W, B
0176 E100      00864         BNZ     _00245_DS_
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00865 ;       .line   256; src/clock.c        update_display();
0178 EC00 F000 00866         CALL    _update_display
017C 00867 _00245_DS_:
               00868 ;       .line   259; src/clock.c        INTCONbits.TMR0IF = 0;
017C 9400      00869         BCF     _INTCONbits, 2
017E 00870 _00248_DS_:
017E CFE4 F000 00871         MOVFF   PREINC1, r0x01
0182 CFE4 F000 00872         MOVFF   PREINC1, r0x00
0186 CFE4 FFD9 00873         MOVFF   PREINC1, FSR2L
018A CFE4 FFFB 00874         MOVFF   PREINC1, PCLATU
018E CFE4 FFFA 00875         MOVFF   PREINC1, PCLATH
0192 CFE4 FFEA 00876         MOVFF   PREINC1, FSR0H
0196 CFE4 FFE9 00877         MOVFF   PREINC1, FSR0L
019A CFE4 FFF4 00878         MOVFF   PREINC1, PRODH
019E CFE4 FFF3 00879         MOVFF   PREINC1, PRODL
01A2 CFE4 FFE0 00880         MOVFF   PREINC1, BSR
01A6 CFE4 FFD8 00881         MOVFF   PREINC1, STATUS
01AA CFE4 FFE8 00882         MOVFF   PREINC1, WREG
01AE 0010      00883         RETFIE  
               00884 
               00885 ; ; Starting pCode block
               00886 S_clock__to_double_digits       code
0000 00887 _to_double_digits:
               00888 ;       .line   214; src/clock.c        char* to_double_digits(int value){
0000 CFD9 FFE5 00889         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00890         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00891         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00892         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00893         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00894         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00895         MOVFF   r0x04, POSTDEC1
001C 0E02      00896         MOVLW   0x02
001E CFDB F000 00897         MOVFF   PLUSW2, r0x00
0022 0E03      00898         MOVLW   0x03
0024 CFDB F000 00899         MOVFF   PLUSW2, r0x01
               00900 ;       .line   216; src/clock.c        sprintf(buffer, "%02d", value);
0028 0E00      00901         MOVLW   HIGH(_to_double_digits_buffer_1_1)
002A 6E00      00902         MOVWF   r0x03
002C 0E00      00903         MOVLW   LOW(_to_double_digits_buffer_1_1)
002E 6E00      00904         MOVWF   r0x02
0030 0E80      00905         MOVLW   0x80
0032 6E00      00906         MOVWF   r0x04
0034 5000      00907         MOVF    r0x01, W
0036 6EE5      00908         MOVWF   POSTDEC1
0038 5000      00909         MOVF    r0x00, W
003A 6EE5      00910         MOVWF   POSTDEC1
003C 0E00      00911         MOVLW   UPPER(__str_9)
003E 6EE5      00912         MOVWF   POSTDEC1
0040 0E00      00913         MOVLW   HIGH(__str_9)
0042 6EE5      00914         MOVWF   POSTDEC1
0044 0E00      00915         MOVLW   LOW(__str_9)
0046 6EE5      00916         MOVWF   POSTDEC1
0048 5000      00917         MOVF    r0x04, W
004A 6EE5      00918         MOVWF   POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004C 5000      00919         MOVF    r0x03, W
004E 6EE5      00920         MOVWF   POSTDEC1
0050 5000      00921         MOVF    r0x02, W
0052 6EE5      00922         MOVWF   POSTDEC1
0054 EC00 F000 00923         CALL    _sprintf
0058 0E08      00924         MOVLW   0x08
005A 26E1      00925         ADDWF   FSR1L, F
               00926 ;       .line   217; src/clock.c        return buffer;
005C 0E00      00927         MOVLW   HIGH(_to_double_digits_buffer_1_1)
005E 6E00      00928         MOVWF   r0x01
0060 0E00      00929         MOVLW   LOW(_to_double_digits_buffer_1_1)
0062 6E00      00930         MOVWF   r0x00
0064 0E80      00931         MOVLW   0x80
0066 6E00      00932         MOVWF   r0x02
0068 C000 FFF4 00933         MOVFF   r0x02, PRODH
006C C000 FFF3 00934         MOVFF   r0x01, PRODL
0070 5000      00935         MOVF    r0x00, W
0072 CFE4 F000 00936         MOVFF   PREINC1, r0x04
0076 CFE4 F000 00937         MOVFF   PREINC1, r0x03
007A CFE4 F000 00938         MOVFF   PREINC1, r0x02
007E CFE4 F000 00939         MOVFF   PREINC1, r0x01
0082 CFE4 F000 00940         MOVFF   PREINC1, r0x00
0086 CFE4 FFD9 00941         MOVFF   PREINC1, FSR2L
008A 0012      00942         RETURN  
               00943 
               00944 ; ; Starting pCode block
               00945 S_clock__display_string code
0000 00946 _display_string:
               00947 ;       .line   203; src/clock.c        void display_string(BYTE pos, char* text){
0000 CFD9 FFE5 00948         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00949         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00950         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00951         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00952         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00953         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00954         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00955         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00956         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00957         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00958         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 00959         MOVFF   r0x09, POSTDEC1
0030 0E02      00960         MOVLW   0x02
0032 CFDB F000 00961         MOVFF   PLUSW2, r0x00
0036 0E03      00962         MOVLW   0x03
0038 CFDB F000 00963         MOVFF   PLUSW2, r0x01
003C 0E04      00964         MOVLW   0x04
003E CFDB F000 00965         MOVFF   PLUSW2, r0x02
0042 0E05      00966         MOVLW   0x05
0044 CFDB F000 00967         MOVFF   PLUSW2, r0x03
               00968 ;       .line   204; src/clock.c        BYTE        l = strlen(text);
0048 5000      00969         MOVF    r0x03, W
004A 6EE5      00970         MOVWF   POSTDEC1
004C 5000      00971         MOVF    r0x02, W
004E 6EE5      00972         MOVWF   POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0050 5000      00973         MOVF    r0x01, W
0052 6EE5      00974         MOVWF   POSTDEC1
0054 EC00 F000 00975         CALL    _strlen
0058 6E00      00976         MOVWF   r0x04
005A CFF3 F000 00977         MOVFF   PRODL, r0x05
005E 0E03      00978         MOVLW   0x03
0060 26E1      00979         ADDWF   FSR1L, F
               00980 ;       .line   205; src/clock.c        BYTE      max = 32-pos;    
0062 5000      00981         MOVF    r0x00, W
0064 0820      00982         SUBLW   0x20
0066 6E00      00983         MOVWF   r0x05
               00984 ;       .line   206; src/clock.c        char       *d = (char*)&LCDText[pos];
0068 6A00      00985         CLRF    r0x06
006A 0E00      00986         MOVLW   LOW(_LCDText)
006C 2600      00987         ADDWF   r0x00, F
006E 0E00      00988         MOVLW   HIGH(_LCDText)
0070 2200      00989         ADDWFC  r0x06, F
0072 5000      00990         MOVF    r0x06, W
0074 6E00      00991         MOVWF   r0x06
0076 5000      00992         MOVF    r0x00, W
0078 6E00      00993         MOVWF   r0x00
007A 0E80      00994         MOVLW   0x80
007C 6E00      00995         MOVWF   r0x07
               00996 ;       .line   208; src/clock.c        size_t      n = (l<max)?l:max;
007E 5000      00997         MOVF    r0x05, W
0080 5C00      00998         SUBWF   r0x04, W
0082 E300      00999         BNC     _00210_DS_
0084 C000 F000 01000         MOVFF   r0x05, r0x04
0088 01001 _00210_DS_:
0088 6A00      01002         CLRF    r0x05
               01003 ;       .line   209; src/clock.c        if (n != 0)
008A 5000      01004         MOVF    r0x04, W
008C 1000      01005         IORWF   r0x05, W
008E E000      01006         BZ      _00206_DS_
0090 01007 _00202_DS_:
               01008 ;       .line   210; src/clock.c        while (n-- != 0)*d++ = *s++;
0090 C000 F000 01009         MOVFF   r0x04, r0x08
0094 C000 F000 01010         MOVFF   r0x05, r0x09
0098 0EFF      01011         MOVLW   0xff
009A 2600      01012         ADDWF   r0x04, F
009C A0D8      01013         BTFSS   STATUS, 0
009E 0600      01014         DECF    r0x05, F
00A0 5000      01015         MOVF    r0x08, W
00A2 1000      01016         IORWF   r0x09, W
00A4 E000      01017         BZ      _00206_DS_
00A6 C000 FFE9 01018         MOVFF   r0x01, FSR0L
00AA C000 FFF3 01019         MOVFF   r0x02, PRODL
00AE 5000      01020         MOVF    r0x03, W
00B0 EC00 F000 01021         CALL    __gptrget1
00B4 6E00      01022         MOVWF   r0x08
00B6 2A00      01023         INCF    r0x01, F
00B8 B0D8      01024         BTFSC   STATUS, 0
00BA 2A00      01025         INCF    r0x02, F
00BC B0D8      01026         BTFSC   STATUS, 0
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00BE 2A00      01027         INCF    r0x03, F
00C0 C000 FFE5 01028         MOVFF   r0x08, POSTDEC1
00C4 C000 FFE9 01029         MOVFF   r0x00, FSR0L
00C8 C000 FFF3 01030         MOVFF   r0x06, PRODL
00CC 5000      01031         MOVF    r0x07, W
00CE EC00 F000 01032         CALL    __gptrput1
00D2 2A00      01033         INCF    r0x00, F
00D4 B0D8      01034         BTFSC   STATUS, 0
00D6 2A00      01035         INCF    r0x06, F
00D8 B0D8      01036         BTFSC   STATUS, 0
00DA 2A00      01037         INCF    r0x07, F
00DC D000      01038         BRA     _00202_DS_
00DE 01039 _00206_DS_:
               01040 ;       .line   211; src/clock.c        LCDUpdate();
00DE EC00 F000 01041         CALL    _LCDUpdate
00E2 CFE4 F000 01042         MOVFF   PREINC1, r0x09
00E6 CFE4 F000 01043         MOVFF   PREINC1, r0x08
00EA CFE4 F000 01044         MOVFF   PREINC1, r0x07
00EE CFE4 F000 01045         MOVFF   PREINC1, r0x06
00F2 CFE4 F000 01046         MOVFF   PREINC1, r0x05
00F6 CFE4 F000 01047         MOVFF   PREINC1, r0x04
00FA CFE4 F000 01048         MOVFF   PREINC1, r0x03
00FE CFE4 F000 01049         MOVFF   PREINC1, r0x02
0102 CFE4 F000 01050         MOVFF   PREINC1, r0x01
0106 CFE4 F000 01051         MOVFF   PREINC1, r0x00
010A CFE4 FFD9 01052         MOVFF   PREINC1, FSR2L
010E 0012      01053         RETURN  
               01054 
               01055 ; ; Starting pCode block
               01056 S_clock__get_input      code
0000 01057 _get_input:
               01058 ;       .line   179; src/clock.c        int get_input(int maxvalue, char *text, char *mode){
0000 CFD9 FFE5 01059         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01060         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01061         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01062         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01063         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01064         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01065         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01066         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01067         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01068         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01069         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01070         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 01071         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 01072         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 01073         MOVFF   r0x0c, POSTDEC1
003C 0E02      01074         MOVLW   0x02
003E CFDB F000 01075         MOVFF   PLUSW2, r0x00
0042 0E03      01076         MOVLW   0x03
0044 CFDB F000 01077         MOVFF   PLUSW2, r0x01
0048 0E04      01078         MOVLW   0x04
004A CFDB F000 01079         MOVFF   PLUSW2, r0x02
004E 0E05      01080         MOVLW   0x05
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0050 CFDB F000 01081         MOVFF   PLUSW2, r0x03
0054 0E06      01082         MOVLW   0x06
0056 CFDB F000 01083         MOVFF   PLUSW2, r0x04
005A 0E07      01084         MOVLW   0x07
005C CFDB F000 01085         MOVFF   PLUSW2, r0x05
0060 0E08      01086         MOVLW   0x08
0062 CFDB F000 01087         MOVFF   PLUSW2, r0x06
0066 0E09      01088         MOVLW   0x09
0068 CFDB F000 01089         MOVFF   PLUSW2, r0x07
               01090 ;       .line   180; src/clock.c        BYTE length = strlen(text);
006C 5000      01091         MOVF    r0x04, W
006E 6EE5      01092         MOVWF   POSTDEC1
0070 5000      01093         MOVF    r0x03, W
0072 6EE5      01094         MOVWF   POSTDEC1
0074 5000      01095         MOVF    r0x02, W
0076 6EE5      01096         MOVWF   POSTDEC1
0078 EC00 F000 01097         CALL    _strlen
007C 6E00      01098         MOVWF   r0x08
007E CFF3 F000 01099         MOVFF   PRODL, r0x09
0082 0E03      01100         MOVLW   0x03
0084 26E1      01101         ADDWF   FSR1L, F
               01102 ;       .line   181; src/clock.c        int value = 0;
0086 6A00      01103         CLRF    r0x09
0088 6A00      01104         CLRF    r0x0a
               01105 ;       .line   182; src/clock.c        display_string(START_FIRST_LINE , mode);
008A 5000      01106         MOVF    r0x07, W
008C 6EE5      01107         MOVWF   POSTDEC1
008E 5000      01108         MOVF    r0x06, W
0090 6EE5      01109         MOVWF   POSTDEC1
0092 5000      01110         MOVF    r0x05, W
0094 6EE5      01111         MOVWF   POSTDEC1
0096 0E00      01112         MOVLW   0x00
0098 6EE5      01113         MOVWF   POSTDEC1
009A EC00 F000 01114         CALL    _display_string
009E 0E04      01115         MOVLW   0x04
00A0 26E1      01116         ADDWF   FSR1L, F
               01117 ;       .line   183; src/clock.c        display_string(START_SECOND_LINE, text);
00A2 5000      01118         MOVF    r0x04, W
00A4 6EE5      01119         MOVWF   POSTDEC1
00A6 5000      01120         MOVF    r0x03, W
00A8 6EE5      01121         MOVWF   POSTDEC1
00AA 5000      01122         MOVF    r0x02, W
00AC 6EE5      01123         MOVWF   POSTDEC1
00AE 0E10      01124         MOVLW   0x10
00B0 6EE5      01125         MOVWF   POSTDEC1
00B2 EC00 F000 01126         CALL    _display_string
00B6 0E04      01127         MOVLW   0x04
00B8 26E1      01128         ADDWF   FSR1L, F
               01129 ;       .line   184; src/clock.c        while(1)
00BA 0E11      01130         MOVLW   0x11
00BC 2400      01131         ADDWF   r0x08, W
00BE 6E00      01132         MOVWF   r0x02
00C0 01133 _00195_DS_:
00C0 0000      01134         BANKSEL _config_mode_on
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01135 ;       .line   187; src/clock.c        if(config_mode_on){
00C2 5100      01136         MOVF    _config_mode_on, W, B
00C4 0000      01137         BANKSEL (_config_mode_on + 1)
00C6 1100      01138         IORWF   (_config_mode_on + 1), W, B
00C8 E000      01139         BZ      _00195_DS_
               01140 ;       .line   188; src/clock.c        DelayMs(10);
00CA 0E68      01141         MOVLW   0x68
00CC 6E00      01142         MOVWF   r0x03
00CE 0E42      01143         MOVLW   0x42
00D0 6E00      01144         MOVWF   r0x04
00D2 6A00      01145         CLRF    r0x05
00D4 6A00      01146         CLRF    r0x06
00D6 01147 _00182_DS_:
00D6 C000 F000 01148         MOVFF   r0x03, r0x07
00DA C000 F000 01149         MOVFF   r0x04, r0x08
00DE C000 F000 01150         MOVFF   r0x05, r0x0b
00E2 C000 F000 01151         MOVFF   r0x06, r0x0c
00E6 0EFF      01152         MOVLW   0xff
00E8 2600      01153         ADDWF   r0x03, F
00EA 0EFF      01154         MOVLW   0xff
00EC 2200      01155         ADDWFC  r0x04, F
00EE 0EFF      01156         MOVLW   0xff
00F0 2200      01157         ADDWFC  r0x05, F
00F2 0EFF      01158         MOVLW   0xff
00F4 2200      01159         ADDWFC  r0x06, F
00F6 5000      01160         MOVF    r0x07, W
00F8 1000      01161         IORWF   r0x08, W
00FA 1000      01162         IORWF   r0x0b, W
00FC 1000      01163         IORWF   r0x0c, W
00FE E100      01164         BNZ     _00182_DS_
               01165 ;       .line   189; src/clock.c        if(read_and_clear(&but2_pressed)){
0100 0E00      01166         MOVLW   HIGH(_but2_pressed)
0102 6E00      01167         MOVWF   r0x04
0104 0E00      01168         MOVLW   LOW(_but2_pressed)
0106 6E00      01169         MOVWF   r0x03
0108 0E80      01170         MOVLW   0x80
010A 6E00      01171         MOVWF   r0x05
010C 5000      01172         MOVF    r0x05, W
010E 6EE5      01173         MOVWF   POSTDEC1
0110 5000      01174         MOVF    r0x04, W
0112 6EE5      01175         MOVWF   POSTDEC1
0114 5000      01176         MOVF    r0x03, W
0116 6EE5      01177         MOVWF   POSTDEC1
0118 EC00 F000 01178         CALL    _read_and_clear
011C 6E00      01179         MOVWF   r0x03
011E CFF3 F000 01180         MOVFF   PRODL, r0x04
0122 0E03      01181         MOVLW   0x03
0124 26E1      01182         ADDWF   FSR1L, F
0126 5000      01183         MOVF    r0x03, W
0128 1000      01184         IORWF   r0x04, W
012A E000      01185         BZ      _00189_DS_
               01186 ;       .line   190; src/clock.c        LCDErase();
012C EC00 F000 01187         CALL    _LCDErase
               01188 ;       .line   191; src/clock.c        return value;
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0130 C000 FFF3 01189         MOVFF   r0x0a, PRODL
0134 5000      01190         MOVF    r0x09, W
0136 D000      01191         BRA     _00197_DS_
0138 01192 _00189_DS_:
               01193 ;       .line   193; src/clock.c        if(read_and_clear(&but1_pressed)){ 
0138 0E00      01194         MOVLW   HIGH(_but1_pressed)
013A 6E00      01195         MOVWF   r0x04
013C 0E00      01196         MOVLW   LOW(_but1_pressed)
013E 6E00      01197         MOVWF   r0x03
0140 0E80      01198         MOVLW   0x80
0142 6E00      01199         MOVWF   r0x05
0144 5000      01200         MOVF    r0x05, W
0146 6EE5      01201         MOVWF   POSTDEC1
0148 5000      01202         MOVF    r0x04, W
014A 6EE5      01203         MOVWF   POSTDEC1
014C 5000      01204         MOVF    r0x03, W
014E 6EE5      01205         MOVWF   POSTDEC1
0150 EC00 F000 01206         CALL    _read_and_clear
0154 6E00      01207         MOVWF   r0x03
0156 CFF3 F000 01208         MOVFF   PRODL, r0x04
015A 0E03      01209         MOVLW   0x03
015C 26E1      01210         ADDWF   FSR1L, F
015E 5000      01211         MOVF    r0x03, W
0160 1000      01212         IORWF   r0x04, W
0162 E000      01213         BZ      _00191_DS_
               01214 ;       .line   194; src/clock.c        value = (++value)%maxvalue;
0164 2A00      01215         INCF    r0x09, F
0166 B0D8      01216         BTFSC   STATUS, 0
0168 2A00      01217         INCF    r0x0a, F
016A 5000      01218         MOVF    r0x01, W
016C 6EE5      01219         MOVWF   POSTDEC1
016E 5000      01220         MOVF    r0x00, W
0170 6EE5      01221         MOVWF   POSTDEC1
0172 5000      01222         MOVF    r0x0a, W
0174 6EE5      01223         MOVWF   POSTDEC1
0176 5000      01224         MOVF    r0x09, W
0178 6EE5      01225         MOVWF   POSTDEC1
017A EC00 F000 01226         CALL    __modsint
017E 6E00      01227         MOVWF   r0x09
0180 CFF3 F000 01228         MOVFF   PRODL, r0x0a
0184 0E04      01229         MOVLW   0x04
0186 26E1      01230         ADDWF   FSR1L, F
0188 01231 _00191_DS_:
               01232 ;       .line   196; src/clock.c        display_string(START_SECOND_LINE + length + 1, to_double_digits(value));
0188 5000      01233         MOVF    r0x0a, W
018A 6EE5      01234         MOVWF   POSTDEC1
018C 5000      01235         MOVF    r0x09, W
018E 6EE5      01236         MOVWF   POSTDEC1
0190 EC00 F000 01237         CALL    _to_double_digits
0194 6E00      01238         MOVWF   r0x03
0196 CFF3 F000 01239         MOVFF   PRODL, r0x04
019A CFF4 F000 01240         MOVFF   PRODH, r0x05
019E 0E02      01241         MOVLW   0x02
01A0 26E1      01242         ADDWF   FSR1L, F
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01A2 5000      01243         MOVF    r0x05, W
01A4 6EE5      01244         MOVWF   POSTDEC1
01A6 5000      01245         MOVF    r0x04, W
01A8 6EE5      01246         MOVWF   POSTDEC1
01AA 5000      01247         MOVF    r0x03, W
01AC 6EE5      01248         MOVWF   POSTDEC1
01AE 5000      01249         MOVF    r0x02, W
01B0 6EE5      01250         MOVWF   POSTDEC1
01B2 EC00 F000 01251         CALL    _display_string
01B6 0E04      01252         MOVLW   0x04
01B8 26E1      01253         ADDWF   FSR1L, F
01BA D000      01254         BRA     _00195_DS_
01BC 01255 _00197_DS_:
01BC CFE4 F000 01256         MOVFF   PREINC1, r0x0c
01C0 CFE4 F000 01257         MOVFF   PREINC1, r0x0b
01C4 CFE4 F000 01258         MOVFF   PREINC1, r0x0a
01C8 CFE4 F000 01259         MOVFF   PREINC1, r0x09
01CC CFE4 F000 01260         MOVFF   PREINC1, r0x08
01D0 CFE4 F000 01261         MOVFF   PREINC1, r0x07
01D4 CFE4 F000 01262         MOVFF   PREINC1, r0x06
01D8 CFE4 F000 01263         MOVFF   PREINC1, r0x05
01DC CFE4 F000 01264         MOVFF   PREINC1, r0x04
01E0 CFE4 F000 01265         MOVFF   PREINC1, r0x03
01E4 CFE4 F000 01266         MOVFF   PREINC1, r0x02
01E8 CFE4 F000 01267         MOVFF   PREINC1, r0x01
01EC CFE4 F000 01268         MOVFF   PREINC1, r0x00
01F0 CFE4 FFD9 01269         MOVFF   PREINC1, FSR2L
01F4 0012      01270         RETURN  
               01271 
               01272 ; ; Starting pCode block
               01273 S_clock__read_and_clear code
0000 01274 _read_and_clear:
               01275 ;       .line   172; src/clock.c        int read_and_clear(int *variable){
0000 CFD9 FFE5 01276         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01277         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01278         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01279         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01280         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01281         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01282         MOVFF   r0x04, POSTDEC1
001C 0E02      01283         MOVLW   0x02
001E CFDB F000 01284         MOVFF   PLUSW2, r0x00
0022 0E03      01285         MOVLW   0x03
0024 CFDB F000 01286         MOVFF   PLUSW2, r0x01
0028 0E04      01287         MOVLW   0x04
002A CFDB F000 01288         MOVFF   PLUSW2, r0x02
               01289 ;       .line   173; src/clock.c        if(*variable){
002E C000 FFE9 01290         MOVFF   r0x00, FSR0L
0032 C000 FFF3 01291         MOVFF   r0x01, PRODL
0036 5000      01292         MOVF    r0x02, W
0038 EC00 F000 01293         CALL    __gptrget2
003C 6E00      01294         MOVWF   r0x03
003E CFF3 F000 01295         MOVFF   PRODL, r0x04
0042 5000      01296         MOVF    r0x03, W
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0044 1000      01297         IORWF   r0x04, W
0046 E000      01298         BZ      _00176_DS_
               01299 ;       .line   174; src/clock.c        *variable = 0;
0048 0E00      01300         MOVLW   0x00
004A 6EE5      01301         MOVWF   POSTDEC1
004C 0E00      01302         MOVLW   0x00
004E 6EF4      01303         MOVWF   PRODH
0050 C000 FFE9 01304         MOVFF   r0x00, FSR0L
0054 C000 FFF3 01305         MOVFF   r0x01, PRODL
0058 5000      01306         MOVF    r0x02, W
005A EC00 F000 01307         CALL    __gptrput2
               01308 ;       .line   175; src/clock.c        return 1;
005E 6AF3      01309         CLRF    PRODL
0060 0E01      01310         MOVLW   0x01
0062 D000      01311         BRA     _00177_DS_
0064 01312 _00176_DS_:
               01313 ;       .line   177; src/clock.c        return 0;
0064 6AF3      01314         CLRF    PRODL
0066 6AE8      01315         CLRF    WREG
0068 01316 _00177_DS_:
0068 CFE4 F000 01317         MOVFF   PREINC1, r0x04
006C CFE4 F000 01318         MOVFF   PREINC1, r0x03
0070 CFE4 F000 01319         MOVFF   PREINC1, r0x02
0074 CFE4 F000 01320         MOVFF   PREINC1, r0x01
0078 CFE4 F000 01321         MOVFF   PREINC1, r0x00
007C CFE4 FFD9 01322         MOVFF   PREINC1, FSR2L
0080 0012      01323         RETURN  
               01324 
               01325 ; ; Starting pCode block
               01326 S_clock__init_time      code
0000 01327 _init_time:
               01328 ;       .line   164; src/clock.c        void init_time(time t, char *mode){ 
0000 CFD9 FFE5 01329         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01330         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01331         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01332         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01333         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01334         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01335         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01336         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01337         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01338         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01339         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01340         MOVFF   r0x09, POSTDEC1
0030 0E02      01341         MOVLW   0x02
0032 CFDB F000 01342         MOVFF   PLUSW2, r0x00
0036 0E03      01343         MOVLW   0x03
0038 CFDB F000 01344         MOVFF   PLUSW2, r0x01
003C 0E04      01345         MOVLW   0x04
003E CFDB F000 01346         MOVFF   PLUSW2, r0x02
0042 0E05      01347         MOVLW   0x05
0044 CFDB F000 01348         MOVFF   PLUSW2, r0x03
0048 0E06      01349         MOVLW   0x06
004A CFDB F000 01350         MOVFF   PLUSW2, r0x04
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004E 0E07      01351         MOVLW   0x07
0050 CFDB F000 01352         MOVFF   PLUSW2, r0x05
               01353 ;       .line   166; src/clock.c        h = get_input(24, "Hours:", mode);
0054 5000      01354         MOVF    r0x05, W
0056 6EE5      01355         MOVWF   POSTDEC1
0058 5000      01356         MOVF    r0x04, W
005A 6EE5      01357         MOVWF   POSTDEC1
005C 5000      01358         MOVF    r0x03, W
005E 6EE5      01359         MOVWF   POSTDEC1
0060 0E00      01360         MOVLW   UPPER(__str_6)
0062 6EE5      01361         MOVWF   POSTDEC1
0064 0E00      01362         MOVLW   HIGH(__str_6)
0066 6EE5      01363         MOVWF   POSTDEC1
0068 0E00      01364         MOVLW   LOW(__str_6)
006A 6EE5      01365         MOVWF   POSTDEC1
006C 0E00      01366         MOVLW   0x00
006E 6EE5      01367         MOVWF   POSTDEC1
0070 0E18      01368         MOVLW   0x18
0072 6EE5      01369         MOVWF   POSTDEC1
0074 EC00 F000 01370         CALL    _get_input
0078 6E00      01371         MOVWF   r0x06
007A CFF3 F000 01372         MOVFF   PRODL, r0x07
007E 0E08      01373         MOVLW   0x08
0080 26E1      01374         ADDWF   FSR1L, F
               01375 ;       .line   167; src/clock.c        m = get_input(60, "Minutes:", mode);
0082 5000      01376         MOVF    r0x05, W
0084 6EE5      01377         MOVWF   POSTDEC1
0086 5000      01378         MOVF    r0x04, W
0088 6EE5      01379         MOVWF   POSTDEC1
008A 5000      01380         MOVF    r0x03, W
008C 6EE5      01381         MOVWF   POSTDEC1
008E 0E00      01382         MOVLW   UPPER(__str_7)
0090 6EE5      01383         MOVWF   POSTDEC1
0092 0E00      01384         MOVLW   HIGH(__str_7)
0094 6EE5      01385         MOVWF   POSTDEC1
0096 0E00      01386         MOVLW   LOW(__str_7)
0098 6EE5      01387         MOVWF   POSTDEC1
009A 0E00      01388         MOVLW   0x00
009C 6EE5      01389         MOVWF   POSTDEC1
009E 0E3C      01390         MOVLW   0x3c
00A0 6EE5      01391         MOVWF   POSTDEC1
00A2 EC00 F000 01392         CALL    _get_input
00A6 6E00      01393         MOVWF   r0x08
00A8 CFF3 F000 01394         MOVFF   PRODL, r0x09
00AC 0E08      01395         MOVLW   0x08
00AE 26E1      01396         ADDWF   FSR1L, F
               01397 ;       .line   168; src/clock.c        s = get_input(60, "Seconds:", mode);
00B0 5000      01398         MOVF    r0x05, W
00B2 6EE5      01399         MOVWF   POSTDEC1
00B4 5000      01400         MOVF    r0x04, W
00B6 6EE5      01401         MOVWF   POSTDEC1
00B8 5000      01402         MOVF    r0x03, W
00BA 6EE5      01403         MOVWF   POSTDEC1
00BC 0E00      01404         MOVLW   UPPER(__str_8)
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00BE 6EE5      01405         MOVWF   POSTDEC1
00C0 0E00      01406         MOVLW   HIGH(__str_8)
00C2 6EE5      01407         MOVWF   POSTDEC1
00C4 0E00      01408         MOVLW   LOW(__str_8)
00C6 6EE5      01409         MOVWF   POSTDEC1
00C8 0E00      01410         MOVLW   0x00
00CA 6EE5      01411         MOVWF   POSTDEC1
00CC 0E3C      01412         MOVLW   0x3c
00CE 6EE5      01413         MOVWF   POSTDEC1
00D0 EC00 F000 01414         CALL    _get_input
00D4 6E00      01415         MOVWF   r0x03
00D6 CFF3 F000 01416         MOVFF   PRODL, r0x04
00DA 0E08      01417         MOVLW   0x08
00DC 26E1      01418         ADDWF   FSR1L, F
               01419 ;       .line   169; src/clock.c        time_set(t,h,m,s);
00DE 5000      01420         MOVF    r0x04, W
00E0 6EE5      01421         MOVWF   POSTDEC1
00E2 5000      01422         MOVF    r0x03, W
00E4 6EE5      01423         MOVWF   POSTDEC1
00E6 5000      01424         MOVF    r0x09, W
00E8 6EE5      01425         MOVWF   POSTDEC1
00EA 5000      01426         MOVF    r0x08, W
00EC 6EE5      01427         MOVWF   POSTDEC1
00EE 5000      01428         MOVF    r0x07, W
00F0 6EE5      01429         MOVWF   POSTDEC1
00F2 5000      01430         MOVF    r0x06, W
00F4 6EE5      01431         MOVWF   POSTDEC1
00F6 5000      01432         MOVF    r0x02, W
00F8 6EE5      01433         MOVWF   POSTDEC1
00FA 5000      01434         MOVF    r0x01, W
00FC 6EE5      01435         MOVWF   POSTDEC1
00FE 5000      01436         MOVF    r0x00, W
0100 6EE5      01437         MOVWF   POSTDEC1
0102 EC00 F000 01438         CALL    _time_set
0106 0E09      01439         MOVLW   0x09
0108 26E1      01440         ADDWF   FSR1L, F
010A CFE4 F000 01441         MOVFF   PREINC1, r0x09
010E CFE4 F000 01442         MOVFF   PREINC1, r0x08
0112 CFE4 F000 01443         MOVFF   PREINC1, r0x07
0116 CFE4 F000 01444         MOVFF   PREINC1, r0x06
011A CFE4 F000 01445         MOVFF   PREINC1, r0x05
011E CFE4 F000 01446         MOVFF   PREINC1, r0x04
0122 CFE4 F000 01447         MOVFF   PREINC1, r0x03
0126 CFE4 F000 01448         MOVFF   PREINC1, r0x02
012A CFE4 F000 01449         MOVFF   PREINC1, r0x01
012E CFE4 F000 01450         MOVFF   PREINC1, r0x00
0132 CFE4 FFD9 01451         MOVFF   PREINC1, FSR2L
0136 0012      01452         RETURN  
               01453 
               01454 ; ; Starting pCode block
               01455 S_clock__display_config_mode    code
0000 01456 _display_config_mode:
               01457 ;       .line   159; src/clock.c        void display_config_mode(char *choice_string){
0000 CFD9 FFE5 01458         MOVFF   FSR2L, POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0004 CFE1 FFD9 01459         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01460         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01461         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01462         MOVFF   r0x02, POSTDEC1
0014 0E02      01463         MOVLW   0x02
0016 CFDB F000 01464         MOVFF   PLUSW2, r0x00
001A 0E03      01465         MOVLW   0x03
001C CFDB F000 01466         MOVFF   PLUSW2, r0x01
0020 0E04      01467         MOVLW   0x04
0022 CFDB F000 01468         MOVFF   PLUSW2, r0x02
               01469 ;       .line   160; src/clock.c        display_string(START_FIRST_LINE, CM_STRING);
0026 0E00      01470         MOVLW   UPPER(__str_5)
0028 6EE5      01471         MOVWF   POSTDEC1
002A 0E00      01472         MOVLW   HIGH(__str_5)
002C 6EE5      01473         MOVWF   POSTDEC1
002E 0E00      01474         MOVLW   LOW(__str_5)
0030 6EE5      01475         MOVWF   POSTDEC1
0032 0E00      01476         MOVLW   0x00
0034 6EE5      01477         MOVWF   POSTDEC1
0036 EC00 F000 01478         CALL    _display_string
003A 0E04      01479         MOVLW   0x04
003C 26E1      01480         ADDWF   FSR1L, F
               01481 ;       .line   161; src/clock.c        display_string(START_SECOND_LINE, choice_string);
003E 5000      01482         MOVF    r0x02, W
0040 6EE5      01483         MOVWF   POSTDEC1
0042 5000      01484         MOVF    r0x01, W
0044 6EE5      01485         MOVWF   POSTDEC1
0046 5000      01486         MOVF    r0x00, W
0048 6EE5      01487         MOVWF   POSTDEC1
004A 0E10      01488         MOVLW   0x10
004C 6EE5      01489         MOVWF   POSTDEC1
004E EC00 F000 01490         CALL    _display_string
0052 0E04      01491         MOVLW   0x04
0054 26E1      01492         ADDWF   FSR1L, F
0056 CFE4 F000 01493         MOVFF   PREINC1, r0x02
005A CFE4 F000 01494         MOVFF   PREINC1, r0x01
005E CFE4 F000 01495         MOVFF   PREINC1, r0x00
0062 CFE4 FFD9 01496         MOVFF   PREINC1, FSR2L
0066 0012      01497         RETURN  
               01498 
               01499 ; ; Starting pCode block
               01500 S_clock__init_config    code
0000 01501 _init_config:
               01502 ;       .line   102; src/clock.c        void init_config(void){
0000 CFD9 FFE5 01503         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01504         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01505         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01506         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01507         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01508         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01509         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01510         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01511         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01512         MOVFF   r0x07, POSTDEC1
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01513 ;       .line   104; src/clock.c        int choice = CONFIG_MODE_ALARM;
0028 6A00      01514         CLRF    r0x00
002A 6A00      01515         CLRF    r0x01
               01516 ;       .line   105; src/clock.c        char *choice_string = CM_ALARM_STRING;
002C 0E00      01517         MOVLW   LOW(__str_0)
002E 6E00      01518         MOVWF   r0x02
0030 0E00      01519         MOVLW   HIGH(__str_0)
0032 6E00      01520         MOVWF   r0x03
0034 0E00      01521         MOVLW   UPPER(__str_0)
0036 6E00      01522         MOVWF   r0x04
               01523 ;       .line   106; src/clock.c        config_mode_on = 1;
0038 0E01      01524         MOVLW   0x01
003A 0000      01525         BANKSEL _config_mode_on
003C 6F00      01526         MOVWF   _config_mode_on, B
003E 0000      01527         BANKSEL (_config_mode_on + 1)
0040 6B00      01528         CLRF    (_config_mode_on + 1), B
               01529 ;       .line   107; src/clock.c        display_config_mode(choice_string);
0042 5000      01530         MOVF    r0x04, W
0044 6EE5      01531         MOVWF   POSTDEC1
0046 5000      01532         MOVF    r0x03, W
0048 6EE5      01533         MOVWF   POSTDEC1
004A 5000      01534         MOVF    r0x02, W
004C 6EE5      01535         MOVWF   POSTDEC1
004E EC00 F000 01536         CALL    _display_config_mode
0052 0E03      01537         MOVLW   0x03
0054 26E1      01538         ADDWF   FSR1L, F
0056 01539 _00143_DS_:
               01540 ;       .line   109; src/clock.c        if(read_and_clear(&but2_pressed)){
0056 0E00      01541         MOVLW   HIGH(_but2_pressed)
0058 6E00      01542         MOVWF   r0x06
005A 0E00      01543         MOVLW   LOW(_but2_pressed)
005C 6E00      01544         MOVWF   r0x05
005E 0E80      01545         MOVLW   0x80
0060 6E00      01546         MOVWF   r0x07
0062 5000      01547         MOVF    r0x07, W
0064 6EE5      01548         MOVWF   POSTDEC1
0066 5000      01549         MOVF    r0x06, W
0068 6EE5      01550         MOVWF   POSTDEC1
006A 5000      01551         MOVF    r0x05, W
006C 6EE5      01552         MOVWF   POSTDEC1
006E EC00 F000 01553         CALL    _read_and_clear
0072 6E00      01554         MOVWF   r0x05
0074 CFF3 F000 01555         MOVFF   PRODL, r0x06
0078 0E03      01556         MOVLW   0x03
007A 26E1      01557         ADDWF   FSR1L, F
007C 5000      01558         MOVF    r0x05, W
007E 1000      01559         IORWF   r0x06, W
0080 B4D8      01560         BTFSC   STATUS, 2
0082 D000      01561         BRA     _00135_DS_
               01562 ;       .line   111; src/clock.c        switch(choice){
0084 5000      01563         MOVF    r0x00, W
0086 E100      01564         BNZ     _00155_DS_
0088 5000      01565         MOVF    r0x01, W
008A E000      01566         BZ      _00130_DS_
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008C 01567 _00155_DS_:
008C 5000      01568         MOVF    r0x00, W
008E 0A01      01569         XORLW   0x01
0090 E100      01570         BNZ     _00157_DS_
0092 5000      01571         MOVF    r0x01, W
0094 E000      01572         BZ      _00131_DS_
0096 01573 _00157_DS_:
0096 D000      01574         BRA     _00132_DS_
0098 01575 _00130_DS_:
               01576 ;       .line   114; src/clock.c        LCDErase();
0098 EC00 F000 01577         CALL    _LCDErase
               01578 ;       .line   115; src/clock.c        init_time(_alarm, SM_ALARM_STRING);                     
009C 0E00      01579         MOVLW   UPPER(__str_1)
009E 6EE5      01580         MOVWF   POSTDEC1
00A0 0E00      01581         MOVLW   HIGH(__str_1)
00A2 6EE5      01582         MOVWF   POSTDEC1
00A4 0E00      01583         MOVLW   LOW(__str_1)
00A6 6EE5      01584         MOVWF   POSTDEC1
00A8 0000      01585         BANKSEL (__alarm + 2)
00AA 5100      01586         MOVF    (__alarm + 2), W, B
00AC 6EE5      01587         MOVWF   POSTDEC1
00AE 0000      01588         BANKSEL (__alarm + 1)
00B0 5100      01589         MOVF    (__alarm + 1), W, B
00B2 6EE5      01590         MOVWF   POSTDEC1
00B4 0000      01591         BANKSEL __alarm
00B6 5100      01592         MOVF    __alarm, W, B
00B8 6EE5      01593         MOVWF   POSTDEC1
00BA EC00 F000 01594         CALL    _init_time
00BE 0E06      01595         MOVLW   0x06
00C0 26E1      01596         ADDWF   FSR1L, F
               01597 ;       .line   116; src/clock.c        display_config_mode(choice_string);
00C2 5000      01598         MOVF    r0x04, W
00C4 6EE5      01599         MOVWF   POSTDEC1
00C6 5000      01600         MOVF    r0x03, W
00C8 6EE5      01601         MOVWF   POSTDEC1
00CA 5000      01602         MOVF    r0x02, W
00CC 6EE5      01603         MOVWF   POSTDEC1
00CE EC00 F000 01604         CALL    _display_config_mode
00D2 0E03      01605         MOVLW   0x03
00D4 26E1      01606         ADDWF   FSR1L, F
               01607 ;       .line   117; src/clock.c        break;
00D6 D000      01608         BRA     _00135_DS_
00D8 01609 _00131_DS_:
               01610 ;       .line   120; src/clock.c        LCDErase();
00D8 EC00 F000 01611         CALL    _LCDErase
               01612 ;       .line   121; src/clock.c        init_time(_time, SM_CLOCK_STRING);                      
00DC 0E00      01613         MOVLW   UPPER(__str_2)
00DE 6EE5      01614         MOVWF   POSTDEC1
00E0 0E00      01615         MOVLW   HIGH(__str_2)
00E2 6EE5      01616         MOVWF   POSTDEC1
00E4 0E00      01617         MOVLW   LOW(__str_2)
00E6 6EE5      01618         MOVWF   POSTDEC1
00E8 0000      01619         BANKSEL (__time + 2)
00EA 5100      01620         MOVF    (__time + 2), W, B
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00EC 6EE5      01621         MOVWF   POSTDEC1
00EE 0000      01622         BANKSEL (__time + 1)
00F0 5100      01623         MOVF    (__time + 1), W, B
00F2 6EE5      01624         MOVWF   POSTDEC1
00F4 0000      01625         BANKSEL __time
00F6 5100      01626         MOVF    __time, W, B
00F8 6EE5      01627         MOVWF   POSTDEC1
00FA EC00 F000 01628         CALL    _init_time
00FE 0E06      01629         MOVLW   0x06
0100 26E1      01630         ADDWF   FSR1L, F
               01631 ;       .line   122; src/clock.c        display_config_mode(choice_string);
0102 5000      01632         MOVF    r0x04, W
0104 6EE5      01633         MOVWF   POSTDEC1
0106 5000      01634         MOVF    r0x03, W
0108 6EE5      01635         MOVWF   POSTDEC1
010A 5000      01636         MOVF    r0x02, W
010C 6EE5      01637         MOVWF   POSTDEC1
010E EC00 F000 01638         CALL    _display_config_mode
0112 0E03      01639         MOVLW   0x03
0114 26E1      01640         ADDWF   FSR1L, F
               01641 ;       .line   123; src/clock.c        break;
0116 D000      01642         BRA     _00135_DS_
0118 01643 _00132_DS_:
               01644 ;       .line   125; src/clock.c        LCDErase();
0118 EC00 F000 01645         CALL    _LCDErase
011C 0000      01646         BANKSEL _config_mode_on
               01647 ;       .line   126; src/clock.c        config_mode_on = 0;
011E 6B00      01648         CLRF    _config_mode_on, B
0120 0000      01649         BANKSEL (_config_mode_on + 1)
0122 6B00      01650         CLRF    (_config_mode_on + 1), B
               01651 ;       .line   127; src/clock.c        return;
0124 D000      01652         BRA     _00145_DS_
0126 01653 _00135_DS_:
               01654 ;       .line   130; src/clock.c        if(read_and_clear(&but1_pressed)){ 
0126 0E00      01655         MOVLW   HIGH(_but1_pressed)
0128 6E00      01656         MOVWF   r0x06
012A 0E00      01657         MOVLW   LOW(_but1_pressed)
012C 6E00      01658         MOVWF   r0x05
012E 0E80      01659         MOVLW   0x80
0130 6E00      01660         MOVWF   r0x07
0132 5000      01661         MOVF    r0x07, W
0134 6EE5      01662         MOVWF   POSTDEC1
0136 5000      01663         MOVF    r0x06, W
0138 6EE5      01664         MOVWF   POSTDEC1
013A 5000      01665         MOVF    r0x05, W
013C 6EE5      01666         MOVWF   POSTDEC1
013E EC00 F000 01667         CALL    _read_and_clear
0142 6E00      01668         MOVWF   r0x05
0144 CFF3 F000 01669         MOVFF   PRODL, r0x06
0148 0E03      01670         MOVLW   0x03
014A 26E1      01671         ADDWF   FSR1L, F
014C 5000      01672         MOVF    r0x05, W
014E 1000      01673         IORWF   r0x06, W
0150 B4D8      01674         BTFSC   STATUS, 2
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0152 D000      01675         BRA     _00143_DS_
               01676 ;       .line   132; src/clock.c        switch(choice){
0154 5000      01677         MOVF    r0x01, W
0156 0F80      01678         ADDLW   0x80
0158 0F81      01679         ADDLW   0x81
015A E100      01680         BNZ     _00158_DS_
015C 0EFF      01681         MOVLW   0xff
015E 5C00      01682         SUBWF   r0x00, W
0160 01683 _00158_DS_:
0160 A0D8      01684         BTFSS   STATUS, 0
0162 D000      01685         BRA     _00143_DS_
0164 5000      01686         MOVF    r0x01, W
0166 0F80      01687         ADDLW   0x80
0168 0F80      01688         ADDLW   0x80
016A E100      01689         BNZ     _00159_DS_
016C 0E02      01690         MOVLW   0x02
016E 5C00      01691         SUBWF   r0x00, W
0170 01692 _00159_DS_:
0170 B0D8      01693         BTFSC   STATUS, 0
0172 D000      01694         BRA     _00143_DS_
0174 2800      01695         INCF    r0x00, W
0176 6E00      01696         MOVWF   r0x05
0178 C000 FFE5 01697         MOVFF   r0x08, POSTDEC1
017C C000 FFE5 01698         MOVFF   r0x09, POSTDEC1
0180 6A00      01699         CLRF    r0x09
0182 3400      01700         RLCF    r0x05, W
0184 3600      01701         RLCF    r0x09, F
0186 34E8      01702         RLCF    WREG, W
0188 3600      01703         RLCF    r0x09, F
018A 0BFC      01704         ANDLW   0xfc
018C 6E00      01705         MOVWF   r0x08
018E 0E00      01706         MOVLW   UPPER(_00160_DS_)
0190 6EFB      01707         MOVWF   PCLATU
0192 0E00      01708         MOVLW   HIGH(_00160_DS_)
0194 6EFA      01709         MOVWF   PCLATH
0196 0E00      01710         MOVLW   LOW(_00160_DS_)
0198 2600      01711         ADDWF   r0x08, F
019A 5000      01712         MOVF    r0x09, W
019C 22FA      01713         ADDWFC  PCLATH, F
019E B0D8      01714         BTFSC   STATUS, 0
01A0 2AFB      01715         INCF    PCLATU, F
01A2 5000      01716         MOVF    r0x08, W
01A4 CFE4 F000 01717         MOVFF   PREINC1, r0x09
01A8 CFE4 F000 01718         MOVFF   PREINC1, r0x08
01AC 6EF9      01719         MOVWF   PCL
01AE 01720 _00160_DS_:
01AE EF00 F000 01721         GOTO    _00136_DS_
01B2 EF00 F000 01722         GOTO    _00137_DS_
01B6 EF00 F000 01723         GOTO    _00138_DS_
01BA 01724 _00136_DS_:
               01725 ;       .line   135; src/clock.c        LCDErase();
01BA EC00 F000 01726         CALL    _LCDErase
               01727 ;       .line   136; src/clock.c        choice = CONFIG_MODE_ALARM;
01BE 6A00      01728         CLRF    r0x00
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01C0 6A00      01729         CLRF    r0x01
               01730 ;       .line   137; src/clock.c        choice_string = CM_ALARM_STRING;
01C2 0E00      01731         MOVLW   LOW(__str_0)
01C4 6E00      01732         MOVWF   r0x02
01C6 0E00      01733         MOVLW   HIGH(__str_0)
01C8 6E00      01734         MOVWF   r0x03
01CA 0E00      01735         MOVLW   UPPER(__str_0)
01CC 6E00      01736         MOVWF   r0x04
               01737 ;       .line   138; src/clock.c        display_config_mode(choice_string);
01CE 5000      01738         MOVF    r0x04, W
01D0 6EE5      01739         MOVWF   POSTDEC1
01D2 5000      01740         MOVF    r0x03, W
01D4 6EE5      01741         MOVWF   POSTDEC1
01D6 5000      01742         MOVF    r0x02, W
01D8 6EE5      01743         MOVWF   POSTDEC1
01DA EC00 F000 01744         CALL    _display_config_mode
01DE 0E03      01745         MOVLW   0x03
01E0 26E1      01746         ADDWF   FSR1L, F
               01747 ;       .line   139; src/clock.c        break;
01E2 D000      01748         BRA     _00143_DS_
01E4 01749 _00137_DS_:
               01750 ;       .line   142; src/clock.c        LCDErase();
01E4 EC00 F000 01751         CALL    _LCDErase
               01752 ;       .line   143; src/clock.c        choice = CONFIG_MODE_CLOCK;
01E8 0E01      01753         MOVLW   0x01
01EA 6E00      01754         MOVWF   r0x00
01EC 6A00      01755         CLRF    r0x01
               01756 ;       .line   144; src/clock.c        choice_string = CM_CLOCK_STRING;
01EE 0E00      01757         MOVLW   LOW(__str_3)
01F0 6E00      01758         MOVWF   r0x02
01F2 0E00      01759         MOVLW   HIGH(__str_3)
01F4 6E00      01760         MOVWF   r0x03
01F6 0E00      01761         MOVLW   UPPER(__str_3)
01F8 6E00      01762         MOVWF   r0x04
               01763 ;       .line   145; src/clock.c        display_config_mode(choice_string);
01FA 5000      01764         MOVF    r0x04, W
01FC 6EE5      01765         MOVWF   POSTDEC1
01FE 5000      01766         MOVF    r0x03, W
0200 6EE5      01767         MOVWF   POSTDEC1
0202 5000      01768         MOVF    r0x02, W
0204 6EE5      01769         MOVWF   POSTDEC1
0206 EC00 F000 01770         CALL    _display_config_mode
020A 0E03      01771         MOVLW   0x03
020C 26E1      01772         ADDWF   FSR1L, F
               01773 ;       .line   146; src/clock.c        break;
020E D000      01774         BRA     _00143_DS_
0210 01775 _00138_DS_:
               01776 ;       .line   149; src/clock.c        LCDErase();
0210 EC00 F000 01777         CALL    _LCDErase
               01778 ;       .line   150; src/clock.c        choice =CONFIG_MODE_QUIT;
0214 0EFF      01779         MOVLW   0xff
0216 6E00      01780         MOVWF   r0x00
0218 6E00      01781         MOVWF   r0x01
               01782 ;       .line   151; src/clock.c        choice_string = CM_QUIT_STRING;
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
021A 0E00      01783         MOVLW   LOW(__str_4)
021C 6E00      01784         MOVWF   r0x02
021E 0E00      01785         MOVLW   HIGH(__str_4)
0220 6E00      01786         MOVWF   r0x03
0222 0E00      01787         MOVLW   UPPER(__str_4)
0224 6E00      01788         MOVWF   r0x04
               01789 ;       .line   152; src/clock.c        display_config_mode(choice_string);
0226 5000      01790         MOVF    r0x04, W
0228 6EE5      01791         MOVWF   POSTDEC1
022A 5000      01792         MOVF    r0x03, W
022C 6EE5      01793         MOVWF   POSTDEC1
022E 5000      01794         MOVF    r0x02, W
0230 6EE5      01795         MOVWF   POSTDEC1
0232 EC00 F000 01796         CALL    _display_config_mode
0236 0E03      01797         MOVLW   0x03
0238 26E1      01798         ADDWF   FSR1L, F
               01799 ;       .line   154; src/clock.c        }
023A D000      01800         BRA     _00143_DS_
023C 01801 _00145_DS_:
023C CFE4 F000 01802         MOVFF   PREINC1, r0x07
0240 CFE4 F000 01803         MOVFF   PREINC1, r0x06
0244 CFE4 F000 01804         MOVFF   PREINC1, r0x05
0248 CFE4 F000 01805         MOVFF   PREINC1, r0x04
024C CFE4 F000 01806         MOVFF   PREINC1, r0x03
0250 CFE4 F000 01807         MOVFF   PREINC1, r0x02
0254 CFE4 F000 01808         MOVFF   PREINC1, r0x01
0258 CFE4 F000 01809         MOVFF   PREINC1, r0x00
025C CFE4 FFD9 01810         MOVFF   PREINC1, FSR2L
0260 0012      01811         RETURN  
               01812 
               01813 ; ; Starting pCode block
               01814 S_clock__alarm_led      code
0000 01815 _alarm_led:
               01816 ;       .line   98; src/clock.c void alarm_led(void){
0000 CFD9 FFE5 01817         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01818         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01819         MOVFF   r0x00, POSTDEC1
               01820 ;       .line   99; src/clock.c LED1_IO^=1;
000C 6A00      01821         CLRF    r0x00
000E B200      01822         BTFSC   _LATJbits, 1
0010 2A00      01823         INCF    r0x00, F
0012 0E01      01824         MOVLW   0x01
0014 1A00      01825         XORWF   r0x00, F
0016 5000      01826         MOVF    r0x00, W
0018 0B01      01827         ANDLW   0x01
001A 44E8      01828         RLNCF   WREG, W
001C 6EF4      01829         MOVWF   PRODH
001E 5000      01830         MOVF    _LATJbits, W
0020 0BFD      01831         ANDLW   0xfd
0022 10F4      01832         IORWF   PRODH, W
0024 6E00      01833         MOVWF   _LATJbits
               01834 ;       .line   100; src/clock.c        LED2_IO^=1;
0026 6A00      01835         CLRF    r0x00
0028 B400      01836         BTFSC   _LATJbits, 2
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
002A 2A00      01837         INCF    r0x00, F
002C 0E01      01838         MOVLW   0x01
002E 1A00      01839         XORWF   r0x00, F
0030 5000      01840         MOVF    r0x00, W
0032 0B01      01841         ANDLW   0x01
0034 44E8      01842         RLNCF   WREG, W
0036 44E8      01843         RLNCF   WREG, W
0038 6EF4      01844         MOVWF   PRODH
003A 5000      01845         MOVF    _LATJbits, W
003C 0BFB      01846         ANDLW   0xfb
003E 10F4      01847         IORWF   PRODH, W
0040 6E00      01848         MOVWF   _LATJbits
0042 CFE4 F000 01849         MOVFF   PREINC1, r0x00
0046 CFE4 FFD9 01850         MOVFF   PREINC1, FSR2L
004A 0012      01851         RETURN  
               01852 
               01853 ; ; Starting pCode block
               01854 S_clock__toggle_led     code
0000 01855 _toggle_led:
               01856 ;       .line   94; src/clock.c void toggle_led(void){
0000 CFD9 FFE5 01857         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01858         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01859         MOVFF   r0x00, POSTDEC1
               01860 ;       .line   95; src/clock.c LED0_IO^=1;
000C 6A00      01861         CLRF    r0x00
000E B000      01862         BTFSC   _LATJbits, 0
0010 2A00      01863         INCF    r0x00, F
0012 0E01      01864         MOVLW   0x01
0014 1A00      01865         XORWF   r0x00, F
0016 5000      01866         MOVF    r0x00, W
0018 0B01      01867         ANDLW   0x01
001A 6EF4      01868         MOVWF   PRODH
001C 5000      01869         MOVF    _LATJbits, W
001E 0BFE      01870         ANDLW   0xfe
0020 10F4      01871         IORWF   PRODH, W
0022 6E00      01872         MOVWF   _LATJbits
0024 CFE4 F000 01873         MOVFF   PREINC1, r0x00
0028 CFE4 FFD9 01874         MOVFF   PREINC1, FSR2L
002C 0012      01875         RETURN  
               01876 
               01877 ; ; Starting pCode block
               01878 S_clock__update_display code
0000 01879 _update_display:
               01880 ;       .line   89; src/clock.c void update_display(void){
0000 CFD9 FFE5 01881         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01882         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01883         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01884         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01885         MOVFF   r0x02, POSTDEC1
               01886 ;       .line   90; src/clock.c time_print(_time, display_line);
0014 0E00      01887         MOVLW   HIGH(_display_line)
0016 6E00      01888         MOVWF   r0x01
0018 0E00      01889         MOVLW   LOW(_display_line)
001A 6E00      01890         MOVWF   r0x00
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
001C 0E80      01891         MOVLW   0x80
001E 6E00      01892         MOVWF   r0x02
0020 5000      01893         MOVF    r0x02, W
0022 6EE5      01894         MOVWF   POSTDEC1
0024 5000      01895         MOVF    r0x01, W
0026 6EE5      01896         MOVWF   POSTDEC1
0028 5000      01897         MOVF    r0x00, W
002A 6EE5      01898         MOVWF   POSTDEC1
002C 0000      01899         BANKSEL (__time + 2)
002E 5100      01900         MOVF    (__time + 2), W, B
0030 6EE5      01901         MOVWF   POSTDEC1
0032 0000      01902         BANKSEL (__time + 1)
0034 5100      01903         MOVF    (__time + 1), W, B
0036 6EE5      01904         MOVWF   POSTDEC1
0038 0000      01905         BANKSEL __time
003A 5100      01906         MOVF    __time, W, B
003C 6EE5      01907         MOVWF   POSTDEC1
003E EC00 F000 01908         CALL    _time_print
0042 0E06      01909         MOVLW   0x06
0044 26E1      01910         ADDWF   FSR1L, F
               01911 ;       .line   91; src/clock.c display_string(0, display_line);
0046 0E00      01912         MOVLW   HIGH(_display_line)
0048 6E00      01913         MOVWF   r0x01
004A 0E00      01914         MOVLW   LOW(_display_line)
004C 6E00      01915         MOVWF   r0x00
004E 0E80      01916         MOVLW   0x80
0050 6E00      01917         MOVWF   r0x02
0052 5000      01918         MOVF    r0x02, W
0054 6EE5      01919         MOVWF   POSTDEC1
0056 5000      01920         MOVF    r0x01, W
0058 6EE5      01921         MOVWF   POSTDEC1
005A 5000      01922         MOVF    r0x00, W
005C 6EE5      01923         MOVWF   POSTDEC1
005E 0E00      01924         MOVLW   0x00
0060 6EE5      01925         MOVWF   POSTDEC1
0062 EC00 F000 01926         CALL    _display_string
0066 0E04      01927         MOVLW   0x04
0068 26E1      01928         ADDWF   FSR1L, F
006A CFE4 F000 01929         MOVFF   PREINC1, r0x02
006E CFE4 F000 01930         MOVFF   PREINC1, r0x01
0072 CFE4 F000 01931         MOVFF   PREINC1, r0x00
0076 CFE4 FFD9 01932         MOVFF   PREINC1, FSR2L
007A 0012      01933         RETURN  
               01934 
               01935 ; ; Starting pCode block
007C 01936 __str_0:
007C 6553 2074 01937         DB      0x53, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x3f, 0x00
     6C61 7261 
     3F6D 0000 
               01938 ; ; Starting pCode block
0088 01939 __str_1:
0088 6553 2074 01940         DB      0x53, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x3a, 0x00
     6C61 7261 
     3A6D 0000 
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01941 ; ; Starting pCode block
0094 01942 __str_2:
0094 6553 2074 01943         DB      0x53, 0x65, 0x74, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x3a, 0x00
     6C63 636F 
     3A6B 0000 
               01944 ; ; Starting pCode block
00A0 01945 __str_3:
00A0 6553 2074 01946         DB      0x53, 0x65, 0x74, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x3f, 0x00
     6C63 636F 
     3F6B 0000 
               01947 ; ; Starting pCode block
00AC 01948 __str_4:
00AC 7551 7469 01949         DB      0x51, 0x75, 0x69, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20
     6320 6E6F 
     6966 2067 
00B8 6F6D 6564 01950         DB      0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x00
     002E      
               01951 ; ; Starting pCode block
00BE 01952 __str_5:
00BE 6843 6F6F 01953         DB      0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x3a
     6573 6D20 
     646F 3A65 
00CA 0000      01954         DB      0x00
               01955 ; ; Starting pCode block
00CC 01956 __str_6:
00CC 6F48 7275 01957         DB      0x48, 0x6f, 0x75, 0x72, 0x73, 0x3a, 0x00
     3A73 0000 
               01958 ; ; Starting pCode block
00D4 01959 __str_7:
00D4 694D 756E 01960         DB      0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x3a, 0x00
     6574 3A73 
     0000      
               01961 ; ; Starting pCode block
00DE 01962 __str_8:
00DE 6553 6F63 01963         DB      0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x3a, 0x00
     646E 3A73 
     0000      
               01964 ; ; Starting pCode block
00E8 01965 __str_9:
00E8 3025 6432 01966         DB      0x25, 0x30, 0x32, 0x64, 0x00
     0000      
               01967 
               01968 
               01969 ; Statistics:
               01970 ; code size:     2908 (0x0b5c) bytes ( 2.22%)
               01971 ;                1454 (0x05ae) words
               01972 ; udata size:      41 (0x0029) bytes ( 1.07%)
               01973 ; access size:     13 (0x000d) bytes
               01974 
               01975 
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

BSR                               00000FE0
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00108_DS_                        0000002E
_00130_DS_                        00000098
_00131_DS_                        000000D8
_00132_DS_                        00000118
_00135_DS_                        00000126
_00136_DS_                        000001BA
_00137_DS_                        000001E4
_00138_DS_                        00000210
_00143_DS_                        00000056
_00145_DS_                        0000023C
_00155_DS_                        0000008C
_00157_DS_                        00000096
_00158_DS_                        00000160
_00159_DS_                        00000170
_00160_DS_                        000001AE
_00176_DS_                        00000064
_00177_DS_                        00000068
_00182_DS_                        000000D6
_00189_DS_                        00000138
_00191_DS_                        00000188
_00195_DS_                        000000C0
_00197_DS_                        000001BC
_00202_DS_                        00000090
_00206_DS_                        000000DE
_00210_DS_                        00000088
_00226_DS_                        00000056
_00227_DS_                        00000060
_00229_DS_                        00000068
_00231_DS_                        00000086
_00233_DS_                        00000106
_00237_DS_                        0000013E
_00244_DS_                        000000B4
_00245_DS_                        0000017C
_00248_DS_                        0000017E
_00262_DS_                        00000040
_00266_DS_                        00000094
_00267_DS_                        000000AC
_00268_DS_                        000000AE
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00269_DS_                        000000C2
_00270_DS_                        000000C4
_00271_DS_                        0000012C
_00272_DS_                        0000012E
_10277_DS_                        0000009E
_20278_DS_                        0000011A
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCON1                         00000000
_BAUDCON1bits                     00000000
_BAUDCON2                         00000000
_BAUDCON2bits                     00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTL1                         00000000
_BAUDCTL1bits                     00000000
_BAUDCTL2                         00000000
_BAUDCTL2bits                     00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCP3CON                          00000000
_CCP3CONbits                      00000000
_CCP4CON                          00000000
_CCP4CONbits                      00000000
_CCP5CON                          00000000
_CCP5CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CCPR3                            00000000
_CCPR3H                           00000000
_CCPR3L                           00000000
_CCPR4                            00000000
_CCPR4H                           00000000
_CCPR4L                           00000000
_CCPR5                            00000000
_CCPR5H                           00000000
_CCPR5L                           00000000
_CMCON                            00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_DDRA                             00000000
_DDRAbits                         00000000
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_DDRF                             00000000
_DDRFbits                         00000000
_DDRG                             00000000
_DDRGbits                         00000000
_DDRH                             00000000
_DDRHbits                         00000000
_DDRJ                             00000000
_DDRJbits                         00000000
_EBSTCON                          00000000
_EBSTCONbits                      00000000
_EBSTCS                           00000000
_EBSTCSH                          00000000
_EBSTCSL                          00000000
_EBSTSD                           00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_ECCP2AS                          00000000
_ECCP2ASbits                      00000000
_ECCP2CON                         00000000
_ECCP2CONbits                     00000000
_ECCP2DEL                         00000000
_ECCP2DELbits                     00000000
_ECCP3AS                          00000000
_ECCP3ASbits                      00000000
_ECCP3CON                         00000000
_ECCP3CONbits                     00000000
_ECCP3DEL                         00000000
_ECCP3DELbits                     00000000
_ECON1                            00000000
_ECON1bits                        00000000
_ECON2                            00000000
_ECON2bits                        00000000
_EDATA                            00000000
_EDATAbits                        00000000
_EDMACS                           00000000
_EDMACSH                          00000000
_EDMACSL                          00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EDMADST                          00000000
_EDMADSTH                         00000000
_EDMADSTL                         00000000
_EDMAND                           00000000
_EDMANDH                          00000000
_EDMANDL                          00000000
_EDMAST                           00000000
_EDMASTH                          00000000
_EDMASTL                          00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EFLOCON                          00000000
_EFLOCONbits                      00000000
_EHT0                             00000000
_EHT1                             00000000
_EHT2                             00000000
_EHT3                             00000000
_EHT4                             00000000
_EHT5                             00000000
_EHT6                             00000000
_EHT7                             00000000
_EIE                              00000000
_EIEbits                          00000000
_EIR                              00000000
_EIRbits                          00000000
_EPAUS                            00000000
_EPAUSH                           00000000
_EPAUSL                           00000000
_EPKTCNT                          00000000
_EPMCS                            00000000
_EPMCSH                           00000000
_EPMCSL                           00000000
_EPMM0                            00000000
_EPMM1                            00000000
_EPMM2                            00000000
_EPMM3                            00000000
_EPMM4                            00000000
_EPMM5                            00000000
_EPMM6                            00000000
_EPMM7                            00000000
_EPMO                             00000000
_EPMOH                            00000000
_EPMOL                            00000000
_ERDPT                            00000000
_ERDPTH                           00000000
_ERDPTL                           00000000
_ERXFCON                          00000000
_ERXFCONbits                      00000000
_ERXND                            00000000
_ERXNDH                           00000000
_ERXNDL                           00000000
_ERXRDPT                          00000000
_ERXRDPTH                         00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_ERXRDPTL                         00000000
_ERXST                            00000000
_ERXSTH                           00000000
_ERXSTL                           00000000
_ERXWRPT                          00000000
_ERXWRPTH                         00000000
_ERXWRPTL                         00000000
_ESTAT                            00000000
_ESTATbits                        00000000
_ETXND                            00000000
_ETXNDH                           00000000
_ETXNDL                           00000000
_ETXST                            00000000
_ETXSTH                           00000000
_ETXSTL                           00000000
_EWOLIE                           00000000
_EWOLIEbits                       00000000
_EWOLIR                           00000000
_EWOLIRbits                       00000000
_EWRPT                            00000000
_EWRPTH                           00000000
_EWRPTL                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_IPR3                             00000000
_IPR3bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LATF                             00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_LATFbits                         00000000
_LATG                             00000000
_LATGbits                         00000000
_LATH                             00000000
_LATHbits                         00000000
_LATJ                             00000000
_LATJbits                         00000000
_LCDErase                         00000000
_LCDInit                          00000000
_LCDText                          00000000
_LCDUpdate                        00000000
_MAADR1                           00000000
_MAADR2                           00000000
_MAADR3                           00000000
_MAADR4                           00000000
_MAADR5                           00000000
_MAADR6                           00000000
_MABBIPG                          00000000
_MACLCON1                         00000000
_MACLCON1bits                     00000000
_MACLCON2                         00000000
_MACLCON2bits                     00000000
_MACON1                           00000000
_MACON1bits                       00000000
_MACON2                           00000000
_MACON2bits                       00000000
_MACON3                           00000000
_MACON3bits                       00000000
_MACON4                           00000000
_MACON4bits                       00000000
_MAIPG                            00000000
_MAIPGH                           00000000
_MAIPGL                           00000000
_MAMXFL                           00000000
_MAMXFLH                          00000000
_MAMXFLL                          00000000
_MEMCON                           00000000
_MEMCONbits                       00000000
_MICMD                            00000000
_MICMDbits                        00000000
_MICON                            00000000
_MICONbits                        00000000
_MIRD                             00000000
_MIRDH                            00000000
_MIRDL                            00000000
_MIREGADR                         00000000
_MISTAT                           00000000
_MISTATbits                       00000000
_MIWR                             00000000
_MIWRH                            00000000
_MIWRL                            00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_OSCTUNEbits                      00000000
_PC                               00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIE3                             00000000
_PIE3bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PIR3                             00000000
_PIR3bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_PORTF                            00000000
_PORTFbits                        00000000
_PORTG                            00000000
_PORTGbits                        00000000
_PORTH                            00000000
_PORTHbits                        00000000
_PORTJ                            00000000
_PORTJbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PR4                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_PSPCON                           00000000
_PSPCONbits                       00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCREG1                           00000000
_RCREG2                           00000000
_RCSTA                            00000000
_RCSTA1                           00000000
_RCSTA1bits                       00000000
_RCSTA2                           00000000
_RCSTA2bits                       00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRG1                           00000000
_SPBRG2                           00000000
_SPBRGH                           00000000
_SPBRGH1                          00000000
_SPBRGH2                          00000000
_SSP1ADD                          00000000
_SSP1BUF                          00000000
_SSP1CON1                         00000000
_SSP1CON1bits                     00000000
_SSP1CON2                         00000000
_SSP1CON2bits                     00000000
_SSP1STAT                         00000000
_SSP1STATbits                     00000000
_SSP2ADD                          00000000
_SSP2BUF                          00000000
_SSP2CON1                         00000000
_SSP2CON1bits                     00000000
_SSP2CON2                         00000000
_SSP2CON2bits                     00000000
_SSP2STAT                         00000000
_SSP2STATbits                     00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_T4CON                            00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_T4CONbits                        00000000
_TABLAT                           00000000
_TBLPTR                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TMR4                             00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TRISF                            00000000
_TRISFbits                        00000000
_TRISG                            00000000
_TRISGbits                        00000000
_TRISH                            00000000
_TRISHbits                        00000000
_TRISJ                            00000000
_TRISJbits                        00000000
_TXREG                            00000000
_TXREG1                           00000000
_TXREG2                           00000000
_TXSTA                            00000000
_TXSTA1                           00000000
_TXSTA1bits                       00000000
_TXSTA2                           00000000
_TXSTA2bits                       00000000
_TXSTAbits                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F97J60                        00000001
__alarm                           00000000
__gptrget1                        00000000
__gptrget2                        00000000
__gptrput1                        00000000
__gptrput2                        00000000
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
__modsint                         00000000
__str_0                           0000007C
__str_1                           00000088
__str_2                           00000094
__str_3                           000000A0
__str_4                           000000AC
__str_5                           000000BE
__str_6                           000000CC
__str_7                           000000D4
__str_8                           000000DE
__str_9                           000000E8
__time                            00000000
_add_second                       00000000
_alarm_counter                    00000002
_alarm_going_off                  00000000
_alarm_led                        00000000
_but1_pressed                     00000006
_but2_pressed                     00000008
_config_called                    0000000E
_config_mode_clock                0000000C
_config_mode_on                   0000000A
_display_config_mode              00000000
_display_line                     00000000
_display_string                   00000000
_get_input                        00000000
_highPriorityInterruptHandler     00000000
_init                             00000000
_init_config                      00000000
_init_time                        00000000
_main                             00000000
_overflow_counter                 00000004
_read_and_clear                   00000000
_sprintf                          00000000
_stdin                            00000000
_stdout                           00000000
_strlen                           00000000
_time_create                      00000000
_time_equals                      00000000
_time_print                       00000000
_time_set                         00000000
_to_double_digits                 00000000
_to_double_digits_buffer_1_1      00000000
_toggle_led                       00000000
_update_display                   00000000
ivec_0x1_highPriorityInterruptHandler  00000008
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
gpasm-0.13.7 beta               objects/clock.asm11-16-2013  14:00:42         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

